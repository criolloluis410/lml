
Nodo_Intermedio_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800200  00002c24  00002cb8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002c24  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000034f  00800204  00800204  00002cbc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002cbc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002cec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000006f0  00000000  00000000  00002d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000a40d  00000000  00000000  0000341c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003da3  00000000  00000000  0000d829  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000cbf2  00000000  00000000  000115cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001778  00000000  00000000  0001e1c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0001f0fa  00000000  00000000  0001f938  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00006bd6  00000000  00000000  0003ea32  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000660  00000000  00000000  00045608  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000af9e  00000000  00000000  00045c68  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b8 c0       	rjmp	.+368    	; 0x172 <__ctors_end>
       2:	00 00       	nop
       4:	d7 c0       	rjmp	.+430    	; 0x1b4 <__bad_interrupt>
       6:	00 00       	nop
       8:	d5 c0       	rjmp	.+426    	; 0x1b4 <__bad_interrupt>
       a:	00 00       	nop
       c:	d3 c0       	rjmp	.+422    	; 0x1b4 <__bad_interrupt>
       e:	00 00       	nop
      10:	d1 c0       	rjmp	.+418    	; 0x1b4 <__bad_interrupt>
      12:	00 00       	nop
      14:	cf c0       	rjmp	.+414    	; 0x1b4 <__bad_interrupt>
      16:	00 00       	nop
      18:	cd c0       	rjmp	.+410    	; 0x1b4 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	cb c0       	rjmp	.+406    	; 0x1b4 <__bad_interrupt>
      1e:	00 00       	nop
      20:	c9 c0       	rjmp	.+402    	; 0x1b4 <__bad_interrupt>
      22:	00 00       	nop
      24:	c7 c0       	rjmp	.+398    	; 0x1b4 <__bad_interrupt>
      26:	00 00       	nop
      28:	c5 c0       	rjmp	.+394    	; 0x1b4 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	c3 c0       	rjmp	.+390    	; 0x1b4 <__bad_interrupt>
      2e:	00 00       	nop
      30:	c1 c0       	rjmp	.+386    	; 0x1b4 <__bad_interrupt>
      32:	00 00       	nop
      34:	bf c0       	rjmp	.+382    	; 0x1b4 <__bad_interrupt>
      36:	00 00       	nop
      38:	bd c0       	rjmp	.+378    	; 0x1b4 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	bb c0       	rjmp	.+374    	; 0x1b4 <__bad_interrupt>
      3e:	00 00       	nop
      40:	b9 c0       	rjmp	.+370    	; 0x1b4 <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 14 11 	jmp	0x2228	; 0x2228 <__vector_17>
      48:	0c 94 41 11 	jmp	0x2282	; 0x2282 <__vector_18>
      4c:	0c 94 6e 11 	jmp	0x22dc	; 0x22dc <__vector_19>
      50:	0c 94 e7 10 	jmp	0x21ce	; 0x21ce <__vector_20>
      54:	af c0       	rjmp	.+350    	; 0x1b4 <__bad_interrupt>
      56:	00 00       	nop
      58:	ad c0       	rjmp	.+346    	; 0x1b4 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	ab c0       	rjmp	.+342    	; 0x1b4 <__bad_interrupt>
      5e:	00 00       	nop
      60:	a9 c0       	rjmp	.+338    	; 0x1b4 <__bad_interrupt>
      62:	00 00       	nop
      64:	a7 c0       	rjmp	.+334    	; 0x1b4 <__bad_interrupt>
      66:	00 00       	nop
      68:	a5 c0       	rjmp	.+330    	; 0x1b4 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	a3 c0       	rjmp	.+326    	; 0x1b4 <__bad_interrupt>
      6e:	00 00       	nop
      70:	a1 c0       	rjmp	.+322    	; 0x1b4 <__bad_interrupt>
      72:	00 00       	nop
      74:	9f c0       	rjmp	.+318    	; 0x1b4 <__bad_interrupt>
      76:	00 00       	nop
      78:	9d c0       	rjmp	.+314    	; 0x1b4 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	9b c0       	rjmp	.+310    	; 0x1b4 <__bad_interrupt>
      7e:	00 00       	nop
      80:	0c 94 c8 11 	jmp	0x2390	; 0x2390 <__vector_32>
      84:	0c 94 f5 11 	jmp	0x23ea	; 0x23ea <__vector_33>
      88:	0c 94 22 12 	jmp	0x2444	; 0x2444 <__vector_34>
      8c:	0c 94 9b 11 	jmp	0x2336	; 0x2336 <__vector_35>
      90:	91 c0       	rjmp	.+290    	; 0x1b4 <__bad_interrupt>
      92:	00 00       	nop
      94:	8f c0       	rjmp	.+286    	; 0x1b4 <__bad_interrupt>
      96:	00 00       	nop
      98:	8d c0       	rjmp	.+282    	; 0x1b4 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	8b c0       	rjmp	.+278    	; 0x1b4 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	89 c0       	rjmp	.+274    	; 0x1b4 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	87 c0       	rjmp	.+270    	; 0x1b4 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0c 94 7c 12 	jmp	0x24f8	; 0x24f8 <__vector_42>
      ac:	0c 94 a9 12 	jmp	0x2552	; 0x2552 <__vector_43>
      b0:	0c 94 d6 12 	jmp	0x25ac	; 0x25ac <__vector_44>
      b4:	0c 94 4f 12 	jmp	0x249e	; 0x249e <__vector_45>
      b8:	7d c0       	rjmp	.+250    	; 0x1b4 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 30 13 	jmp	0x2660	; 0x2660 <__vector_47>
      c0:	0c 94 5d 13 	jmp	0x26ba	; 0x26ba <__vector_48>
      c4:	0c 94 8a 13 	jmp	0x2714	; 0x2714 <__vector_49>
      c8:	0c 94 03 13 	jmp	0x2606	; 0x2606 <__vector_50>
      cc:	73 c0       	rjmp	.+230    	; 0x1b4 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	71 c0       	rjmp	.+226    	; 0x1b4 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	6f c0       	rjmp	.+222    	; 0x1b4 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	6d c0       	rjmp	.+218    	; 0x1b4 <__bad_interrupt>
      da:	00 00       	nop
      dc:	6b c0       	rjmp	.+214    	; 0x1b4 <__bad_interrupt>
      de:	00 00       	nop
      e0:	69 c0       	rjmp	.+210    	; 0x1b4 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	0c 94 94 0b 	jmp	0x1728	; 0x1728 <__vector_57>
      e8:	0c 94 9e 0b 	jmp	0x173c	; 0x173c <__vector_58>
      ec:	0c 94 8a 0b 	jmp	0x1714	; 0x1714 <__vector_59>
      f0:	0c 94 09 0b 	jmp	0x1612	; 0x1612 <__vector_60>
      f4:	0c 94 34 0b 	jmp	0x1668	; 0x1668 <__vector_61>
      f8:	0c 94 a8 0b 	jmp	0x1750	; 0x1750 <__vector_62>
      fc:	0c 94 de 0a 	jmp	0x15bc	; 0x15bc <__vector_63>
     100:	0c 94 5f 0b 	jmp	0x16be	; 0x16be <__vector_64>
     104:	57 c0       	rjmp	.+174    	; 0x1b4 <__bad_interrupt>
     106:	00 00       	nop
     108:	55 c0       	rjmp	.+170    	; 0x1b4 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	53 c0       	rjmp	.+166    	; 0x1b4 <__bad_interrupt>
     10e:	00 00       	nop
     110:	51 c0       	rjmp	.+162    	; 0x1b4 <__bad_interrupt>
     112:	00 00       	nop
     114:	4f c0       	rjmp	.+158    	; 0x1b4 <__bad_interrupt>
     116:	00 00       	nop
     118:	0c 94 bc 0b 	jmp	0x1778	; 0x1778 <__vector_70>
     11c:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__vector_71>
     120:	0c 94 c6 0b 	jmp	0x178c	; 0x178c <__vector_72>
     124:	0c 94 d0 0b 	jmp	0x17a0	; 0x17a0 <__vector_73>
     128:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__vector_74>
     12c:	0c 94 e4 0b 	jmp	0x17c8	; 0x17c8 <__vector_75>
     130:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__vector_76>
     134:	61 08       	sbc	r6, r1
     136:	88 08       	sbc	r8, r8
     138:	7c 08       	sbc	r7, r12
     13a:	95 08       	sbc	r9, r5
     13c:	7c 08       	sbc	r7, r12
     13e:	54 08       	sbc	r5, r4
     140:	6e 08       	sbc	r6, r14
     142:	7c 08       	sbc	r7, r12
     144:	7c 08       	sbc	r7, r12
     146:	7c 08       	sbc	r7, r12
     148:	7c 08       	sbc	r7, r12
     14a:	7c 08       	sbc	r7, r12
     14c:	28 08       	sbc	r2, r8
     14e:	7c 08       	sbc	r7, r12
     150:	7c 08       	sbc	r7, r12
     152:	7c 08       	sbc	r7, r12
     154:	7c 08       	sbc	r7, r12
     156:	7c 08       	sbc	r7, r12
     158:	7c 08       	sbc	r7, r12
     15a:	b4 08       	sbc	r11, r4
     15c:	7c 08       	sbc	r7, r12
     15e:	7c 08       	sbc	r7, r12
     160:	ed 08       	sbc	r14, r13

00000162 <__trampolines_end>:
     162:	04 03       	mulsu	r16, r20
     164:	03 02       	muls	r16, r19
     166:	02 01       	movw	r0, r4
     168:	00 ff       	sbrs	r16, 0
     16a:	fe fd       	.word	0xfdfe	; ????
     16c:	fc fb       	.word	0xfbfc	; ????
     16e:	f9 f7       	brne	.-2      	; 0x16e <__trampolines_end+0xc>
     170:	f4 ef       	ldi	r31, 0xF4	; 244

00000172 <__ctors_end>:
     172:	11 24       	eor	r1, r1
     174:	1f be       	out	0x3f, r1	; 63
     176:	cf ef       	ldi	r28, 0xFF	; 255
     178:	d1 e8       	ldi	r29, 0x81	; 129
     17a:	de bf       	out	0x3e, r29	; 62
     17c:	cd bf       	out	0x3d, r28	; 61
     17e:	00 e0       	ldi	r16, 0x00	; 0
     180:	0c bf       	out	0x3c, r16	; 60

00000182 <__do_copy_data>:
     182:	12 e0       	ldi	r17, 0x02	; 2
     184:	a0 e0       	ldi	r26, 0x00	; 0
     186:	b2 e0       	ldi	r27, 0x02	; 2
     188:	e4 e2       	ldi	r30, 0x24	; 36
     18a:	fc e2       	ldi	r31, 0x2C	; 44
     18c:	00 e0       	ldi	r16, 0x00	; 0
     18e:	0b bf       	out	0x3b, r16	; 59
     190:	02 c0       	rjmp	.+4      	; 0x196 <__do_copy_data+0x14>
     192:	07 90       	elpm	r0, Z+
     194:	0d 92       	st	X+, r0
     196:	a4 30       	cpi	r26, 0x04	; 4
     198:	b1 07       	cpc	r27, r17
     19a:	d9 f7       	brne	.-10     	; 0x192 <__do_copy_data+0x10>

0000019c <__do_clear_bss>:
     19c:	25 e0       	ldi	r18, 0x05	; 5
     19e:	a4 e0       	ldi	r26, 0x04	; 4
     1a0:	b2 e0       	ldi	r27, 0x02	; 2
     1a2:	01 c0       	rjmp	.+2      	; 0x1a6 <.do_clear_bss_start>

000001a4 <.do_clear_bss_loop>:
     1a4:	1d 92       	st	X+, r1

000001a6 <.do_clear_bss_start>:
     1a6:	a3 35       	cpi	r26, 0x53	; 83
     1a8:	b2 07       	cpc	r27, r18
     1aa:	e1 f7       	brne	.-8      	; 0x1a4 <.do_clear_bss_loop>
     1ac:	0e 94 e5 14 	call	0x29ca	; 0x29ca <main>
     1b0:	0c 94 10 16 	jmp	0x2c20	; 0x2c20 <_exit>

000001b4 <__bad_interrupt>:
     1b4:	25 cf       	rjmp	.-438    	; 0x0 <__vectors>

000001b6 <common_tc_read_count>:
     1b6:	0e 94 8f 10 	call	0x211e	; 0x211e <tmr_read_count>
     1ba:	20 91 08 02 	lds	r18, 0x0208	; 0x800208 <timer_mul_var>
     1be:	22 23       	and	r18, r18
     1c0:	d9 f0       	breq	.+54     	; 0x1f8 <common_tc_read_count+0x42>
     1c2:	40 91 52 05 	lds	r20, 0x0552	; 0x800552 <timer_multiplier>
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	20 91 08 02 	lds	r18, 0x0208	; 0x800208 <timer_mul_var>
     1cc:	64 2f       	mov	r22, r20
     1ce:	73 2f       	mov	r23, r19
     1d0:	0e 94 0e 15 	call	0x2a1c	; 0x2a1c <__udivmodhi4>
     1d4:	fb 01       	movw	r30, r22
     1d6:	8f ef       	ldi	r24, 0xFF	; 255
     1d8:	9f ef       	ldi	r25, 0xFF	; 255
     1da:	64 2f       	mov	r22, r20
     1dc:	73 2f       	mov	r23, r19
     1de:	0e 94 0e 15 	call	0x2a1c	; 0x2a1c <__udivmodhi4>
     1e2:	30 e0       	ldi	r19, 0x00	; 0
     1e4:	62 9f       	mul	r22, r18
     1e6:	c0 01       	movw	r24, r0
     1e8:	63 9f       	mul	r22, r19
     1ea:	90 0d       	add	r25, r0
     1ec:	72 9f       	mul	r23, r18
     1ee:	90 0d       	add	r25, r0
     1f0:	11 24       	eor	r1, r1
     1f2:	8e 0f       	add	r24, r30
     1f4:	9f 1f       	adc	r25, r31
     1f6:	08 95       	ret
     1f8:	60 91 52 05 	lds	r22, 0x0552	; 0x800552 <timer_multiplier>
     1fc:	70 e0       	ldi	r23, 0x00	; 0
     1fe:	0e 94 0e 15 	call	0x2a1c	; 0x2a1c <__udivmodhi4>
     202:	cb 01       	movw	r24, r22
     204:	08 95       	ret

00000206 <common_tc_compare_stop>:
     206:	0e 94 94 10 	call	0x2128	; 0x2128 <tmr_disable_cc_interrupt>
     20a:	0e 94 b8 10 	call	0x2170	; 0x2170 <save_cpu_interrupt>
     20e:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <__data_end>
     212:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <__data_end+0x1>
     216:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <__data_end+0x2>
     21a:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <__data_end+0x3>
     21e:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <compare_value+0x1>
     222:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <compare_value>
     226:	0c 94 c5 10 	jmp	0x218a	; 0x218a <restore_cpu_interrupt>

0000022a <common_tc_overflow_stop>:
     22a:	0e 94 a2 10 	call	0x2144	; 0x2144 <tmr_disable_ovf_interrupt>
     22e:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <timer_mul_var>
     232:	08 95       	ret

00000234 <common_tc_stop>:
     234:	e8 df       	rcall	.-48     	; 0x206 <common_tc_compare_stop>
     236:	f9 df       	rcall	.-14     	; 0x22a <common_tc_overflow_stop>
     238:	0c 94 a9 10 	jmp	0x2152	; 0x2152 <tmr_stop>

0000023c <common_tc_delay>:
     23c:	0f 93       	push	r16
     23e:	1f 93       	push	r17
     240:	cf 93       	push	r28
     242:	df 93       	push	r29
     244:	ec 01       	movw	r28, r24
     246:	0e 94 8f 10 	call	0x211e	; 0x211e <tmr_read_count>
     24a:	8c 01       	movw	r16, r24
     24c:	be 01       	movw	r22, r28
     24e:	80 e0       	ldi	r24, 0x00	; 0
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	20 91 52 05 	lds	r18, 0x0552	; 0x800552 <timer_multiplier>
     256:	30 e0       	ldi	r19, 0x00	; 0
     258:	40 e0       	ldi	r20, 0x00	; 0
     25a:	50 e0       	ldi	r21, 0x00	; 0
     25c:	0e 94 ff 14 	call	0x29fe	; 0x29fe <__mulsi3>
     260:	dc 01       	movw	r26, r24
     262:	cb 01       	movw	r24, r22
     264:	a8 01       	movw	r20, r16
     266:	60 e0       	ldi	r22, 0x00	; 0
     268:	70 e0       	ldi	r23, 0x00	; 0
     26a:	48 0f       	add	r20, r24
     26c:	59 1f       	adc	r21, r25
     26e:	6a 1f       	adc	r22, r26
     270:	7b 1f       	adc	r23, r27
     272:	40 93 04 02 	sts	0x0204, r20	; 0x800204 <__data_end>
     276:	50 93 05 02 	sts	0x0205, r21	; 0x800205 <__data_end+0x1>
     27a:	60 93 06 02 	sts	0x0206, r22	; 0x800206 <__data_end+0x2>
     27e:	70 93 07 02 	sts	0x0207, r23	; 0x800207 <__data_end+0x3>
     282:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__data_end>
     286:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__data_end+0x1>
     28a:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <__data_end+0x2>
     28e:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <__data_end+0x3>
     292:	ab 01       	movw	r20, r22
     294:	66 27       	eor	r22, r22
     296:	77 27       	eor	r23, r23
     298:	40 93 04 02 	sts	0x0204, r20	; 0x800204 <__data_end>
     29c:	50 93 05 02 	sts	0x0205, r21	; 0x800205 <__data_end+0x1>
     2a0:	60 93 06 02 	sts	0x0206, r22	; 0x800206 <__data_end+0x2>
     2a4:	70 93 07 02 	sts	0x0207, r23	; 0x800207 <__data_end+0x3>
     2a8:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__data_end>
     2ac:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__data_end+0x1>
     2b0:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <__data_end+0x2>
     2b4:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <__data_end+0x3>
     2b8:	41 15       	cp	r20, r1
     2ba:	51 05       	cpc	r21, r1
     2bc:	61 05       	cpc	r22, r1
     2be:	71 05       	cpc	r23, r1
     2c0:	91 f0       	breq	.+36     	; 0x2e6 <common_tc_delay+0xaa>
     2c2:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__data_end>
     2c6:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__data_end+0x1>
     2ca:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <__data_end+0x2>
     2ce:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <__data_end+0x3>
     2d2:	01 96       	adiw	r24, 0x01	; 1
     2d4:	08 0f       	add	r16, r24
     2d6:	19 1f       	adc	r17, r25
     2d8:	10 93 0a 02 	sts	0x020A, r17	; 0x80020a <compare_value+0x1>
     2dc:	00 93 09 02 	sts	0x0209, r16	; 0x800209 <compare_value>
     2e0:	0e 94 94 10 	call	0x2128	; 0x2128 <tmr_disable_cc_interrupt>
     2e4:	08 c0       	rjmp	.+16     	; 0x2f6 <common_tc_delay+0xba>
     2e6:	08 0f       	add	r16, r24
     2e8:	19 1f       	adc	r17, r25
     2ea:	10 93 0a 02 	sts	0x020A, r17	; 0x80020a <compare_value+0x1>
     2ee:	00 93 09 02 	sts	0x0209, r16	; 0x800209 <compare_value>
     2f2:	0e 94 9b 10 	call	0x2136	; 0x2136 <tmr_enable_cc_interrupt>
     2f6:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <compare_value>
     2fa:	90 91 0a 02 	lds	r25, 0x020A	; 0x80020a <compare_value+0x1>
     2fe:	84 36       	cpi	r24, 0x64	; 100
     300:	91 05       	cpc	r25, r1
     302:	30 f4       	brcc	.+12     	; 0x310 <common_tc_delay+0xd4>
     304:	8c 59       	subi	r24, 0x9C	; 156
     306:	9f 4f       	sbci	r25, 0xFF	; 255
     308:	90 93 0a 02 	sts	0x020A, r25	; 0x80020a <compare_value+0x1>
     30c:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <compare_value>
     310:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <compare_value>
     314:	90 91 0a 02 	lds	r25, 0x020A	; 0x80020a <compare_value+0x1>
     318:	0e 94 ad 10 	call	0x215a	; 0x215a <tmr_write_cmpreg>
     31c:	df 91       	pop	r29
     31e:	cf 91       	pop	r28
     320:	1f 91       	pop	r17
     322:	0f 91       	pop	r16
     324:	08 95       	ret

00000326 <common_tc_init>:
     326:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <timer_mul_var>
     32a:	0e 94 c7 10 	call	0x218e	; 0x218e <tmr_init>
     32e:	80 93 52 05 	sts	0x0552, r24	; 0x800552 <timer_multiplier>
     332:	08 95       	ret

00000334 <tmr_ovf_callback>:
     334:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <__data_end>
     338:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <__data_end+0x1>
     33c:	a0 91 06 02 	lds	r26, 0x0206	; 0x800206 <__data_end+0x2>
     340:	b0 91 07 02 	lds	r27, 0x0207	; 0x800207 <__data_end+0x3>
     344:	00 97       	sbiw	r24, 0x00	; 0
     346:	a1 05       	cpc	r26, r1
     348:	b1 05       	cpc	r27, r1
     34a:	c9 f0       	breq	.+50     	; 0x37e <tmr_ovf_callback+0x4a>
     34c:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <__data_end>
     350:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <__data_end+0x1>
     354:	a0 91 06 02 	lds	r26, 0x0206	; 0x800206 <__data_end+0x2>
     358:	b0 91 07 02 	lds	r27, 0x0207	; 0x800207 <__data_end+0x3>
     35c:	01 97       	sbiw	r24, 0x01	; 1
     35e:	a1 09       	sbc	r26, r1
     360:	b1 09       	sbc	r27, r1
     362:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <__data_end>
     366:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <__data_end+0x1>
     36a:	a0 93 06 02 	sts	0x0206, r26	; 0x800206 <__data_end+0x2>
     36e:	b0 93 07 02 	sts	0x0207, r27	; 0x800207 <__data_end+0x3>
     372:	00 97       	sbiw	r24, 0x00	; 0
     374:	a1 05       	cpc	r26, r1
     376:	b1 05       	cpc	r27, r1
     378:	11 f4       	brne	.+4      	; 0x37e <tmr_ovf_callback+0x4a>
     37a:	0e 94 9b 10 	call	0x2136	; 0x2136 <tmr_enable_cc_interrupt>
     37e:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <timer_mul_var>
     382:	8f 5f       	subi	r24, 0xFF	; 255
     384:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <timer_mul_var>
     388:	90 91 52 05 	lds	r25, 0x0552	; 0x800552 <timer_multiplier>
     38c:	89 17       	cp	r24, r25
     38e:	48 f0       	brcs	.+18     	; 0x3a2 <tmr_ovf_callback+0x6e>
     390:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <timer_mul_var>
     394:	e0 91 0b 02 	lds	r30, 0x020B	; 0x80020b <common_tc_ovf_callback>
     398:	f0 91 0c 02 	lds	r31, 0x020C	; 0x80020c <common_tc_ovf_callback+0x1>
     39c:	30 97       	sbiw	r30, 0x00	; 0
     39e:	09 f0       	breq	.+2      	; 0x3a2 <tmr_ovf_callback+0x6e>
     3a0:	19 95       	eicall
     3a2:	08 95       	ret

000003a4 <tmr_cca_callback>:
     3a4:	0e 94 94 10 	call	0x2128	; 0x2128 <tmr_disable_cc_interrupt>
     3a8:	e0 91 0d 02 	lds	r30, 0x020D	; 0x80020d <common_tc_cca_callback>
     3ac:	f0 91 0e 02 	lds	r31, 0x020E	; 0x80020e <common_tc_cca_callback+0x1>
     3b0:	30 97       	sbiw	r30, 0x00	; 0
     3b2:	09 f0       	breq	.+2      	; 0x3b6 <tmr_cca_callback+0x12>
     3b4:	19 95       	eicall
     3b6:	08 95       	ret

000003b8 <set_common_tc_overflow_callback>:
     3b8:	90 93 0c 02 	sts	0x020C, r25	; 0x80020c <common_tc_ovf_callback+0x1>
     3bc:	80 93 0b 02 	sts	0x020B, r24	; 0x80020b <common_tc_ovf_callback>
     3c0:	08 95       	ret

000003c2 <set_common_tc_expiry_callback>:
     3c2:	90 93 0e 02 	sts	0x020E, r25	; 0x80020e <common_tc_cca_callback+0x1>
     3c6:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <common_tc_cca_callback>
     3ca:	08 95       	ret

000003cc <usr_wireless_app_task>:
#include "usr_wireless.h"
#include "wireless_config.h"


void usr_wireless_app_task(void)
{
     3cc:	08 95       	ret

000003ce <usr_frame_received_cb>:
     3ce:	cf 93       	push	r28
     3d0:	df 93       	push	r29
     3d2:	cf e7       	ldi	r28, 0x7F	; 127
}

// Reception function //
void usr_frame_received_cb(frame_info_t *frame)
{
	memset(&receivedFrame, 0, sizeof(receivedFrame)); // Reserve memory space
     3d4:	d4 e0       	ldi	r29, 0x04	; 4
     3d6:	21 e7       	ldi	r18, 0x71	; 113
     3d8:	de 01       	movw	r26, r28
     3da:	1d 92       	st	X+, r1
     3dc:	2a 95       	dec	r18
     3de:	e9 f7       	brne	.-6      	; 0x3da <usr_frame_received_cb+0xc>
	memcpy(&receivedFrame, frame->mpdu, sizeof(receivedFrame)); // Copy information from source memory (buffer) to destination
     3e0:	dc 01       	movw	r26, r24
     3e2:	17 96       	adiw	r26, 0x07	; 7
     3e4:	ed 91       	ld	r30, X+
     3e6:	fc 91       	ld	r31, X
     3e8:	18 97       	sbiw	r26, 0x08	; 8
     3ea:	21 e7       	ldi	r18, 0x71	; 113
     3ec:	de 01       	movw	r26, r28
     3ee:	01 90       	ld	r0, Z+
     3f0:	0d 92       	st	X+, r0
     3f2:	2a 95       	dec	r18
     3f4:	e1 f7       	brne	.-8      	; 0x3ee <usr_frame_received_cb+0x20>
	bmm_buffer_free(frame->buffer_header); // Free buffer data, avoid memory leakage
     3f6:	fc 01       	movw	r30, r24
     3f8:	81 81       	ldd	r24, Z+1	; 0x01
     3fa:	92 81       	ldd	r25, Z+2	; 0x02
     3fc:	00 d5       	rcall	.+2560   	; 0xdfe <bmm_buffer_free>

	uint16_t dirOrigen; // Message Origin Address
	uint8_t msgTypeMQTT_SN; // MQTT-SN Message Type
	uint8_t longitudMQTT_SN; // MQTT-SN Message Length

	dirOrigen = receivedFrame.src_addr;
     3fe:	2e 81       	ldd	r18, Y+6	; 0x06
     400:	3f 81       	ldd	r19, Y+7	; 0x07
	longitudMQTT_SN = receivedFrame.MQTT_SN_message[0];
     402:	6a 85       	ldd	r22, Y+10	; 0x0a
	msgTypeMQTT_SN = receivedFrame.MQTT_SN_message[1];
     404:	8b 85       	ldd	r24, Y+11	; 0x0b

	if (dirOrigen == 0x0001) // Receive the origin address of node 0x0001
     406:	21 30       	cpi	r18, 0x01	; 1
     408:	31 05       	cpc	r19, r1
     40a:	09 f0       	breq	.+2      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     40c:	d9 c0       	rjmp	.+434    	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
	{ // By means of the msgTypeMQTT_SN variable, the type of received message is verified.
		if (msgTypeMQTT_SN == 0x00) // MQTT-SN message type received
     40e:	81 11       	cpse	r24, r1
     410:	06 c0       	rjmp	.+12     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message, longitudMQTT_SN, 3); // MQTT-SN message send
     412:	43 e0       	ldi	r20, 0x03	; 3
     414:	50 e0       	ldi	r21, 0x00	; 0
     416:	89 e8       	ldi	r24, 0x89	; 137
     418:	94 e0       	ldi	r25, 0x04	; 4
     41a:	53 d2       	rcall	.+1190   	; 0x8c2 <transmit_sample_frame>
     41c:	ac c1       	rjmp	.+856    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		}
		else if (msgTypeMQTT_SN == 0x01) // MQTT-SN message received
     41e:	81 30       	cpi	r24, 0x01	; 1
     420:	31 f4       	brne	.+12     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message, longitudMQTT_SN, 3); // MQTT-SN message send
     422:	43 e0       	ldi	r20, 0x03	; 3
     424:	50 e0       	ldi	r21, 0x00	; 0
     426:	89 e8       	ldi	r24, 0x89	; 137
     428:	94 e0       	ldi	r25, 0x04	; 4
     42a:	4b d2       	rcall	.+1174   	; 0x8c2 <transmit_sample_frame>
     42c:	a4 c1       	rjmp	.+840    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		}
		else if (msgTypeMQTT_SN==0x02)//MQTT-SN message received
     42e:	82 30       	cpi	r24, 0x02	; 2
     430:	31 f4       	brne	.+12     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     432:	43 e0       	ldi	r20, 0x03	; 3
     434:	50 e0       	ldi	r21, 0x00	; 0
     436:	89 e8       	ldi	r24, 0x89	; 137
     438:	94 e0       	ldi	r25, 0x04	; 4
     43a:	43 d2       	rcall	.+1158   	; 0x8c2 <transmit_sample_frame>
     43c:	9c c1       	rjmp	.+824    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		}
		else if (msgTypeMQTT_SN==0x04)//MQTT-SN message received
     43e:	84 30       	cpi	r24, 0x04	; 4
     440:	31 f4       	brne	.+12     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     442:	43 e0       	ldi	r20, 0x03	; 3
     444:	50 e0       	ldi	r21, 0x00	; 0
     446:	89 e8       	ldi	r24, 0x89	; 137
     448:	94 e0       	ldi	r25, 0x04	; 4
     44a:	3b d2       	rcall	.+1142   	; 0x8c2 <transmit_sample_frame>
     44c:	94 c1       	rjmp	.+808    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		}
		else if (msgTypeMQTT_SN==0x05)//MQTT-SN message received
     44e:	85 30       	cpi	r24, 0x05	; 5
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     450:	31 f4       	brne	.+12     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     452:	43 e0       	ldi	r20, 0x03	; 3
     454:	50 e0       	ldi	r21, 0x00	; 0
     456:	89 e8       	ldi	r24, 0x89	; 137
     458:	94 e0       	ldi	r25, 0x04	; 4
     45a:	33 d2       	rcall	.+1126   	; 0x8c2 <transmit_sample_frame>
     45c:	8c c1       	rjmp	.+792    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		}
		else if (msgTypeMQTT_SN==0x06)//MQTT-SN message received
     45e:	86 30       	cpi	r24, 0x06	; 6
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     460:	31 f4       	brne	.+12     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
     462:	43 e0       	ldi	r20, 0x03	; 3
     464:	50 e0       	ldi	r21, 0x00	; 0
     466:	89 e8       	ldi	r24, 0x89	; 137
     468:	94 e0       	ldi	r25, 0x04	; 4
     46a:	2b d2       	rcall	.+1110   	; 0x8c2 <transmit_sample_frame>
		}
		else if (msgTypeMQTT_SN==0x07)//MQTT-SN message received
     46c:	84 c1       	rjmp	.+776    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     46e:	87 30       	cpi	r24, 0x07	; 7
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     470:	31 f4       	brne	.+12     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
     472:	43 e0       	ldi	r20, 0x03	; 3
     474:	50 e0       	ldi	r21, 0x00	; 0
     476:	89 e8       	ldi	r24, 0x89	; 137
     478:	94 e0       	ldi	r25, 0x04	; 4
     47a:	23 d2       	rcall	.+1094   	; 0x8c2 <transmit_sample_frame>
		}
		else if (msgTypeMQTT_SN==0x08)//MQTT-SN message received
     47c:	7c c1       	rjmp	.+760    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     47e:	88 30       	cpi	r24, 0x08	; 8
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     480:	31 f4       	brne	.+12     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     482:	43 e0       	ldi	r20, 0x03	; 3
     484:	50 e0       	ldi	r21, 0x00	; 0
     486:	89 e8       	ldi	r24, 0x89	; 137
     488:	94 e0       	ldi	r25, 0x04	; 4
     48a:	1b d2       	rcall	.+1078   	; 0x8c2 <transmit_sample_frame>
		}
		else if (msgTypeMQTT_SN==0x09)//MQTT-SN message received
     48c:	74 c1       	rjmp	.+744    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     48e:	89 30       	cpi	r24, 0x09	; 9
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     490:	31 f4       	brne	.+12     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
     492:	43 e0       	ldi	r20, 0x03	; 3
     494:	50 e0       	ldi	r21, 0x00	; 0
     496:	89 e8       	ldi	r24, 0x89	; 137
     498:	94 e0       	ldi	r25, 0x04	; 4
     49a:	13 d2       	rcall	.+1062   	; 0x8c2 <transmit_sample_frame>
		}
		else if (msgTypeMQTT_SN==0x0A)//MQTT-SN message received
     49c:	6c c1       	rjmp	.+728    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     49e:	8a 30       	cpi	r24, 0x0A	; 10
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     4a0:	31 f4       	brne	.+12     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
     4a2:	43 e0       	ldi	r20, 0x03	; 3
     4a4:	50 e0       	ldi	r21, 0x00	; 0
     4a6:	89 e8       	ldi	r24, 0x89	; 137
     4a8:	94 e0       	ldi	r25, 0x04	; 4
     4aa:	0b d2       	rcall	.+1046   	; 0x8c2 <transmit_sample_frame>
		}
		else if (msgTypeMQTT_SN==0x0B)//MQTT-SN message received
     4ac:	64 c1       	rjmp	.+712    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     4ae:	8b 30       	cpi	r24, 0x0B	; 11
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     4b0:	31 f4       	brne	.+12     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
     4b2:	43 e0       	ldi	r20, 0x03	; 3
     4b4:	50 e0       	ldi	r21, 0x00	; 0
     4b6:	89 e8       	ldi	r24, 0x89	; 137
     4b8:	94 e0       	ldi	r25, 0x04	; 4
     4ba:	03 d2       	rcall	.+1030   	; 0x8c2 <transmit_sample_frame>
		}
		else if (msgTypeMQTT_SN==0x0C)//MQTT-SN message received
     4bc:	5c c1       	rjmp	.+696    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     4be:	8c 30       	cpi	r24, 0x0C	; 12
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     4c0:	31 f4       	brne	.+12     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
     4c2:	43 e0       	ldi	r20, 0x03	; 3
     4c4:	50 e0       	ldi	r21, 0x00	; 0
     4c6:	89 e8       	ldi	r24, 0x89	; 137
     4c8:	94 e0       	ldi	r25, 0x04	; 4
     4ca:	fb d1       	rcall	.+1014   	; 0x8c2 <transmit_sample_frame>
		}
		else if (msgTypeMQTT_SN==0x0D)//MQTT-SN message received
     4cc:	54 c1       	rjmp	.+680    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     4ce:	8d 30       	cpi	r24, 0x0D	; 13
     4d0:	31 f4       	brne	.+12     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
     4d2:	43 e0       	ldi	r20, 0x03	; 3
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	89 e8       	ldi	r24, 0x89	; 137
     4d8:	94 e0       	ldi	r25, 0x04	; 4
     4da:	f3 d1       	rcall	.+998    	; 0x8c2 <transmit_sample_frame>
		}
		else if (msgTypeMQTT_SN==0x0E)//MQTT-SN message received
     4dc:	4c c1       	rjmp	.+664    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     4de:	8e 30       	cpi	r24, 0x0E	; 14
     4e0:	31 f4       	brne	.+12     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
     4e2:	43 e0       	ldi	r20, 0x03	; 3
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	89 e8       	ldi	r24, 0x89	; 137
     4e8:	94 e0       	ldi	r25, 0x04	; 4
		}
		else if (msgTypeMQTT_SN==0x0F)//MQTT-SN message received
     4ea:	eb d1       	rcall	.+982    	; 0x8c2 <transmit_sample_frame>
     4ec:	44 c1       	rjmp	.+648    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     4ee:	8f 30       	cpi	r24, 0x0F	; 15
     4f0:	31 f4       	brne	.+12     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
     4f2:	43 e0       	ldi	r20, 0x03	; 3
     4f4:	50 e0       	ldi	r21, 0x00	; 0
     4f6:	89 e8       	ldi	r24, 0x89	; 137
     4f8:	94 e0       	ldi	r25, 0x04	; 4
		}
		else if (msgTypeMQTT_SN==0x10)//MQTT-SN message received
     4fa:	e3 d1       	rcall	.+966    	; 0x8c2 <transmit_sample_frame>
     4fc:	3c c1       	rjmp	.+632    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     4fe:	80 31       	cpi	r24, 0x10	; 16
     500:	31 f4       	brne	.+12     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     502:	43 e0       	ldi	r20, 0x03	; 3
     504:	50 e0       	ldi	r21, 0x00	; 0
     506:	89 e8       	ldi	r24, 0x89	; 137
     508:	94 e0       	ldi	r25, 0x04	; 4
		}
		else if (msgTypeMQTT_SN==0x12)//MQTT-SN message received
     50a:	db d1       	rcall	.+950    	; 0x8c2 <transmit_sample_frame>
     50c:	34 c1       	rjmp	.+616    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     50e:	82 31       	cpi	r24, 0x12	; 18
     510:	31 f4       	brne	.+12     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
     512:	43 e0       	ldi	r20, 0x03	; 3
     514:	50 e0       	ldi	r21, 0x00	; 0
     516:	89 e8       	ldi	r24, 0x89	; 137
     518:	94 e0       	ldi	r25, 0x04	; 4
		}
		else if (msgTypeMQTT_SN==0x13)//MQTT-SN message received
     51a:	d3 d1       	rcall	.+934    	; 0x8c2 <transmit_sample_frame>
     51c:	2c c1       	rjmp	.+600    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     51e:	83 31       	cpi	r24, 0x13	; 19
     520:	31 f4       	brne	.+12     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
     522:	43 e0       	ldi	r20, 0x03	; 3
     524:	50 e0       	ldi	r21, 0x00	; 0
     526:	89 e8       	ldi	r24, 0x89	; 137
     528:	94 e0       	ldi	r25, 0x04	; 4
		}
		else if (msgTypeMQTT_SN==0x14)//MQTT-SN message received
     52a:	cb d1       	rcall	.+918    	; 0x8c2 <transmit_sample_frame>
     52c:	24 c1       	rjmp	.+584    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     52e:	84 31       	cpi	r24, 0x14	; 20
     530:	31 f4       	brne	.+12     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
     532:	43 e0       	ldi	r20, 0x03	; 3
     534:	50 e0       	ldi	r21, 0x00	; 0
     536:	89 e8       	ldi	r24, 0x89	; 137
     538:	94 e0       	ldi	r25, 0x04	; 4
		}
		else if (msgTypeMQTT_SN==0x15)//MQTT-SN message received
     53a:	c3 d1       	rcall	.+902    	; 0x8c2 <transmit_sample_frame>
     53c:	1c c1       	rjmp	.+568    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     53e:	85 31       	cpi	r24, 0x15	; 21
     540:	31 f4       	brne	.+12     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
     542:	43 e0       	ldi	r20, 0x03	; 3
     544:	50 e0       	ldi	r21, 0x00	; 0
     546:	89 e8       	ldi	r24, 0x89	; 137
     548:	94 e0       	ldi	r25, 0x04	; 4
		}
		else if (msgTypeMQTT_SN==0x16)//MQTT-SN message received
     54a:	bb d1       	rcall	.+886    	; 0x8c2 <transmit_sample_frame>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     54c:	14 c1       	rjmp	.+552    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     54e:	86 31       	cpi	r24, 0x16	; 22
     550:	31 f4       	brne	.+12     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
     552:	43 e0       	ldi	r20, 0x03	; 3
     554:	50 e0       	ldi	r21, 0x00	; 0
     556:	89 e8       	ldi	r24, 0x89	; 137
     558:	94 e0       	ldi	r25, 0x04	; 4
		}
		else if (msgTypeMQTT_SN==0x17)//MQTT-SN message received
     55a:	b3 d1       	rcall	.+870    	; 0x8c2 <transmit_sample_frame>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     55c:	0c c1       	rjmp	.+536    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     55e:	87 31       	cpi	r24, 0x17	; 23
     560:	31 f4       	brne	.+12     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
     562:	43 e0       	ldi	r20, 0x03	; 3
     564:	50 e0       	ldi	r21, 0x00	; 0
     566:	89 e8       	ldi	r24, 0x89	; 137
		}
		else if (msgTypeMQTT_SN==0x18)//MQTT-SN message received
     568:	94 e0       	ldi	r25, 0x04	; 4
     56a:	ab d1       	rcall	.+854    	; 0x8c2 <transmit_sample_frame>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     56c:	04 c1       	rjmp	.+520    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     56e:	88 31       	cpi	r24, 0x18	; 24
     570:	31 f4       	brne	.+12     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
     572:	43 e0       	ldi	r20, 0x03	; 3
     574:	50 e0       	ldi	r21, 0x00	; 0
     576:	89 e8       	ldi	r24, 0x89	; 137
		}
		else if (msgTypeMQTT_SN==0x1A)//MQTT-SN message received
     578:	94 e0       	ldi	r25, 0x04	; 4
     57a:	a3 d1       	rcall	.+838    	; 0x8c2 <transmit_sample_frame>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     57c:	fc c0       	rjmp	.+504    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     57e:	8a 31       	cpi	r24, 0x1A	; 26
     580:	31 f4       	brne	.+12     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
     582:	43 e0       	ldi	r20, 0x03	; 3
     584:	50 e0       	ldi	r21, 0x00	; 0
     586:	89 e8       	ldi	r24, 0x89	; 137
		}
		else if (msgTypeMQTT_SN==0x1B)//MQTT-SN message received
     588:	94 e0       	ldi	r25, 0x04	; 4
     58a:	9b d1       	rcall	.+822    	; 0x8c2 <transmit_sample_frame>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     58c:	f4 c0       	rjmp	.+488    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     58e:	8b 31       	cpi	r24, 0x1B	; 27
     590:	31 f4       	brne	.+12     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
     592:	43 e0       	ldi	r20, 0x03	; 3
     594:	50 e0       	ldi	r21, 0x00	; 0
     596:	89 e8       	ldi	r24, 0x89	; 137
     598:	94 e0       	ldi	r25, 0x04	; 4
		}
		else if (msgTypeMQTT_SN==0x1C)//MQTT-SN message received
     59a:	93 d1       	rcall	.+806    	; 0x8c2 <transmit_sample_frame>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     59c:	ec c0       	rjmp	.+472    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     59e:	8c 31       	cpi	r24, 0x1C	; 28
     5a0:	31 f4       	brne	.+12     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
     5a2:	43 e0       	ldi	r20, 0x03	; 3
     5a4:	50 e0       	ldi	r21, 0x00	; 0
     5a6:	89 e8       	ldi	r24, 0x89	; 137
     5a8:	94 e0       	ldi	r25, 0x04	; 4
		}
		else if (msgTypeMQTT_SN==0x1D)//MQTT-SN message received
     5aa:	8b d1       	rcall	.+790    	; 0x8c2 <transmit_sample_frame>
     5ac:	e4 c0       	rjmp	.+456    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     5ae:	8d 31       	cpi	r24, 0x1D	; 29
     5b0:	09 f0       	breq	.+2      	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     5b2:	e1 c0       	rjmp	.+450    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     5b4:	43 e0       	ldi	r20, 0x03	; 3
     5b6:	50 e0       	ldi	r21, 0x00	; 0
     5b8:	89 e8       	ldi	r24, 0x89	; 137
		}
	}

    if (dirOrigen == 0x0003) // Receive the origin address of node 0x001
     5ba:	94 e0       	ldi	r25, 0x04	; 4
     5bc:	82 d1       	rcall	.+772    	; 0x8c2 <transmit_sample_frame>
     5be:	db c0       	rjmp	.+438    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     5c0:	23 30       	cpi	r18, 0x03	; 3
    { // By means of the msgTypeMQTT_SN variable, the type of received message is verified.
	    if (msgTypeMQTT_SN == 0x00) // MQTT-SN message type received
     5c2:	31 05       	cpc	r19, r1
     5c4:	09 f0       	breq	.+2      	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
	    {
		    transmit_sample_frame(receivedFrame.MQTT_SN_message, longitudMQTT_SN, 1); // MQTT-SN message send
     5c6:	d7 c0       	rjmp	.+430    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     5c8:	81 11       	cpse	r24, r1
     5ca:	06 c0       	rjmp	.+12     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
     5cc:	41 e0       	ldi	r20, 0x01	; 1
     5ce:	50 e0       	ldi	r21, 0x00	; 0
     5d0:	89 e8       	ldi	r24, 0x89	; 137
	    }
	    else if (msgTypeMQTT_SN == 0x01) // MQTT-SN message received
     5d2:	94 e0       	ldi	r25, 0x04	; 4
	    {
		    transmit_sample_frame(receivedFrame.MQTT_SN_message, longitudMQTT_SN, 1); // MQTT-SN message send
     5d4:	76 d1       	rcall	.+748    	; 0x8c2 <transmit_sample_frame>
     5d6:	cf c0       	rjmp	.+414    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     5d8:	81 30       	cpi	r24, 0x01	; 1
     5da:	31 f4       	brne	.+12     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
     5dc:	41 e0       	ldi	r20, 0x01	; 1
     5de:	50 e0       	ldi	r21, 0x00	; 0
     5e0:	89 e8       	ldi	r24, 0x89	; 137
	    }
		else if (msgTypeMQTT_SN==0x02)//MQTT-SN message received
     5e2:	94 e0       	ldi	r25, 0x04	; 4
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     5e4:	6e d1       	rcall	.+732    	; 0x8c2 <transmit_sample_frame>
     5e6:	c7 c0       	rjmp	.+398    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     5e8:	82 30       	cpi	r24, 0x02	; 2
     5ea:	31 f4       	brne	.+12     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
     5ec:	41 e0       	ldi	r20, 0x01	; 1
     5ee:	50 e0       	ldi	r21, 0x00	; 0
		}
		else if (msgTypeMQTT_SN==0x04)//MQTT-SN message received
     5f0:	89 e8       	ldi	r24, 0x89	; 137
     5f2:	94 e0       	ldi	r25, 0x04	; 4
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     5f4:	66 d1       	rcall	.+716    	; 0x8c2 <transmit_sample_frame>
     5f6:	bf c0       	rjmp	.+382    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     5f8:	84 30       	cpi	r24, 0x04	; 4
     5fa:	31 f4       	brne	.+12     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
     5fc:	41 e0       	ldi	r20, 0x01	; 1
     5fe:	50 e0       	ldi	r21, 0x00	; 0
		}
		else if (msgTypeMQTT_SN==0x05)//MQTT-SN message received
     600:	89 e8       	ldi	r24, 0x89	; 137
     602:	94 e0       	ldi	r25, 0x04	; 4
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     604:	5e d1       	rcall	.+700    	; 0x8c2 <transmit_sample_frame>
     606:	b7 c0       	rjmp	.+366    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     608:	85 30       	cpi	r24, 0x05	; 5
     60a:	31 f4       	brne	.+12     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
     60c:	41 e0       	ldi	r20, 0x01	; 1
     60e:	50 e0       	ldi	r21, 0x00	; 0
		}
		else if (msgTypeMQTT_SN==0x06)//MQTT-SN message received
     610:	89 e8       	ldi	r24, 0x89	; 137
     612:	94 e0       	ldi	r25, 0x04	; 4
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     614:	56 d1       	rcall	.+684    	; 0x8c2 <transmit_sample_frame>
     616:	af c0       	rjmp	.+350    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     618:	86 30       	cpi	r24, 0x06	; 6
     61a:	31 f4       	brne	.+12     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
     61c:	41 e0       	ldi	r20, 0x01	; 1
     61e:	50 e0       	ldi	r21, 0x00	; 0
		}
		else if (msgTypeMQTT_SN==0x07)//MQTT-SN message received
     620:	89 e8       	ldi	r24, 0x89	; 137
     622:	94 e0       	ldi	r25, 0x04	; 4
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     624:	4e d1       	rcall	.+668    	; 0x8c2 <transmit_sample_frame>
     626:	a7 c0       	rjmp	.+334    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     628:	87 30       	cpi	r24, 0x07	; 7
     62a:	31 f4       	brne	.+12     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
     62c:	41 e0       	ldi	r20, 0x01	; 1
     62e:	50 e0       	ldi	r21, 0x00	; 0
		}
		else if (msgTypeMQTT_SN==0x08)//MQTT-SN message received
     630:	89 e8       	ldi	r24, 0x89	; 137
     632:	94 e0       	ldi	r25, 0x04	; 4
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     634:	46 d1       	rcall	.+652    	; 0x8c2 <transmit_sample_frame>
     636:	9f c0       	rjmp	.+318    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     638:	88 30       	cpi	r24, 0x08	; 8
     63a:	31 f4       	brne	.+12     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
     63c:	41 e0       	ldi	r20, 0x01	; 1
     63e:	50 e0       	ldi	r21, 0x00	; 0
		}
		else if (msgTypeMQTT_SN==0x09)//MQTT-SN message received
     640:	89 e8       	ldi	r24, 0x89	; 137
     642:	94 e0       	ldi	r25, 0x04	; 4
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     644:	3e d1       	rcall	.+636    	; 0x8c2 <transmit_sample_frame>
     646:	97 c0       	rjmp	.+302    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     648:	89 30       	cpi	r24, 0x09	; 9
     64a:	31 f4       	brne	.+12     	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
     64c:	41 e0       	ldi	r20, 0x01	; 1
     64e:	50 e0       	ldi	r21, 0x00	; 0
		}
		else if (msgTypeMQTT_SN==0x0A)//MQTT-SN message received
     650:	89 e8       	ldi	r24, 0x89	; 137
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     652:	94 e0       	ldi	r25, 0x04	; 4
     654:	36 d1       	rcall	.+620    	; 0x8c2 <transmit_sample_frame>
     656:	8f c0       	rjmp	.+286    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     658:	8a 30       	cpi	r24, 0x0A	; 10
     65a:	31 f4       	brne	.+12     	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
     65c:	41 e0       	ldi	r20, 0x01	; 1
     65e:	50 e0       	ldi	r21, 0x00	; 0
		}
		else if (msgTypeMQTT_SN==0x0B)//MQTT-SN message received
     660:	89 e8       	ldi	r24, 0x89	; 137
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     662:	94 e0       	ldi	r25, 0x04	; 4
     664:	2e d1       	rcall	.+604    	; 0x8c2 <transmit_sample_frame>
     666:	87 c0       	rjmp	.+270    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     668:	8b 30       	cpi	r24, 0x0B	; 11
     66a:	31 f4       	brne	.+12     	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
     66c:	41 e0       	ldi	r20, 0x01	; 1
		}
		else if (msgTypeMQTT_SN==0x0C)//MQTT-SN message received
     66e:	50 e0       	ldi	r21, 0x00	; 0
     670:	89 e8       	ldi	r24, 0x89	; 137
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     672:	94 e0       	ldi	r25, 0x04	; 4
     674:	26 d1       	rcall	.+588    	; 0x8c2 <transmit_sample_frame>
     676:	7f c0       	rjmp	.+254    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     678:	8c 30       	cpi	r24, 0x0C	; 12
     67a:	31 f4       	brne	.+12     	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
     67c:	41 e0       	ldi	r20, 0x01	; 1
		}
		else if (msgTypeMQTT_SN==0x0D)//MQTT-SN message received
     67e:	50 e0       	ldi	r21, 0x00	; 0
     680:	89 e8       	ldi	r24, 0x89	; 137
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     682:	94 e0       	ldi	r25, 0x04	; 4
     684:	1e d1       	rcall	.+572    	; 0x8c2 <transmit_sample_frame>
     686:	77 c0       	rjmp	.+238    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     688:	8d 30       	cpi	r24, 0x0D	; 13
     68a:	31 f4       	brne	.+12     	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
     68c:	41 e0       	ldi	r20, 0x01	; 1
		}
		else if (msgTypeMQTT_SN==0x0E)//MQTT-SN message received
     68e:	50 e0       	ldi	r21, 0x00	; 0
     690:	89 e8       	ldi	r24, 0x89	; 137
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     692:	94 e0       	ldi	r25, 0x04	; 4
     694:	16 d1       	rcall	.+556    	; 0x8c2 <transmit_sample_frame>
     696:	6f c0       	rjmp	.+222    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     698:	8e 30       	cpi	r24, 0x0E	; 14
     69a:	31 f4       	brne	.+12     	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
     69c:	41 e0       	ldi	r20, 0x01	; 1
		}
		else if (msgTypeMQTT_SN==0x0F)//MQTT-SN message received
     69e:	50 e0       	ldi	r21, 0x00	; 0
     6a0:	89 e8       	ldi	r24, 0x89	; 137
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     6a2:	94 e0       	ldi	r25, 0x04	; 4
     6a4:	0e d1       	rcall	.+540    	; 0x8c2 <transmit_sample_frame>
     6a6:	67 c0       	rjmp	.+206    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     6a8:	8f 30       	cpi	r24, 0x0F	; 15
     6aa:	31 f4       	brne	.+12     	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
     6ac:	41 e0       	ldi	r20, 0x01	; 1
		}
		else if (msgTypeMQTT_SN==0x10)//MQTT-SN message received
     6ae:	50 e0       	ldi	r21, 0x00	; 0
     6b0:	89 e8       	ldi	r24, 0x89	; 137
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     6b2:	94 e0       	ldi	r25, 0x04	; 4
     6b4:	06 d1       	rcall	.+524    	; 0x8c2 <transmit_sample_frame>
     6b6:	5f c0       	rjmp	.+190    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     6b8:	80 31       	cpi	r24, 0x10	; 16
     6ba:	31 f4       	brne	.+12     	; 0x6c8 <__LOCK_REGION_LENGTH__+0x2c8>
     6bc:	41 e0       	ldi	r20, 0x01	; 1
		}
		else if (msgTypeMQTT_SN==0x12)//MQTT-SN message received
     6be:	50 e0       	ldi	r21, 0x00	; 0
     6c0:	89 e8       	ldi	r24, 0x89	; 137
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     6c2:	94 e0       	ldi	r25, 0x04	; 4
     6c4:	fe d0       	rcall	.+508    	; 0x8c2 <transmit_sample_frame>
     6c6:	57 c0       	rjmp	.+174    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     6c8:	82 31       	cpi	r24, 0x12	; 18
     6ca:	31 f4       	brne	.+12     	; 0x6d8 <__LOCK_REGION_LENGTH__+0x2d8>
     6cc:	41 e0       	ldi	r20, 0x01	; 1
		}
		else if (msgTypeMQTT_SN==0x13)//MQTT-SN message received
     6ce:	50 e0       	ldi	r21, 0x00	; 0
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     6d0:	89 e8       	ldi	r24, 0x89	; 137
     6d2:	94 e0       	ldi	r25, 0x04	; 4
     6d4:	f6 d0       	rcall	.+492    	; 0x8c2 <transmit_sample_frame>
     6d6:	4f c0       	rjmp	.+158    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     6d8:	83 31       	cpi	r24, 0x13	; 19
     6da:	31 f4       	brne	.+12     	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
     6dc:	41 e0       	ldi	r20, 0x01	; 1
		}
		else if (msgTypeMQTT_SN==0x14)//MQTT-SN message received
     6de:	50 e0       	ldi	r21, 0x00	; 0
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     6e0:	89 e8       	ldi	r24, 0x89	; 137
     6e2:	94 e0       	ldi	r25, 0x04	; 4
     6e4:	ee d0       	rcall	.+476    	; 0x8c2 <transmit_sample_frame>
     6e6:	47 c0       	rjmp	.+142    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     6e8:	84 31       	cpi	r24, 0x14	; 20
     6ea:	31 f4       	brne	.+12     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
		}
		else if (msgTypeMQTT_SN==0x15)//MQTT-SN message received
     6ec:	41 e0       	ldi	r20, 0x01	; 1
     6ee:	50 e0       	ldi	r21, 0x00	; 0
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     6f0:	89 e8       	ldi	r24, 0x89	; 137
     6f2:	94 e0       	ldi	r25, 0x04	; 4
     6f4:	e6 d0       	rcall	.+460    	; 0x8c2 <transmit_sample_frame>
     6f6:	3f c0       	rjmp	.+126    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     6f8:	85 31       	cpi	r24, 0x15	; 21
     6fa:	31 f4       	brne	.+12     	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
		}
		else if (msgTypeMQTT_SN==0x16)//MQTT-SN message received
     6fc:	41 e0       	ldi	r20, 0x01	; 1
     6fe:	50 e0       	ldi	r21, 0x00	; 0
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     700:	89 e8       	ldi	r24, 0x89	; 137
     702:	94 e0       	ldi	r25, 0x04	; 4
     704:	de d0       	rcall	.+444    	; 0x8c2 <transmit_sample_frame>
     706:	37 c0       	rjmp	.+110    	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     708:	86 31       	cpi	r24, 0x16	; 22
     70a:	31 f4       	brne	.+12     	; 0x718 <__LOCK_REGION_LENGTH__+0x318>
		}
		else if (msgTypeMQTT_SN==0x17)//MQTT-SN message received
     70c:	41 e0       	ldi	r20, 0x01	; 1
     70e:	50 e0       	ldi	r21, 0x00	; 0
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     710:	89 e8       	ldi	r24, 0x89	; 137
     712:	94 e0       	ldi	r25, 0x04	; 4
     714:	d6 d0       	rcall	.+428    	; 0x8c2 <transmit_sample_frame>
     716:	2f c0       	rjmp	.+94     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     718:	87 31       	cpi	r24, 0x17	; 23
     71a:	31 f4       	brne	.+12     	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
     71c:	41 e0       	ldi	r20, 0x01	; 1
		}
		else if (msgTypeMQTT_SN==0x18)//MQTT-SN message received
     71e:	50 e0       	ldi	r21, 0x00	; 0
     720:	89 e8       	ldi	r24, 0x89	; 137
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     722:	94 e0       	ldi	r25, 0x04	; 4
     724:	ce d0       	rcall	.+412    	; 0x8c2 <transmit_sample_frame>
     726:	27 c0       	rjmp	.+78     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     728:	88 31       	cpi	r24, 0x18	; 24
     72a:	31 f4       	brne	.+12     	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
     72c:	41 e0       	ldi	r20, 0x01	; 1
     72e:	50 e0       	ldi	r21, 0x00	; 0
		}
		else if (msgTypeMQTT_SN==0x1A)//MQTT-SN message received
     730:	89 e8       	ldi	r24, 0x89	; 137
     732:	94 e0       	ldi	r25, 0x04	; 4
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     734:	c6 d0       	rcall	.+396    	; 0x8c2 <transmit_sample_frame>
     736:	1f c0       	rjmp	.+62     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     738:	8a 31       	cpi	r24, 0x1A	; 26
     73a:	31 f4       	brne	.+12     	; 0x748 <__LOCK_REGION_LENGTH__+0x348>
     73c:	41 e0       	ldi	r20, 0x01	; 1
     73e:	50 e0       	ldi	r21, 0x00	; 0
     740:	89 e8       	ldi	r24, 0x89	; 137
		}
		else if (msgTypeMQTT_SN==0x1B)//MQTT-SN message received
     742:	94 e0       	ldi	r25, 0x04	; 4
     744:	be d0       	rcall	.+380    	; 0x8c2 <transmit_sample_frame>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,1);//MQTT-SN message send
     746:	17 c0       	rjmp	.+46     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     748:	8b 31       	cpi	r24, 0x1B	; 27
     74a:	31 f4       	brne	.+12     	; 0x758 <__LOCK_REGION_LENGTH__+0x358>
     74c:	41 e0       	ldi	r20, 0x01	; 1
     74e:	50 e0       	ldi	r21, 0x00	; 0
     750:	89 e8       	ldi	r24, 0x89	; 137
     752:	94 e0       	ldi	r25, 0x04	; 4
		}
		else if (msgTypeMQTT_SN==0x1C)//MQTT-SN message received
     754:	b6 d0       	rcall	.+364    	; 0x8c2 <transmit_sample_frame>
     756:	0f c0       	rjmp	.+30     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     758:	8c 31       	cpi	r24, 0x1C	; 28
     75a:	31 f4       	brne	.+12     	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
     75c:	43 e0       	ldi	r20, 0x03	; 3
     75e:	50 e0       	ldi	r21, 0x00	; 0
     760:	89 e8       	ldi	r24, 0x89	; 137
     762:	94 e0       	ldi	r25, 0x04	; 4
     764:	ae d0       	rcall	.+348    	; 0x8c2 <transmit_sample_frame>
		}
		else if (msgTypeMQTT_SN==0x1D)//MQTT-SN message received
     766:	07 c0       	rjmp	.+14     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     768:	8d 31       	cpi	r24, 0x1D	; 29
		{
			transmit_sample_frame(receivedFrame.MQTT_SN_message,longitudMQTT_SN,3);//MQTT-SN message send
     76a:	29 f4       	brne	.+10     	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     76c:	43 e0       	ldi	r20, 0x03	; 3
     76e:	50 e0       	ldi	r21, 0x00	; 0
     770:	89 e8       	ldi	r24, 0x89	; 137
     772:	94 e0       	ldi	r25, 0x04	; 4
     774:	a6 d0       	rcall	.+332    	; 0x8c2 <transmit_sample_frame>
		}
	}

}
     776:	df 91       	pop	r29
     778:	cf 91       	pop	r28
     77a:	08 95       	ret

0000077c <usr_frame_transmitted_cb>:

void usr_frame_transmitted_cb(retval_t status, frame_info_t *frame)
{
     77c:	08 95       	ret

0000077e <transmit_frame>:
		uint8_t src_addr_mode,
		uint8_t msdu_handle,
		uint8_t *payload,
		uint8_t payload_length,
		bool ack_req,csma_mode_t csma_mode ,bool frame_retry)
{
     77e:	4f 92       	push	r4
     780:	5f 92       	push	r5
     782:	6f 92       	push	r6
     784:	7f 92       	push	r7
     786:	8f 92       	push	r8
     788:	af 92       	push	r10
     78a:	cf 92       	push	r12
     78c:	ef 92       	push	r14
     78e:	0f 93       	push	r16
     790:	1f 93       	push	r17
     792:	cf 93       	push	r28
     794:	df 93       	push	r29
     796:	cd b7       	in	r28, 0x3d	; 61
     798:	de b7       	in	r29, 0x3e	; 62
	tx_frame_info = (frame_info_t *)storage_buffer;
	/* Get length of current frame. */
	frame_length = (FRAME_OVERHEAD + payload_length); 

	/* Set payload pointer. */     
	frame_ptr = temp_frame_ptr = (uint8_t *)tx_frame_info +
     79a:	a9 e8       	ldi	r26, 0x89	; 137
     79c:	b0 e0       	ldi	r27, 0x00	; 0
     79e:	ae 19       	sub	r26, r14
     7a0:	b1 09       	sbc	r27, r1
     7a2:	fd 01       	movw	r30, r26
     7a4:	ef 5e       	subi	r30, 0xEF	; 239
     7a6:	fd 4f       	sbci	r31, 0xFD	; 253
     7a8:	3f 01       	movw	r6, r30

	/*
	* Payload is stored to the end of the buffer avoiding payload
	* copying by TAL.
	*/
	for (i = 0; i < payload_length; i++) {
     7aa:	ee 20       	and	r14, r14
     7ac:	79 f0       	breq	.+30     	; 0x7cc <transmit_frame+0x4e>
     7ae:	d8 01       	movw	r26, r16
     7b0:	44 24       	eor	r4, r4
     7b2:	4a 94       	dec	r4
     7b4:	4e 0c       	add	r4, r14
     7b6:	51 2c       	mov	r5, r1
     7b8:	9f ef       	ldi	r25, 0xFF	; 255
     7ba:	49 1a       	sub	r4, r25
     7bc:	59 0a       	sbc	r5, r25
     7be:	04 0d       	add	r16, r4
     7c0:	15 1d       	adc	r17, r5
	*temp_frame_ptr++ = *(payload + i);
     7c2:	9d 91       	ld	r25, X+
     7c4:	91 93       	st	Z+, r25

	/*
	* Payload is stored to the end of the buffer avoiding payload
	* copying by TAL.
	*/
	for (i = 0; i < payload_length; i++) {
     7c6:	a0 17       	cp	r26, r16
     7c8:	b1 07       	cpc	r27, r17
     7ca:	d9 f7       	brne	.-10     	; 0x7c2 <transmit_frame+0x44>
	*temp_frame_ptr++ = *(payload + i);
	}


	/* Source address */
	if (FCF_SHORT_ADDR == src_addr_mode) {
     7cc:	42 30       	cpi	r20, 0x02	; 2
     7ce:	61 f4       	brne	.+24     	; 0x7e8 <transmit_frame+0x6a>
	uint16_t temp_value,fcf = 0;
	/* Get length of current frame. */

	tx_frame_info = (frame_info_t *)storage_buffer;
	/* Get length of current frame. */
	frame_length = (FRAME_OVERHEAD + payload_length); 
     7d0:	3b e0       	ldi	r19, 0x0B	; 11
     7d2:	3e 0d       	add	r19, r14
	}


	/* Source address */
	if (FCF_SHORT_ADDR == src_addr_mode) {
	frame_ptr -= SHORT_ADDR_LEN;
     7d4:	d3 01       	movw	r26, r6
	convert_16_bit_to_byte_array(tal_pib.ShortAddress, frame_ptr);
     7d6:	40 91 39 05 	lds	r20, 0x0539	; 0x800539 <tal_pib+0xc>
     7da:	50 91 3a 05 	lds	r21, 0x053A	; 0x80053a <tal_pib+0xd>
     7de:	5e 93       	st	-X, r21
     7e0:	4e 93       	st	-X, r20

	fcf |= FCF_SET_SOURCE_ADDR_MODE(FCF_SHORT_ADDR);
     7e2:	40 e0       	ldi	r20, 0x00	; 0
     7e4:	50 e8       	ldi	r21, 0x80	; 128
     7e6:	26 c0       	rjmp	.+76     	; 0x834 <transmit_frame+0xb6>
	} else {
	frame_ptr -= EXT_ADDR_LEN;
     7e8:	d3 01       	movw	r26, r6
     7ea:	18 97       	sbiw	r26, 0x08	; 8
	frame_length += FCF_2_SOURCE_ADDR_OFFSET;
     7ec:	31 e1       	ldi	r19, 0x11	; 17
     7ee:	3e 0d       	add	r19, r14

	convert_64_bit_to_byte_array(tal_pib.IeeeAddress, frame_ptr);
     7f0:	ed e2       	ldi	r30, 0x2D	; 45
     7f2:	f5 e0       	ldi	r31, 0x05	; 5
     7f4:	90 81       	ld	r25, Z
     7f6:	9c 93       	st	X, r25
     7f8:	91 81       	ldd	r25, Z+1	; 0x01
     7fa:	11 96       	adiw	r26, 0x01	; 1
     7fc:	9c 93       	st	X, r25
     7fe:	11 97       	sbiw	r26, 0x01	; 1
     800:	92 81       	ldd	r25, Z+2	; 0x02
     802:	12 96       	adiw	r26, 0x02	; 2
     804:	9c 93       	st	X, r25
     806:	12 97       	sbiw	r26, 0x02	; 2
     808:	93 81       	ldd	r25, Z+3	; 0x03
     80a:	13 96       	adiw	r26, 0x03	; 3
     80c:	9c 93       	st	X, r25
     80e:	13 97       	sbiw	r26, 0x03	; 3
     810:	94 81       	ldd	r25, Z+4	; 0x04
     812:	14 96       	adiw	r26, 0x04	; 4
     814:	9c 93       	st	X, r25
     816:	14 97       	sbiw	r26, 0x04	; 4
     818:	95 81       	ldd	r25, Z+5	; 0x05
     81a:	15 96       	adiw	r26, 0x05	; 5
     81c:	9c 93       	st	X, r25
     81e:	15 97       	sbiw	r26, 0x05	; 5
     820:	96 81       	ldd	r25, Z+6	; 0x06
     822:	16 96       	adiw	r26, 0x06	; 6
     824:	9c 93       	st	X, r25
     826:	16 97       	sbiw	r26, 0x06	; 6
     828:	97 81       	ldd	r25, Z+7	; 0x07
     82a:	17 96       	adiw	r26, 0x07	; 7
     82c:	9c 93       	st	X, r25
     82e:	17 97       	sbiw	r26, 0x07	; 7

	fcf |= FCF_SET_SOURCE_ADDR_MODE(FCF_LONG_ADDR);
     830:	40 e0       	ldi	r20, 0x00	; 0
     832:	50 ec       	ldi	r21, 0xC0	; 192
		temp_value = CCPU_ENDIAN_TO_LE16(SRC_PAN_ID);
		convert_16_bit_to_byte_array(temp_value, frame_ptr);
		#endif

	/* Destination address */
	if (FCF_SHORT_ADDR == dst_addr_mode) {
     834:	82 30       	cpi	r24, 0x02	; 2
     836:	59 f4       	brne	.+22     	; 0x84e <transmit_frame+0xd0>
		frame_ptr -= SHORT_ADDR_LEN;
		convert_16_bit_to_byte_array(*((uint16_t *)dst_addr),
     838:	fb 01       	movw	r30, r22
     83a:	80 81       	ld	r24, Z
     83c:	91 81       	ldd	r25, Z+1	; 0x01
     83e:	fd 01       	movw	r30, r26
     840:	92 93       	st	-Z, r25
     842:	82 93       	st	-Z, r24
     844:	3f 01       	movw	r6, r30
				frame_ptr);

		fcf |= FCF_SET_DEST_ADDR_MODE(FCF_SHORT_ADDR);
     846:	ca 01       	movw	r24, r20
     848:	80 64       	ori	r24, 0x40	; 64
     84a:	98 60       	ori	r25, 0x08	; 8
     84c:	0f c0       	rjmp	.+30     	; 0x86c <transmit_frame+0xee>
	} else {
		frame_ptr -= EXT_ADDR_LEN;
     84e:	3d 01       	movw	r6, r26
     850:	f8 e0       	ldi	r31, 0x08	; 8
     852:	6f 1a       	sub	r6, r31
     854:	71 08       	sbc	r7, r1
		frame_length += PL_POS_DST_ADDR_START;
     856:	3a 5f       	subi	r19, 0xFA	; 250

		convert_64_bit_to_byte_array(*((uint64_t *)dst_addr),
     858:	88 e0       	ldi	r24, 0x08	; 8
     85a:	fb 01       	movw	r30, r22
     85c:	d3 01       	movw	r26, r6
     85e:	01 90       	ld	r0, Z+
     860:	0d 92       	st	X+, r0
     862:	8a 95       	dec	r24
     864:	e1 f7       	brne	.-8      	; 0x85e <transmit_frame+0xe0>
				frame_ptr);

		fcf |= FCF_SET_DEST_ADDR_MODE(FCF_LONG_ADDR);
     866:	ca 01       	movw	r24, r20
     868:	80 64       	ori	r24, 0x40	; 64
     86a:	9c 60       	ori	r25, 0x0C	; 12


	/* Destination PAN-Id */
	temp_value = CCPU_ENDIAN_TO_LE16(DST_PAN_ID);
	frame_ptr -= PAN_ID_LEN;
	convert_16_bit_to_byte_array(temp_value, frame_ptr);
     86c:	4e ef       	ldi	r20, 0xFE	; 254
     86e:	5a ec       	ldi	r21, 0xCA	; 202
     870:	f3 01       	movw	r30, r6
     872:	32 97       	sbiw	r30, 0x02	; 2
     874:	51 83       	std	Z+1, r21	; 0x01
     876:	40 83       	st	Z, r20

	/* Set DSN. */
	frame_ptr--;
	*frame_ptr = msdu_handle;
     878:	31 97       	sbiw	r30, 0x01	; 1
     87a:	20 83       	st	Z, r18

	/* Set the FCF. */
	fcf |= FCF_FRAMETYPE_DATA;
	if (ack_req) {
     87c:	c1 10       	cpse	r12, r1
     87e:	02 c0       	rjmp	.+4      	; 0x884 <transmit_frame+0x106>
	/* Set DSN. */
	frame_ptr--;
	*frame_ptr = msdu_handle;

	/* Set the FCF. */
	fcf |= FCF_FRAMETYPE_DATA;
     880:	81 60       	ori	r24, 0x01	; 1
     882:	01 c0       	rjmp	.+2      	; 0x886 <transmit_frame+0x108>
	if (ack_req) {
	fcf |= FCF_ACK_REQUEST;
     884:	81 62       	ori	r24, 0x21	; 33
	}

	frame_ptr -= FCF_LEN;
	convert_16_bit_to_byte_array(CCPU_ENDIAN_TO_LE16(fcf), frame_ptr);
     886:	f3 01       	movw	r30, r6
     888:	35 97       	sbiw	r30, 0x05	; 5
     88a:	91 83       	std	Z+1, r25	; 0x01
     88c:	80 83       	st	Z, r24

	/* First element shall be length of PHY frame. */
	frame_ptr--;
	*frame_ptr = frame_length;
     88e:	d3 01       	movw	r26, r6
     890:	16 97       	sbiw	r26, 0x06	; 6
     892:	3c 93       	st	X, r19

	/* Finished building of frame. */
	tx_frame_info->mpdu = frame_ptr;
     894:	b0 93 19 02 	sts	0x0219, r27	; 0x800219 <storage_buffer+0x8>
     898:	a0 93 18 02 	sts	0x0218, r26	; 0x800218 <storage_buffer+0x7>

	return(tal_tx_frame(tx_frame_info, csma_mode, frame_retry));
     89c:	48 2d       	mov	r20, r8
     89e:	6a 2d       	mov	r22, r10
     8a0:	81 e1       	ldi	r24, 0x11	; 17
     8a2:	92 e0       	ldi	r25, 0x02	; 2
     8a4:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <tal_tx_frame>
}
     8a8:	df 91       	pop	r29
     8aa:	cf 91       	pop	r28
     8ac:	1f 91       	pop	r17
     8ae:	0f 91       	pop	r16
     8b0:	ef 90       	pop	r14
     8b2:	cf 90       	pop	r12
     8b4:	af 90       	pop	r10
     8b6:	8f 90       	pop	r8
     8b8:	7f 90       	pop	r7
     8ba:	6f 90       	pop	r6
     8bc:	5f 90       	pop	r5
     8be:	4f 90       	pop	r4
     8c0:	08 95       	ret

000008c2 <transmit_sample_frame>:
 * \brief This function transmits a sample data frame 
 * \param payload address of the payload to be transmitted
 * \payload_length Length of the payload to be trasnmitted *
 */
void transmit_sample_frame(uint8_t* payload,uint8_t payload_length, int selecDirec)
{
     8c2:	8f 92       	push	r8
     8c4:	af 92       	push	r10
     8c6:	cf 92       	push	r12
     8c8:	ef 92       	push	r14
     8ca:	0f 93       	push	r16
     8cc:	1f 93       	push	r17
     8ce:	cf 93       	push	r28
     8d0:	df 93       	push	r29
     8d2:	1f 92       	push	r1
     8d4:	1f 92       	push	r1
     8d6:	cd b7       	in	r28, 0x3d	; 61
     8d8:	de b7       	in	r29, 0x3e	; 62
	static uint16_t seq_num = 0;
	bool ack_req = ACK_REQ;
	bool frame_retry = FRAME_RETRY;
	csma_mode_t csma_mode = CSMA_MODE;
	uint16_t dst_addr;
	if (selecDirec==3)
     8da:	43 30       	cpi	r20, 0x03	; 3
     8dc:	51 05       	cpc	r21, r1
     8de:	29 f4       	brne	.+10     	; 0x8ea <transmit_sample_frame+0x28>
	{
		dst_addr = CCPU_ENDIAN_TO_LE16((uint16_t)0x0003);
     8e0:	23 e0       	ldi	r18, 0x03	; 3
     8e2:	30 e0       	ldi	r19, 0x00	; 0
     8e4:	3a 83       	std	Y+2, r19	; 0x02
     8e6:	29 83       	std	Y+1, r18	; 0x01
     8e8:	07 c0       	rjmp	.+14     	; 0x8f8 <transmit_sample_frame+0x36>
	}
	else if (selecDirec==1)
     8ea:	41 30       	cpi	r20, 0x01	; 1
     8ec:	51 05       	cpc	r21, r1
     8ee:	21 f4       	brne	.+8      	; 0x8f8 <transmit_sample_frame+0x36>
	{
		dst_addr = CCPU_ENDIAN_TO_LE16((uint16_t)0x0001);
     8f0:	21 e0       	ldi	r18, 0x01	; 1
     8f2:	30 e0       	ldi	r19, 0x00	; 0
     8f4:	3a 83       	std	Y+2, r19	; 0x02
     8f6:	29 83       	std	Y+1, r18	; 0x01

	transmit_frame(
		FCF_SHORT_ADDR,
		(uint8_t*)&dst_addr,
		FCF_SHORT_ADDR,
		seq_num++,
     8f8:	20 91 0f 02 	lds	r18, 0x020F	; 0x80020f <seq_num.3029>
     8fc:	30 91 10 02 	lds	r19, 0x0210	; 0x800210 <seq_num.3029+0x1>
     900:	a9 01       	movw	r20, r18
     902:	4f 5f       	subi	r20, 0xFF	; 255
     904:	5f 4f       	sbci	r21, 0xFF	; 255
     906:	50 93 10 02 	sts	0x0210, r21	; 0x800210 <seq_num.3029+0x1>
     90a:	40 93 0f 02 	sts	0x020F, r20	; 0x80020f <seq_num.3029>
	else if (selecDirec==1)
	{
		dst_addr = CCPU_ENDIAN_TO_LE16((uint16_t)0x0001);
	}

	transmit_frame(
     90e:	81 2c       	mov	r8, r1
     910:	68 94       	set
     912:	aa 24       	eor	r10, r10
     914:	a1 f8       	bld	r10, 1
     916:	c1 2c       	mov	r12, r1
     918:	e6 2e       	mov	r14, r22
     91a:	8c 01       	movw	r16, r24
     91c:	42 e0       	ldi	r20, 0x02	; 2
     91e:	be 01       	movw	r22, r28
     920:	6f 5f       	subi	r22, 0xFF	; 255
     922:	7f 4f       	sbci	r23, 0xFF	; 255
     924:	82 e0       	ldi	r24, 0x02	; 2
     926:	2b df       	rcall	.-426    	; 0x77e <transmit_frame>
		payload_length,
		ack_req,
		csma_mode,
		frame_retry);

}
     928:	0f 90       	pop	r0
     92a:	0f 90       	pop	r0
     92c:	df 91       	pop	r29
     92e:	cf 91       	pop	r28
     930:	1f 91       	pop	r17
     932:	0f 91       	pop	r16
     934:	ef 90       	pop	r14
     936:	cf 90       	pop	r12
     938:	af 90       	pop	r10
     93a:	8f 90       	pop	r8
     93c:	08 95       	ret

0000093e <init_data_reception>:
		   bool mode = true;
		   tal_rxaack_prom_mode_ctrl(true);
		   tal_pib_set(macPromiscuousMode, (pib_value_t *)&mode);
       #endif
       /*RX_AACK_ON Mode is enabled if Promiscuous Mode is not used,else RX is switched on in RX_ON Mode*/
       tal_rx_enable(PHY_RX_ON); 
     93e:	86 e0       	ldi	r24, 0x06	; 6
     940:	0c 94 c8 0e 	jmp	0x1d90	; 0x1d90 <tal_rx_enable>
     944:	08 95       	ret

00000946 <wireless_init>:

/**
 * \brief This Function initializes the Wireless Module and board components i.e clock,irq etc
 */
void wireless_init(void)
{
     946:	cf 93       	push	r28
     948:	df 93       	push	r29
     94a:	00 d0       	rcall	.+0      	; 0x94c <wireless_init+0x6>
     94c:	00 d0       	rcall	.+0      	; 0x94e <wireless_init+0x8>
     94e:	cd b7       	in	r28, 0x3d	; 61
     950:	de b7       	in	r29, 0x3e	; 62
	/*Initialize IRQ*/
	irq_initialize_vectors();

  sysclk_init();
     952:	39 d0       	rcall	.+114    	; 0x9c6 <sysclk_init>

	/* Initialize the board.
	 * The board-specific conf_board.h file contains the configuration of
	 * the board initialization.
	 */
	board_init();
     954:	36 d0       	rcall	.+108    	; 0x9c2 <board_init>


	/*Initialize the Stack SW Timer*/
	sw_timer_init();
     956:	ae d1       	rcall	.+860    	; 0xcb4 <sw_timer_init>
     958:	7f d5       	rcall	.+2814   	; 0x1458 <tal_init>
	
	/*Initialize the TAL Layer*/
	if(tal_init()!= MAC_SUCCESS)
     95a:	81 11       	cpse	r24, r1
     95c:	ff cf       	rjmp	.-2      	; 0x95c <wireless_init+0x16>
     95e:	78 94       	sei
     960:	82 e0       	ldi	r24, 0x02	; 2
	{
	//Error in Initializing the TAL Layer
	app_alert();	
	}
	cpu_irq_enable();
     962:	90 e0       	ldi	r25, 0x00	; 0
	
	uint16_t src_addr = CCPU_ENDIAN_TO_LE16(SRC_ADDR);
     964:	9a 83       	std	Y+2, r25	; 0x02
     966:	89 83       	std	Y+1, r24	; 0x01
     968:	8e ef       	ldi	r24, 0xFE	; 254
     96a:	9a ec       	ldi	r25, 0xCA	; 202
	uint16_t pan_id = CCPU_ENDIAN_TO_LE16(SRC_PAN_ID);
     96c:	9c 83       	std	Y+4, r25	; 0x04
     96e:	8b 83       	std	Y+3, r24	; 0x03
     970:	8b e0       	ldi	r24, 0x0B	; 11
     972:	8d 83       	std	Y+5, r24	; 0x05
	uint8_t channel = CHANNEL_TRANSMIT_RECEIVE;
     974:	1e 82       	std	Y+6, r1	; 0x06
     976:	be 01       	movw	r22, r28
	uint8_t channel_page = CHANNEL_PAGE_TRANSMIT_RECEIVE;
     978:	6f 5f       	subi	r22, 0xFF	; 255
	
	/* Set Default address. */
	tal_pib_set(macShortAddress, (pib_value_t *)&src_addr);
     97a:	7f 4f       	sbci	r23, 0xFF	; 255
     97c:	83 e5       	ldi	r24, 0x53	; 83
     97e:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <tal_pib_set>
     982:	be 01       	movw	r22, r28
     984:	6d 5f       	subi	r22, 0xFD	; 253

	/* Set PAN ID. */
	tal_pib_set(macPANId, (pib_value_t *)&pan_id);
     986:	7f 4f       	sbci	r23, 0xFF	; 255
     988:	80 e5       	ldi	r24, 0x50	; 80
     98a:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <tal_pib_set>
     98e:	be 01       	movw	r22, r28
     990:	6b 5f       	subi	r22, 0xFB	; 251

	/* Set channel. */ /* Channel 11  is set as default in tal_init() */
	tal_pib_set(phyCurrentChannel, (pib_value_t *)&channel);
     992:	7f 4f       	sbci	r23, 0xFF	; 255
     994:	80 e0       	ldi	r24, 0x00	; 0
     996:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <tal_pib_set>
     99a:	be 01       	movw	r22, r28
     99c:	6a 5f       	subi	r22, 0xFA	; 250
	
	/* Set Channel Page */ /* Channel Page 0  is set as default in tal_init() */
	tal_pib_set(phyCurrentPage,(pib_value_t *)&channel_page);
     99e:	7f 4f       	sbci	r23, 0xFF	; 255
     9a0:	84 e0       	ldi	r24, 0x04	; 4
     9a2:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <tal_pib_set>
     9a6:	62 e0       	ldi	r22, 0x02	; 2
     9a8:	80 e0       	ldi	r24, 0x00	; 0
    {
	    tal_ant_div_config(ANT_DIVERSITY_ENABLE,ANTENNA_DEFAULT);
    }
    else
    {
	    tal_ant_div_config(ANT_DIVERSITY_DISABLE,ANT_SELECT); 
     9aa:	0e 94 d7 0f 	call	0x1fae	; 0x1fae <tal_ant_div_config>
     9ae:	c7 df       	rcall	.-114    	; 0x93e <init_data_reception>
    }
    #endif


	init_data_reception();
     9b0:	26 96       	adiw	r28, 0x06	; 6
     9b2:	0f b6       	in	r0, 0x3f	; 63

}
     9b4:	f8 94       	cli
     9b6:	de bf       	out	0x3e, r29	; 62
     9b8:	0f be       	out	0x3f, r0	; 63
     9ba:	cd bf       	out	0x3d, r28	; 61
     9bc:	df 91       	pop	r29
     9be:	cf 91       	pop	r28
     9c0:	08 95       	ret

000009c2 <board_init>:
     9c2:	08 95       	ret

000009c4 <modules_init>:
     9c4:	08 95       	ret

000009c6 <sysclk_init>:
     9c6:	cf 93       	push	r28
     9c8:	df 93       	push	r29
     9ca:	1f 92       	push	r1
     9cc:	cd b7       	in	r28, 0x3d	; 61
     9ce:	de b7       	in	r29, 0x3e	; 62
     9d0:	8f ef       	ldi	r24, 0xFF	; 255
     9d2:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7c0064>
     9d6:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7c0065>
     9da:	8f b7       	in	r24, 0x3f	; 63
     9dc:	89 83       	std	Y+1, r24	; 0x01
     9de:	f8 94       	cli
     9e0:	89 81       	ldd	r24, Y+1	; 0x01
     9e2:	5f 93       	push	r21
     9e4:	50 e8       	ldi	r21, 0x80	; 128
     9e6:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7c0061>
     9ea:	50 e0       	ldi	r21, 0x00	; 0
     9ec:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__TEXT_REGION_LENGTH__+0x7c0061>
     9f0:	5f 91       	pop	r21
     9f2:	8f bf       	out	0x3f, r24	; 63
     9f4:	0f 90       	pop	r0
     9f6:	df 91       	pop	r29
     9f8:	cf 91       	pop	r28
     9fa:	08 95       	ret

000009fc <sysclk_enable_module>:
     9fc:	cf 93       	push	r28
     9fe:	df 93       	push	r29
     a00:	1f 92       	push	r1
     a02:	cd b7       	in	r28, 0x3d	; 61
     a04:	de b7       	in	r29, 0x3e	; 62
     a06:	9f b7       	in	r25, 0x3f	; 63
     a08:	99 83       	std	Y+1, r25	; 0x01
     a0a:	f8 94       	cli
     a0c:	99 81       	ldd	r25, Y+1	; 0x01
     a0e:	82 30       	cpi	r24, 0x02	; 2
     a10:	40 f4       	brcc	.+16     	; 0xa22 <sysclk_enable_module+0x26>
     a12:	e8 2f       	mov	r30, r24
     a14:	f0 e0       	ldi	r31, 0x00	; 0
     a16:	ec 59       	subi	r30, 0x9C	; 156
     a18:	ff 4f       	sbci	r31, 0xFF	; 255
     a1a:	60 95       	com	r22
     a1c:	80 81       	ld	r24, Z
     a1e:	68 23       	and	r22, r24
     a20:	60 83       	st	Z, r22
     a22:	9f bf       	out	0x3f, r25	; 63
     a24:	0f 90       	pop	r0
     a26:	df 91       	pop	r29
     a28:	cf 91       	pop	r28
     a2a:	08 95       	ret

00000a2c <sysclk_disable_module>:
     a2c:	cf 93       	push	r28
     a2e:	df 93       	push	r29
     a30:	1f 92       	push	r1
     a32:	cd b7       	in	r28, 0x3d	; 61
     a34:	de b7       	in	r29, 0x3e	; 62
     a36:	9f b7       	in	r25, 0x3f	; 63
     a38:	99 83       	std	Y+1, r25	; 0x01
     a3a:	f8 94       	cli
     a3c:	99 81       	ldd	r25, Y+1	; 0x01
     a3e:	82 30       	cpi	r24, 0x02	; 2
     a40:	38 f4       	brcc	.+14     	; 0xa50 <sysclk_disable_module+0x24>
     a42:	e8 2f       	mov	r30, r24
     a44:	f0 e0       	ldi	r31, 0x00	; 0
     a46:	ec 59       	subi	r30, 0x9C	; 156
     a48:	ff 4f       	sbci	r31, 0xFF	; 255
     a4a:	80 81       	ld	r24, Z
     a4c:	68 2b       	or	r22, r24
     a4e:	60 83       	st	Z, r22
     a50:	9f bf       	out	0x3f, r25	; 63
     a52:	0f 90       	pop	r0
     a54:	df 91       	pop	r29
     a56:	cf 91       	pop	r28
     a58:	08 95       	ret

00000a5a <hw_expiry_cb>:
     a5a:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <running_timers>
     a5e:	88 23       	and	r24, r24
     a60:	19 f0       	breq	.+6      	; 0xa68 <hw_expiry_cb+0xe>
     a62:	81 e0       	ldi	r24, 0x01	; 1
     a64:	80 93 24 05 	sts	0x0524, r24	; 0x800524 <timer_trigger>
     a68:	08 95       	ret

00000a6a <hw_overflow_cb>:
     a6a:	1f 93       	push	r17
     a6c:	cf 93       	push	r28
     a6e:	df 93       	push	r29
     a70:	1f 92       	push	r1
     a72:	cd b7       	in	r28, 0x3d	; 61
     a74:	de b7       	in	r29, 0x3e	; 62
     a76:	80 91 f0 04 	lds	r24, 0x04F0	; 0x8004f0 <sys_time>
     a7a:	90 91 f1 04 	lds	r25, 0x04F1	; 0x8004f1 <sys_time+0x1>
     a7e:	01 96       	adiw	r24, 0x01	; 1
     a80:	90 93 f1 04 	sts	0x04F1, r25	; 0x8004f1 <sys_time+0x1>
     a84:	80 93 f0 04 	sts	0x04F0, r24	; 0x8004f0 <sys_time>
     a88:	8f b7       	in	r24, 0x3f	; 63
     a8a:	89 83       	std	Y+1, r24	; 0x01
     a8c:	f8 94       	cli
     a8e:	19 81       	ldd	r17, Y+1	; 0x01
     a90:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <running_timer_queue_head>
     a94:	8f 3f       	cpi	r24, 0xFF	; 255
     a96:	e9 f1       	breq	.+122    	; 0xb12 <hw_overflow_cb+0xa8>
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	fc 01       	movw	r30, r24
     a9c:	ee 0f       	add	r30, r30
     a9e:	ff 1f       	adc	r31, r31
     aa0:	9c 01       	movw	r18, r24
     aa2:	22 0f       	add	r18, r18
     aa4:	33 1f       	adc	r19, r19
     aa6:	22 0f       	add	r18, r18
     aa8:	33 1f       	adc	r19, r19
     aaa:	22 0f       	add	r18, r18
     aac:	33 1f       	adc	r19, r19
     aae:	e2 0f       	add	r30, r18
     ab0:	f3 1f       	adc	r31, r19
     ab2:	ee 50       	subi	r30, 0x0E	; 14
     ab4:	fb 4f       	sbci	r31, 0xFB	; 251
     ab6:	21 85       	ldd	r18, Z+9	; 0x09
     ab8:	21 11       	cpse	r18, r1
     aba:	2b c0       	rjmp	.+86     	; 0xb12 <hw_overflow_cb+0xa8>
     abc:	fc 01       	movw	r30, r24
     abe:	ee 0f       	add	r30, r30
     ac0:	ff 1f       	adc	r31, r31
     ac2:	88 0f       	add	r24, r24
     ac4:	99 1f       	adc	r25, r25
     ac6:	88 0f       	add	r24, r24
     ac8:	99 1f       	adc	r25, r25
     aca:	88 0f       	add	r24, r24
     acc:	99 1f       	adc	r25, r25
     ace:	e8 0f       	add	r30, r24
     ad0:	f9 1f       	adc	r31, r25
     ad2:	ee 50       	subi	r30, 0x0E	; 14
     ad4:	fb 4f       	sbci	r31, 0xFB	; 251
     ad6:	80 81       	ld	r24, Z
     ad8:	91 81       	ldd	r25, Z+1	; 0x01
     ada:	a2 81       	ldd	r26, Z+2	; 0x02
     adc:	b3 81       	ldd	r27, Z+3	; 0x03
     ade:	20 91 f0 04 	lds	r18, 0x04F0	; 0x8004f0 <sys_time>
     ae2:	30 91 f1 04 	lds	r19, 0x04F1	; 0x8004f1 <sys_time+0x1>
     ae6:	2a 17       	cp	r18, r26
     ae8:	3b 07       	cpc	r19, r27
     aea:	99 f4       	brne	.+38     	; 0xb12 <hw_overflow_cb+0xa8>
     aec:	a7 db       	rcall	.-2226   	; 0x23c <common_tc_delay>
     aee:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <running_timer_queue_head>
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	fc 01       	movw	r30, r24
     af6:	ee 0f       	add	r30, r30
     af8:	ff 1f       	adc	r31, r31
     afa:	88 0f       	add	r24, r24
     afc:	99 1f       	adc	r25, r25
     afe:	88 0f       	add	r24, r24
     b00:	99 1f       	adc	r25, r25
     b02:	88 0f       	add	r24, r24
     b04:	99 1f       	adc	r25, r25
     b06:	e8 0f       	add	r30, r24
     b08:	f9 1f       	adc	r31, r25
     b0a:	ee 50       	subi	r30, 0x0E	; 14
     b0c:	fb 4f       	sbci	r31, 0xFB	; 251
     b0e:	81 e0       	ldi	r24, 0x01	; 1
     b10:	81 87       	std	Z+9, r24	; 0x09
     b12:	1f bf       	out	0x3f, r17	; 63
     b14:	0f 90       	pop	r0
     b16:	df 91       	pop	r29
     b18:	cf 91       	pop	r28
     b1a:	1f 91       	pop	r17
     b1c:	08 95       	ret

00000b1e <load_hw_timer>:
     b1e:	0f 93       	push	r16
     b20:	1f 93       	push	r17
     b22:	cf 93       	push	r28
     b24:	df 93       	push	r29
     b26:	c8 2f       	mov	r28, r24
     b28:	8f 3f       	cpi	r24, 0xFF	; 255
     b2a:	09 f4       	brne	.+2      	; 0xb2e <load_hw_timer+0x10>
     b2c:	60 c0       	rjmp	.+192    	; 0xbee <load_hw_timer+0xd0>
     b2e:	00 91 f0 04 	lds	r16, 0x04F0	; 0x8004f0 <sys_time>
     b32:	10 91 f1 04 	lds	r17, 0x04F1	; 0x8004f1 <sys_time+0x1>
     b36:	3f db       	rcall	.-2434   	; 0x1b6 <common_tc_read_count>
     b38:	40 91 f0 04 	lds	r20, 0x04F0	; 0x8004f0 <sys_time>
     b3c:	50 91 f1 04 	lds	r21, 0x04F1	; 0x8004f1 <sys_time+0x1>
     b40:	04 17       	cp	r16, r20
     b42:	15 07       	cpc	r17, r21
     b44:	a1 f7       	brne	.-24     	; 0xb2e <load_hw_timer+0x10>
     b46:	d0 e0       	ldi	r29, 0x00	; 0
     b48:	60 e0       	ldi	r22, 0x00	; 0
     b4a:	70 e0       	ldi	r23, 0x00	; 0
     b4c:	fe 01       	movw	r30, r28
     b4e:	ee 0f       	add	r30, r30
     b50:	ff 1f       	adc	r31, r31
     b52:	9e 01       	movw	r18, r28
     b54:	22 0f       	add	r18, r18
     b56:	33 1f       	adc	r19, r19
     b58:	22 0f       	add	r18, r18
     b5a:	33 1f       	adc	r19, r19
     b5c:	22 0f       	add	r18, r18
     b5e:	33 1f       	adc	r19, r19
     b60:	e2 0f       	add	r30, r18
     b62:	f3 1f       	adc	r31, r19
     b64:	ee 50       	subi	r30, 0x0E	; 14
     b66:	fb 4f       	sbci	r31, 0xFB	; 251
     b68:	ba 01       	movw	r22, r20
     b6a:	55 27       	eor	r21, r21
     b6c:	44 27       	eor	r20, r20
     b6e:	a0 e0       	ldi	r26, 0x00	; 0
     b70:	b0 e0       	ldi	r27, 0x00	; 0
     b72:	48 2b       	or	r20, r24
     b74:	59 2b       	or	r21, r25
     b76:	6a 2b       	or	r22, r26
     b78:	7b 2b       	or	r23, r27
     b7a:	80 81       	ld	r24, Z
     b7c:	91 81       	ldd	r25, Z+1	; 0x01
     b7e:	a2 81       	ldd	r26, Z+2	; 0x02
     b80:	b3 81       	ldd	r27, Z+3	; 0x03
     b82:	84 1b       	sub	r24, r20
     b84:	95 0b       	sbc	r25, r21
     b86:	a6 0b       	sbc	r26, r22
     b88:	b7 0b       	sbc	r27, r23
     b8a:	8f 3f       	cpi	r24, 0xFF	; 255
     b8c:	2f ef       	ldi	r18, 0xFF	; 255
     b8e:	92 07       	cpc	r25, r18
     b90:	a2 07       	cpc	r26, r18
     b92:	2f e7       	ldi	r18, 0x7F	; 127
     b94:	b2 07       	cpc	r27, r18
     b96:	38 f5       	brcc	.+78     	; 0xbe6 <load_hw_timer+0xc8>
     b98:	9e 01       	movw	r18, r28
     b9a:	22 0f       	add	r18, r18
     b9c:	33 1f       	adc	r19, r19
     b9e:	22 0f       	add	r18, r18
     ba0:	33 1f       	adc	r19, r19
     ba2:	22 0f       	add	r18, r18
     ba4:	33 1f       	adc	r19, r19
     ba6:	fe 01       	movw	r30, r28
     ba8:	ee 0f       	add	r30, r30
     baa:	ff 1f       	adc	r31, r31
     bac:	e2 0f       	add	r30, r18
     bae:	f3 1f       	adc	r31, r19
     bb0:	ee 50       	subi	r30, 0x0E	; 14
     bb2:	fb 4f       	sbci	r31, 0xFB	; 251
     bb4:	21 85       	ldd	r18, Z+9	; 0x09
     bb6:	21 11       	cpse	r18, r1
     bb8:	1b c0       	rjmp	.+54     	; 0xbf0 <load_hw_timer+0xd2>
     bba:	00 97       	sbiw	r24, 0x00	; 0
     bbc:	21 e0       	ldi	r18, 0x01	; 1
     bbe:	a2 07       	cpc	r26, r18
     bc0:	b1 05       	cpc	r27, r1
     bc2:	b0 f4       	brcc	.+44     	; 0xbf0 <load_hw_timer+0xd2>
     bc4:	3b db       	rcall	.-2442   	; 0x23c <common_tc_delay>
     bc6:	ce 01       	movw	r24, r28
     bc8:	88 0f       	add	r24, r24
     bca:	99 1f       	adc	r25, r25
     bcc:	cc 0f       	add	r28, r28
     bce:	dd 1f       	adc	r29, r29
     bd0:	cc 0f       	add	r28, r28
     bd2:	dd 1f       	adc	r29, r29
     bd4:	cc 0f       	add	r28, r28
     bd6:	dd 1f       	adc	r29, r29
     bd8:	c8 0f       	add	r28, r24
     bda:	d9 1f       	adc	r29, r25
     bdc:	ce 50       	subi	r28, 0x0E	; 14
     bde:	db 4f       	sbci	r29, 0xFB	; 251
     be0:	81 e0       	ldi	r24, 0x01	; 1
     be2:	89 87       	std	Y+9, r24	; 0x09
     be4:	05 c0       	rjmp	.+10     	; 0xbf0 <load_hw_timer+0xd2>
     be6:	81 e0       	ldi	r24, 0x01	; 1
     be8:	80 93 24 05 	sts	0x0524, r24	; 0x800524 <timer_trigger>
     bec:	01 c0       	rjmp	.+2      	; 0xbf0 <load_hw_timer+0xd2>
     bee:	0b db       	rcall	.-2538   	; 0x206 <common_tc_compare_stop>
     bf0:	df 91       	pop	r29
     bf2:	cf 91       	pop	r28
     bf4:	1f 91       	pop	r17
     bf6:	0f 91       	pop	r16
     bf8:	08 95       	ret

00000bfa <internal_timer_handler>:
     bfa:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <timer_trigger>
     bfe:	88 23       	and	r24, r24
     c00:	09 f4       	brne	.+2      	; 0xc04 <internal_timer_handler+0xa>
     c02:	57 c0       	rjmp	.+174    	; 0xcb2 <internal_timer_handler+0xb8>
     c04:	10 92 24 05 	sts	0x0524, r1	; 0x800524 <timer_trigger>
     c08:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <running_timers>
     c0c:	88 23       	and	r24, r24
     c0e:	09 f4       	brne	.+2      	; 0xc12 <internal_timer_handler+0x18>
     c10:	50 c0       	rjmp	.+160    	; 0xcb2 <internal_timer_handler+0xb8>
     c12:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <expired_timer_queue_head>
     c16:	8f 3f       	cpi	r24, 0xFF	; 255
     c18:	59 f4       	brne	.+22     	; 0xc30 <internal_timer_handler+0x36>
     c1a:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <expired_timer_queue_tail>
     c1e:	8f 3f       	cpi	r24, 0xFF	; 255
     c20:	39 f4       	brne	.+14     	; 0xc30 <internal_timer_handler+0x36>
     c22:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <running_timer_queue_head>
     c26:	80 93 9d 02 	sts	0x029D, r24	; 0x80029d <expired_timer_queue_tail>
     c2a:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <expired_timer_queue_head>
     c2e:	15 c0       	rjmp	.+42     	; 0xc5a <internal_timer_handler+0x60>
     c30:	20 91 9f 02 	lds	r18, 0x029F	; 0x80029f <running_timer_queue_head>
     c34:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <expired_timer_queue_tail>
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	fc 01       	movw	r30, r24
     c3c:	ee 0f       	add	r30, r30
     c3e:	ff 1f       	adc	r31, r31
     c40:	88 0f       	add	r24, r24
     c42:	99 1f       	adc	r25, r25
     c44:	88 0f       	add	r24, r24
     c46:	99 1f       	adc	r25, r25
     c48:	88 0f       	add	r24, r24
     c4a:	99 1f       	adc	r25, r25
     c4c:	e8 0f       	add	r30, r24
     c4e:	f9 1f       	adc	r31, r25
     c50:	ee 50       	subi	r30, 0x0E	; 14
     c52:	fb 4f       	sbci	r31, 0xFB	; 251
     c54:	20 87       	std	Z+8, r18	; 0x08
     c56:	20 93 9d 02 	sts	0x029D, r18	; 0x80029d <expired_timer_queue_tail>
     c5a:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <running_timer_queue_head>
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	fc 01       	movw	r30, r24
     c62:	ee 0f       	add	r30, r30
     c64:	ff 1f       	adc	r31, r31
     c66:	88 0f       	add	r24, r24
     c68:	99 1f       	adc	r25, r25
     c6a:	88 0f       	add	r24, r24
     c6c:	99 1f       	adc	r25, r25
     c6e:	88 0f       	add	r24, r24
     c70:	99 1f       	adc	r25, r25
     c72:	e8 0f       	add	r30, r24
     c74:	f9 1f       	adc	r31, r25
     c76:	ee 50       	subi	r30, 0x0E	; 14
     c78:	fb 4f       	sbci	r31, 0xFB	; 251
     c7a:	80 85       	ldd	r24, Z+8	; 0x08
     c7c:	80 93 9f 02 	sts	0x029F, r24	; 0x80029f <running_timer_queue_head>
     c80:	20 91 9d 02 	lds	r18, 0x029D	; 0x80029d <expired_timer_queue_tail>
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	f9 01       	movw	r30, r18
     c88:	ee 0f       	add	r30, r30
     c8a:	ff 1f       	adc	r31, r31
     c8c:	22 0f       	add	r18, r18
     c8e:	33 1f       	adc	r19, r19
     c90:	22 0f       	add	r18, r18
     c92:	33 1f       	adc	r19, r19
     c94:	22 0f       	add	r18, r18
     c96:	33 1f       	adc	r19, r19
     c98:	e2 0f       	add	r30, r18
     c9a:	f3 1f       	adc	r31, r19
     c9c:	ee 50       	subi	r30, 0x0E	; 14
     c9e:	fb 4f       	sbci	r31, 0xFB	; 251
     ca0:	9f ef       	ldi	r25, 0xFF	; 255
     ca2:	90 87       	std	Z+8, r25	; 0x08
     ca4:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <running_timers>
     ca8:	91 50       	subi	r25, 0x01	; 1
     caa:	90 93 a0 02 	sts	0x02A0, r25	; 0x8002a0 <running_timers>
     cae:	91 11       	cpse	r25, r1
     cb0:	36 cf       	rjmp	.-404    	; 0xb1e <load_hw_timer>
     cb2:	08 95       	ret

00000cb4 <sw_timer_init>:
     cb4:	10 92 a0 02 	sts	0x02A0, r1	; 0x8002a0 <running_timers>
     cb8:	10 92 24 05 	sts	0x0524, r1	; 0x800524 <timer_trigger>
     cbc:	10 92 f1 04 	sts	0x04F1, r1	; 0x8004f1 <sys_time+0x1>
     cc0:	10 92 f0 04 	sts	0x04F0, r1	; 0x8004f0 <sys_time>
     cc4:	8f ef       	ldi	r24, 0xFF	; 255
     cc6:	80 93 9f 02 	sts	0x029F, r24	; 0x80029f <running_timer_queue_head>
     cca:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <expired_timer_queue_head>
     cce:	80 93 9d 02 	sts	0x029D, r24	; 0x80029d <expired_timer_queue_tail>
     cd2:	e2 ef       	ldi	r30, 0xF2	; 242
     cd4:	f4 e0       	ldi	r31, 0x04	; 4
     cd6:	24 e2       	ldi	r18, 0x24	; 36
     cd8:	35 e0       	ldi	r19, 0x05	; 5
     cda:	80 87       	std	Z+8, r24	; 0x08
     cdc:	15 82       	std	Z+5, r1	; 0x05
     cde:	14 82       	std	Z+4, r1	; 0x04
     ce0:	3a 96       	adiw	r30, 0x0a	; 10
     ce2:	e2 17       	cp	r30, r18
     ce4:	f3 07       	cpc	r31, r19
     ce6:	c9 f7       	brne	.-14     	; 0xcda <sw_timer_init+0x26>
     ce8:	10 92 9c 02 	sts	0x029C, r1	; 0x80029c <alloc_timer_id>
     cec:	85 e3       	ldi	r24, 0x35	; 53
     cee:	95 e0       	ldi	r25, 0x05	; 5
     cf0:	63 db       	rcall	.-2362   	; 0x3b8 <set_common_tc_overflow_callback>
     cf2:	8d e2       	ldi	r24, 0x2D	; 45
     cf4:	95 e0       	ldi	r25, 0x05	; 5
     cf6:	65 db       	rcall	.-2358   	; 0x3c2 <set_common_tc_expiry_callback>
     cf8:	16 cb       	rjmp	.-2516   	; 0x326 <common_tc_init>
     cfa:	08 95       	ret

00000cfc <sw_timer_service>:
     cfc:	0f 93       	push	r16
     cfe:	1f 93       	push	r17
     d00:	cf 93       	push	r28
     d02:	df 93       	push	r29
     d04:	1f 92       	push	r1
     d06:	1f 92       	push	r1
     d08:	cd b7       	in	r28, 0x3d	; 61
     d0a:	de b7       	in	r29, 0x3e	; 62
     d0c:	8f b7       	in	r24, 0x3f	; 63
     d0e:	8a 83       	std	Y+2, r24	; 0x02
     d10:	f8 94       	cli
     d12:	1a 81       	ldd	r17, Y+2	; 0x02
     d14:	72 df       	rcall	.-284    	; 0xbfa <internal_timer_handler>
     d16:	1f bf       	out	0x3f, r17	; 63
     d18:	1f ef       	ldi	r17, 0xFF	; 255
     d1a:	01 2f       	mov	r16, r17
     d1c:	37 c0       	rjmp	.+110    	; 0xd8c <sw_timer_service+0x90>
     d1e:	8f b7       	in	r24, 0x3f	; 63
     d20:	89 83       	std	Y+1, r24	; 0x01
     d22:	f8 94       	cli
     d24:	29 81       	ldd	r18, Y+1	; 0x01
     d26:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <expired_timer_queue_head>
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	dc 01       	movw	r26, r24
     d2e:	aa 0f       	add	r26, r26
     d30:	bb 1f       	adc	r27, r27
     d32:	88 0f       	add	r24, r24
     d34:	99 1f       	adc	r25, r25
     d36:	88 0f       	add	r24, r24
     d38:	99 1f       	adc	r25, r25
     d3a:	88 0f       	add	r24, r24
     d3c:	99 1f       	adc	r25, r25
     d3e:	a8 0f       	add	r26, r24
     d40:	b9 1f       	adc	r27, r25
     d42:	ae 50       	subi	r26, 0x0E	; 14
     d44:	bb 4f       	sbci	r27, 0xFB	; 251
     d46:	18 96       	adiw	r26, 0x08	; 8
     d48:	9c 91       	ld	r25, X
     d4a:	18 97       	sbiw	r26, 0x08	; 8
     d4c:	14 96       	adiw	r26, 0x04	; 4
     d4e:	ed 91       	ld	r30, X+
     d50:	fc 91       	ld	r31, X
     d52:	15 97       	sbiw	r26, 0x05	; 5
     d54:	16 96       	adiw	r26, 0x06	; 6
     d56:	4d 91       	ld	r20, X+
     d58:	5c 91       	ld	r21, X
     d5a:	17 97       	sbiw	r26, 0x07	; 7
     d5c:	18 96       	adiw	r26, 0x08	; 8
     d5e:	1c 93       	st	X, r17
     d60:	18 97       	sbiw	r26, 0x08	; 8
     d62:	15 96       	adiw	r26, 0x05	; 5
     d64:	1c 92       	st	X, r1
     d66:	1e 92       	st	-X, r1
     d68:	14 97       	sbiw	r26, 0x04	; 4
     d6a:	17 96       	adiw	r26, 0x07	; 7
     d6c:	1c 92       	st	X, r1
     d6e:	1e 92       	st	-X, r1
     d70:	16 97       	sbiw	r26, 0x06	; 6
     d72:	19 96       	adiw	r26, 0x09	; 9
     d74:	1c 92       	st	X, r1
     d76:	90 93 9e 02 	sts	0x029E, r25	; 0x80029e <expired_timer_queue_head>
     d7a:	9f 3f       	cpi	r25, 0xFF	; 255
     d7c:	11 f4       	brne	.+4      	; 0xd82 <sw_timer_service+0x86>
     d7e:	00 93 9d 02 	sts	0x029D, r16	; 0x80029d <expired_timer_queue_tail>
     d82:	2f bf       	out	0x3f, r18	; 63
     d84:	30 97       	sbiw	r30, 0x00	; 0
     d86:	11 f0       	breq	.+4      	; 0xd8c <sw_timer_service+0x90>
     d88:	ca 01       	movw	r24, r20
     d8a:	19 95       	eicall
     d8c:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <expired_timer_queue_head>
     d90:	8f 3f       	cpi	r24, 0xFF	; 255
     d92:	29 f6       	brne	.-118    	; 0xd1e <sw_timer_service+0x22>
     d94:	0f 90       	pop	r0
     d96:	0f 90       	pop	r0
     d98:	df 91       	pop	r29
     d9a:	cf 91       	pop	r28
     d9c:	1f 91       	pop	r17
     d9e:	0f 91       	pop	r16
     da0:	08 95       	ret

00000da2 <pal_init>:
     da2:	80 e0       	ldi	r24, 0x00	; 0
     da4:	08 95       	ret

00000da6 <pal_task>:
     da6:	aa cf       	rjmp	.-172    	; 0xcfc <sw_timer_service>
     da8:	08 95       	ret

00000daa <bmm_buffer_init>:
     daa:	cf 93       	push	r28
     dac:	df 93       	push	r29
     dae:	81 ea       	ldi	r24, 0xA1	; 161
     db0:	92 e0       	ldi	r25, 0x02	; 2
     db2:	b0 d0       	rcall	.+352    	; 0xf14 <qmm_queue_init>
     db4:	c6 ea       	ldi	r28, 0xA6	; 166
     db6:	d2 e0       	ldi	r29, 0x02	; 2
     db8:	82 eb       	ldi	r24, 0xB2	; 178
     dba:	92 e0       	ldi	r25, 0x02	; 2
     dbc:	99 83       	std	Y+1, r25	; 0x01
     dbe:	88 83       	st	Y, r24
     dc0:	be 01       	movw	r22, r28
     dc2:	81 ea       	ldi	r24, 0xA1	; 161
     dc4:	92 e0       	ldi	r25, 0x02	; 2
     dc6:	ad d0       	rcall	.+346    	; 0xf22 <qmm_queue_append>
     dc8:	8d e3       	ldi	r24, 0x3D	; 61
     dca:	93 e0       	ldi	r25, 0x03	; 3
     dcc:	9d 83       	std	Y+5, r25	; 0x05
     dce:	8c 83       	std	Y+4, r24	; 0x04
     dd0:	6a ea       	ldi	r22, 0xAA	; 170
     dd2:	72 e0       	ldi	r23, 0x02	; 2
     dd4:	81 ea       	ldi	r24, 0xA1	; 161
     dd6:	92 e0       	ldi	r25, 0x02	; 2
     dd8:	a4 d0       	rcall	.+328    	; 0xf22 <qmm_queue_append>
     dda:	88 ec       	ldi	r24, 0xC8	; 200
     ddc:	93 e0       	ldi	r25, 0x03	; 3
     dde:	99 87       	std	Y+9, r25	; 0x09
     de0:	88 87       	std	Y+8, r24	; 0x08
     de2:	6e ea       	ldi	r22, 0xAE	; 174
     de4:	72 e0       	ldi	r23, 0x02	; 2
     de6:	81 ea       	ldi	r24, 0xA1	; 161
     de8:	92 e0       	ldi	r25, 0x02	; 2
     dea:	9b d0       	rcall	.+310    	; 0xf22 <qmm_queue_append>
     dec:	df 91       	pop	r29
     dee:	cf 91       	pop	r28
     df0:	08 95       	ret

00000df2 <bmm_buffer_alloc>:
     df2:	60 e0       	ldi	r22, 0x00	; 0
     df4:	70 e0       	ldi	r23, 0x00	; 0
     df6:	81 ea       	ldi	r24, 0xA1	; 161
     df8:	92 e0       	ldi	r25, 0x02	; 2
     dfa:	b8 c0       	rjmp	.+368    	; 0xf6c <qmm_queue_remove>
     dfc:	08 95       	ret

00000dfe <bmm_buffer_free>:
     dfe:	00 97       	sbiw	r24, 0x00	; 0
     e00:	21 f0       	breq	.+8      	; 0xe0a <bmm_buffer_free+0xc>
     e02:	bc 01       	movw	r22, r24
     e04:	81 ea       	ldi	r24, 0xA1	; 161
     e06:	92 e0       	ldi	r25, 0x02	; 2
     e08:	8c c0       	rjmp	.+280    	; 0xf22 <qmm_queue_append>
     e0a:	08 95       	ret

00000e0c <queue_read_or_remove>:
     e0c:	8f 92       	push	r8
     e0e:	9f 92       	push	r9
     e10:	af 92       	push	r10
     e12:	bf 92       	push	r11
     e14:	cf 92       	push	r12
     e16:	df 92       	push	r13
     e18:	ef 92       	push	r14
     e1a:	ff 92       	push	r15
     e1c:	0f 93       	push	r16
     e1e:	1f 93       	push	r17
     e20:	cf 93       	push	r28
     e22:	df 93       	push	r29
     e24:	1f 92       	push	r1
     e26:	cd b7       	in	r28, 0x3d	; 61
     e28:	de b7       	in	r29, 0x3e	; 62
     e2a:	2f b7       	in	r18, 0x3f	; 63
     e2c:	29 83       	std	Y+1, r18	; 0x01
     e2e:	f8 94       	cli
     e30:	89 80       	ldd	r8, Y+1	; 0x01
     e32:	dc 01       	movw	r26, r24
     e34:	14 96       	adiw	r26, 0x04	; 4
     e36:	2c 91       	ld	r18, X
     e38:	22 23       	and	r18, r18
     e3a:	09 f4       	brne	.+2      	; 0xe3e <queue_read_or_remove+0x32>
     e3c:	56 c0       	rjmp	.+172    	; 0xeea <queue_read_or_remove+0xde>
     e3e:	7a 01       	movw	r14, r20
     e40:	96 2e       	mov	r9, r22
     e42:	5c 01       	movw	r10, r24
     e44:	fc 01       	movw	r30, r24
     e46:	00 81       	ld	r16, Z
     e48:	11 81       	ldd	r17, Z+1	; 0x01
     e4a:	45 2b       	or	r20, r21
     e4c:	e1 f0       	breq	.+56     	; 0xe86 <queue_read_or_remove+0x7a>
     e4e:	01 15       	cp	r16, r1
     e50:	11 05       	cpc	r17, r1
     e52:	09 f4       	brne	.+2      	; 0xe56 <queue_read_or_remove+0x4a>
     e54:	4d c0       	rjmp	.+154    	; 0xef0 <queue_read_or_remove+0xe4>
     e56:	68 01       	movw	r12, r16
     e58:	01 c0       	rjmp	.+2      	; 0xe5c <queue_read_or_remove+0x50>
     e5a:	89 01       	movw	r16, r18
     e5c:	d7 01       	movw	r26, r14
     e5e:	12 96       	adiw	r26, 0x02	; 2
     e60:	6d 91       	ld	r22, X+
     e62:	7c 91       	ld	r23, X
     e64:	13 97       	sbiw	r26, 0x03	; 3
     e66:	ed 91       	ld	r30, X+
     e68:	fc 91       	ld	r31, X
     e6a:	d8 01       	movw	r26, r16
     e6c:	8d 91       	ld	r24, X+
     e6e:	9c 91       	ld	r25, X
     e70:	19 95       	eicall
     e72:	81 11       	cpse	r24, r1
     e74:	09 c0       	rjmp	.+18     	; 0xe88 <queue_read_or_remove+0x7c>
     e76:	f8 01       	movw	r30, r16
     e78:	22 81       	ldd	r18, Z+2	; 0x02
     e7a:	33 81       	ldd	r19, Z+3	; 0x03
     e7c:	68 01       	movw	r12, r16
     e7e:	21 15       	cp	r18, r1
     e80:	31 05       	cpc	r19, r1
     e82:	59 f7       	brne	.-42     	; 0xe5a <queue_read_or_remove+0x4e>
     e84:	35 c0       	rjmp	.+106    	; 0xef0 <queue_read_or_remove+0xe4>
     e86:	68 01       	movw	r12, r16
     e88:	01 15       	cp	r16, r1
     e8a:	11 05       	cpc	r17, r1
     e8c:	99 f1       	breq	.+102    	; 0xef4 <queue_read_or_remove+0xe8>
     e8e:	91 10       	cpse	r9, r1
     e90:	31 c0       	rjmp	.+98     	; 0xef4 <queue_read_or_remove+0xe8>
     e92:	d5 01       	movw	r26, r10
     e94:	8d 91       	ld	r24, X+
     e96:	9c 91       	ld	r25, X
     e98:	11 97       	sbiw	r26, 0x01	; 1
     e9a:	08 17       	cp	r16, r24
     e9c:	19 07       	cpc	r17, r25
     e9e:	31 f4       	brne	.+12     	; 0xeac <queue_read_or_remove+0xa0>
     ea0:	f8 01       	movw	r30, r16
     ea2:	82 81       	ldd	r24, Z+2	; 0x02
     ea4:	93 81       	ldd	r25, Z+3	; 0x03
     ea6:	8d 93       	st	X+, r24
     ea8:	9c 93       	st	X, r25
     eaa:	08 c0       	rjmp	.+16     	; 0xebc <queue_read_or_remove+0xb0>
     eac:	d8 01       	movw	r26, r16
     eae:	12 96       	adiw	r26, 0x02	; 2
     eb0:	8d 91       	ld	r24, X+
     eb2:	9c 91       	ld	r25, X
     eb4:	13 97       	sbiw	r26, 0x03	; 3
     eb6:	f6 01       	movw	r30, r12
     eb8:	93 83       	std	Z+3, r25	; 0x03
     eba:	82 83       	std	Z+2, r24	; 0x02
     ebc:	d5 01       	movw	r26, r10
     ebe:	12 96       	adiw	r26, 0x02	; 2
     ec0:	8d 91       	ld	r24, X+
     ec2:	9c 91       	ld	r25, X
     ec4:	13 97       	sbiw	r26, 0x03	; 3
     ec6:	08 17       	cp	r16, r24
     ec8:	19 07       	cpc	r17, r25
     eca:	21 f4       	brne	.+8      	; 0xed4 <queue_read_or_remove+0xc8>
     ecc:	13 96       	adiw	r26, 0x03	; 3
     ece:	dc 92       	st	X, r13
     ed0:	ce 92       	st	-X, r12
     ed2:	12 97       	sbiw	r26, 0x02	; 2
     ed4:	f5 01       	movw	r30, r10
     ed6:	84 81       	ldd	r24, Z+4	; 0x04
     ed8:	81 50       	subi	r24, 0x01	; 1
     eda:	84 83       	std	Z+4, r24	; 0x04
     edc:	80 81       	ld	r24, Z
     ede:	91 81       	ldd	r25, Z+1	; 0x01
     ee0:	89 2b       	or	r24, r25
     ee2:	41 f4       	brne	.+16     	; 0xef4 <queue_read_or_remove+0xe8>
     ee4:	13 82       	std	Z+3, r1	; 0x03
     ee6:	12 82       	std	Z+2, r1	; 0x02
     ee8:	05 c0       	rjmp	.+10     	; 0xef4 <queue_read_or_remove+0xe8>
     eea:	00 e0       	ldi	r16, 0x00	; 0
     eec:	10 e0       	ldi	r17, 0x00	; 0
     eee:	02 c0       	rjmp	.+4      	; 0xef4 <queue_read_or_remove+0xe8>
     ef0:	00 e0       	ldi	r16, 0x00	; 0
     ef2:	10 e0       	ldi	r17, 0x00	; 0
     ef4:	8f be       	out	0x3f, r8	; 63
     ef6:	c8 01       	movw	r24, r16
     ef8:	0f 90       	pop	r0
     efa:	df 91       	pop	r29
     efc:	cf 91       	pop	r28
     efe:	1f 91       	pop	r17
     f00:	0f 91       	pop	r16
     f02:	ff 90       	pop	r15
     f04:	ef 90       	pop	r14
     f06:	df 90       	pop	r13
     f08:	cf 90       	pop	r12
     f0a:	bf 90       	pop	r11
     f0c:	af 90       	pop	r10
     f0e:	9f 90       	pop	r9
     f10:	8f 90       	pop	r8
     f12:	08 95       	ret

00000f14 <qmm_queue_init>:
     f14:	fc 01       	movw	r30, r24
     f16:	11 82       	std	Z+1, r1	; 0x01
     f18:	10 82       	st	Z, r1
     f1a:	13 82       	std	Z+3, r1	; 0x03
     f1c:	12 82       	std	Z+2, r1	; 0x02
     f1e:	14 82       	std	Z+4, r1	; 0x04
     f20:	08 95       	ret

00000f22 <qmm_queue_append>:
     f22:	cf 93       	push	r28
     f24:	df 93       	push	r29
     f26:	1f 92       	push	r1
     f28:	cd b7       	in	r28, 0x3d	; 61
     f2a:	de b7       	in	r29, 0x3e	; 62
     f2c:	fc 01       	movw	r30, r24
     f2e:	8f b7       	in	r24, 0x3f	; 63
     f30:	89 83       	std	Y+1, r24	; 0x01
     f32:	f8 94       	cli
     f34:	99 81       	ldd	r25, Y+1	; 0x01
     f36:	84 81       	ldd	r24, Z+4	; 0x04
     f38:	81 11       	cpse	r24, r1
     f3a:	03 c0       	rjmp	.+6      	; 0xf42 <qmm_queue_append+0x20>
     f3c:	71 83       	std	Z+1, r23	; 0x01
     f3e:	60 83       	st	Z, r22
     f40:	06 c0       	rjmp	.+12     	; 0xf4e <qmm_queue_append+0x2c>
     f42:	a2 81       	ldd	r26, Z+2	; 0x02
     f44:	b3 81       	ldd	r27, Z+3	; 0x03
     f46:	13 96       	adiw	r26, 0x03	; 3
     f48:	7c 93       	st	X, r23
     f4a:	6e 93       	st	-X, r22
     f4c:	12 97       	sbiw	r26, 0x02	; 2
     f4e:	73 83       	std	Z+3, r23	; 0x03
     f50:	62 83       	std	Z+2, r22	; 0x02
     f52:	db 01       	movw	r26, r22
     f54:	13 96       	adiw	r26, 0x03	; 3
     f56:	1c 92       	st	X, r1
     f58:	1e 92       	st	-X, r1
     f5a:	12 97       	sbiw	r26, 0x02	; 2
     f5c:	84 81       	ldd	r24, Z+4	; 0x04
     f5e:	8f 5f       	subi	r24, 0xFF	; 255
     f60:	84 83       	std	Z+4, r24	; 0x04
     f62:	9f bf       	out	0x3f, r25	; 63
     f64:	0f 90       	pop	r0
     f66:	df 91       	pop	r29
     f68:	cf 91       	pop	r28
     f6a:	08 95       	ret

00000f6c <qmm_queue_remove>:
     f6c:	ab 01       	movw	r20, r22
     f6e:	60 e0       	ldi	r22, 0x00	; 0
     f70:	4d cf       	rjmp	.-358    	; 0xe0c <queue_read_or_remove>
     f72:	08 95       	ret

00000f74 <__portable_avr_delay_cycles>:
     f74:	04 c0       	rjmp	.+8      	; 0xf7e <__portable_avr_delay_cycles+0xa>
     f76:	61 50       	subi	r22, 0x01	; 1
     f78:	71 09       	sbc	r23, r1
     f7a:	81 09       	sbc	r24, r1
     f7c:	91 09       	sbc	r25, r1
     f7e:	61 15       	cp	r22, r1
     f80:	71 05       	cpc	r23, r1
     f82:	81 05       	cpc	r24, r1
     f84:	91 05       	cpc	r25, r1
     f86:	b9 f7       	brne	.-18     	; 0xf76 <__portable_avr_delay_cycles+0x2>
     f88:	08 95       	ret

00000f8a <switch_pll_on>:
     f8a:	0f 93       	push	r16
     f8c:	1f 93       	push	r17
     f8e:	cf 93       	push	r28
     f90:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7c0141>
     f94:	8f 71       	andi	r24, 0x1F	; 31
     f96:	88 30       	cpi	r24, 0x08	; 8
     f98:	a1 f4       	brne	.+40     	; 0xfc2 <switch_pll_on+0x38>
     f9a:	81 e0       	ldi	r24, 0x01	; 1
     f9c:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <__TEXT_REGION_LENGTH__+0x7c014f>
     fa0:	89 e0       	ldi	r24, 0x09	; 9
     fa2:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
     fa6:	c3 e0       	ldi	r28, 0x03	; 3
     fa8:	0f e4       	ldi	r16, 0x4F	; 79
     faa:	11 e0       	ldi	r17, 0x01	; 1
     fac:	f8 01       	movw	r30, r16
     fae:	80 81       	ld	r24, Z
     fb0:	80 fd       	sbrc	r24, 0
     fb2:	07 c0       	rjmp	.+14     	; 0xfc2 <switch_pll_on+0x38>
     fb4:	63 e9       	ldi	r22, 0x93	; 147
     fb6:	70 e0       	ldi	r23, 0x00	; 0
     fb8:	80 e0       	ldi	r24, 0x00	; 0
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	db df       	rcall	.-74     	; 0xf74 <__portable_avr_delay_cycles>
     fbe:	c1 50       	subi	r28, 0x01	; 1
     fc0:	a9 f7       	brne	.-22     	; 0xfac <switch_pll_on+0x22>
     fc2:	cf 91       	pop	r28
     fc4:	1f 91       	pop	r17
     fc6:	0f 91       	pop	r16
     fc8:	08 95       	ret

00000fca <set_trx_state>:
     fca:	1f 93       	push	r17
     fcc:	cf 93       	push	r28
     fce:	df 93       	push	r29
     fd0:	1f 92       	push	r1
     fd2:	cd b7       	in	r28, 0x3d	; 61
     fd4:	de b7       	in	r29, 0x3e	; 62
     fd6:	18 2f       	mov	r17, r24
     fd8:	80 91 4c 05 	lds	r24, 0x054C	; 0x80054c <tal_trx_status>
     fdc:	8f 30       	cpi	r24, 0x0F	; 15
     fde:	51 f5       	brne	.+84     	; 0x1034 <set_trx_state+0x6a>
     fe0:	1f 30       	cpi	r17, 0x0F	; 15
     fe2:	09 f4       	brne	.+2      	; 0xfe6 <set_trx_state+0x1c>
     fe4:	38 c1       	rjmp	.+624    	; 0x1256 <set_trx_state+0x28c>
     fe6:	10 92 50 05 	sts	0x0550, r1	; 0x800550 <tal_awake_end_flag>
     fea:	8a e1       	ldi	r24, 0x1A	; 26
     fec:	9c e0       	ldi	r25, 0x0C	; 12
     fee:	e1 d2       	rcall	.+1474   	; 0x15b2 <pal_trx_irq_init_awake>
     ff0:	8f b7       	in	r24, 0x3f	; 63
     ff2:	89 83       	std	Y+1, r24	; 0x01
     ff4:	f8 94       	cli
     ff6:	99 81       	ldd	r25, Y+1	; 0x01
     ff8:	78 94       	sei
     ffa:	e9 e3       	ldi	r30, 0x39	; 57
     ffc:	f1 e0       	ldi	r31, 0x01	; 1
     ffe:	80 81       	ld	r24, Z
    1000:	8d 7f       	andi	r24, 0xFD	; 253
    1002:	80 83       	st	Z, r24
    1004:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <tal_awake_end_flag>
    1008:	88 23       	and	r24, r24
    100a:	e1 f3       	breq	.-8      	; 0x1004 <set_trx_state+0x3a>
    100c:	9f bf       	out	0x3f, r25	; 63
    100e:	8f ef       	ldi	r24, 0xFF	; 255
    1010:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <__TEXT_REGION_LENGTH__+0x7c014f>
    1014:	88 e4       	ldi	r24, 0x48	; 72
    1016:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <__TEXT_REGION_LENGTH__+0x7c014e>
    101a:	ed e4       	ldi	r30, 0x4D	; 77
    101c:	f1 e0       	ldi	r31, 0x01	; 1
    101e:	80 81       	ld	r24, Z
    1020:	84 60       	ori	r24, 0x04	; 4
    1022:	80 83       	st	Z, r24
    1024:	18 30       	cpi	r17, 0x08	; 8
    1026:	11 f0       	breq	.+4      	; 0x102c <set_trx_state+0x62>
    1028:	13 30       	cpi	r17, 0x03	; 3
    102a:	21 f4       	brne	.+8      	; 0x1034 <set_trx_state+0x6a>
    102c:	88 e0       	ldi	r24, 0x08	; 8
    102e:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <tal_trx_status>
    1032:	11 c1       	rjmp	.+546    	; 0x1256 <set_trx_state+0x28c>
    1034:	81 2f       	mov	r24, r17
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	fc 01       	movw	r30, r24
    103a:	33 97       	sbiw	r30, 0x03	; 3
    103c:	e7 31       	cpi	r30, 0x17	; 23
    103e:	f1 05       	cpc	r31, r1
    1040:	08 f0       	brcs	.+2      	; 0x1044 <set_trx_state+0x7a>
    1042:	5a c0       	rjmp	.+180    	; 0x10f8 <set_trx_state+0x12e>
    1044:	88 27       	eor	r24, r24
    1046:	e6 56       	subi	r30, 0x66	; 102
    1048:	ff 4f       	sbci	r31, 0xFF	; 255
    104a:	8f 4f       	sbci	r24, 0xFF	; 255
    104c:	0c 94 35 15 	jmp	0x2a6a	; 0x2a6a <__tablejump2__>
    1050:	83 e0       	ldi	r24, 0x03	; 3
    1052:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    1056:	ed e4       	ldi	r30, 0x4D	; 77
    1058:	f1 e0       	ldi	r31, 0x01	; 1
    105a:	80 81       	ld	r24, Z
    105c:	8b 7f       	andi	r24, 0xFB	; 251
    105e:	80 83       	st	Z, r24
    1060:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <rand>
    1064:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <__TEXT_REGION_LENGTH__+0x7c016d>
    1068:	ee e6       	ldi	r30, 0x6E	; 110
    106a:	f1 e0       	ldi	r31, 0x01	; 1
    106c:	80 81       	ld	r24, Z
    106e:	97 70       	andi	r25, 0x07	; 7
    1070:	88 7f       	andi	r24, 0xF8	; 248
    1072:	89 2b       	or	r24, r25
    1074:	80 83       	st	Z, r24
    1076:	8f ef       	ldi	r24, 0xFF	; 255
    1078:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <__TEXT_REGION_LENGTH__+0x7c014f>
    107c:	80 e8       	ldi	r24, 0x80	; 128
    107e:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <__TEXT_REGION_LENGTH__+0x7c014e>
    1082:	62 e0       	ldi	r22, 0x02	; 2
    1084:	70 e0       	ldi	r23, 0x00	; 0
    1086:	80 e0       	ldi	r24, 0x00	; 0
    1088:	90 e0       	ldi	r25, 0x00	; 0
    108a:	74 df       	rcall	.-280    	; 0xf74 <__portable_avr_delay_cycles>
    108c:	e9 e3       	ldi	r30, 0x39	; 57
    108e:	f1 e0       	ldi	r31, 0x01	; 1
    1090:	80 81       	ld	r24, Z
    1092:	82 60       	ori	r24, 0x02	; 2
    1094:	80 83       	st	Z, r24
    1096:	6f e2       	ldi	r22, 0x2F	; 47
    1098:	70 e0       	ldi	r23, 0x00	; 0
    109a:	80 e0       	ldi	r24, 0x00	; 0
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	6a df       	rcall	.-300    	; 0xf74 <__portable_avr_delay_cycles>
    10a0:	8f e0       	ldi	r24, 0x0F	; 15
    10a2:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <tal_trx_status>
    10a6:	d7 c0       	rjmp	.+430    	; 0x1256 <set_trx_state+0x28c>
    10a8:	80 91 4c 05 	lds	r24, 0x054C	; 0x80054c <tal_trx_status>
    10ac:	88 30       	cpi	r24, 0x08	; 8
    10ae:	21 f1       	breq	.+72     	; 0x10f8 <set_trx_state+0x12e>
    10b0:	88 e0       	ldi	r24, 0x08	; 8
    10b2:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    10b6:	62 e0       	ldi	r22, 0x02	; 2
    10b8:	70 e0       	ldi	r23, 0x00	; 0
    10ba:	80 e0       	ldi	r24, 0x00	; 0
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	5a df       	rcall	.-332    	; 0xf74 <__portable_avr_delay_cycles>
    10c0:	1b c0       	rjmp	.+54     	; 0x10f8 <set_trx_state+0x12e>
    10c2:	80 91 4c 05 	lds	r24, 0x054C	; 0x80054c <tal_trx_status>
    10c6:	88 30       	cpi	r24, 0x08	; 8
    10c8:	b9 f0       	breq	.+46     	; 0x10f8 <set_trx_state+0x12e>
    10ca:	83 e0       	ldi	r24, 0x03	; 3
    10cc:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    10d0:	62 e0       	ldi	r22, 0x02	; 2
    10d2:	70 e0       	ldi	r23, 0x00	; 0
    10d4:	80 e0       	ldi	r24, 0x00	; 0
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	4d df       	rcall	.-358    	; 0xf74 <__portable_avr_delay_cycles>
    10da:	0e c0       	rjmp	.+28     	; 0x10f8 <set_trx_state+0x12e>
    10dc:	80 91 4c 05 	lds	r24, 0x054C	; 0x80054c <tal_trx_status>
    10e0:	88 30       	cpi	r24, 0x08	; 8
    10e2:	49 f0       	breq	.+18     	; 0x10f6 <set_trx_state+0x12c>
    10e4:	18 f4       	brcc	.+6      	; 0x10ec <set_trx_state+0x122>
    10e6:	86 30       	cpi	r24, 0x06	; 6
    10e8:	39 f4       	brne	.+14     	; 0x10f8 <set_trx_state+0x12e>
    10ea:	09 c0       	rjmp	.+18     	; 0x10fe <set_trx_state+0x134>
    10ec:	86 31       	cpi	r24, 0x16	; 22
    10ee:	39 f0       	breq	.+14     	; 0x10fe <set_trx_state+0x134>
    10f0:	89 31       	cpi	r24, 0x19	; 25
    10f2:	11 f4       	brne	.+4      	; 0x10f8 <set_trx_state+0x12e>
    10f4:	04 c0       	rjmp	.+8      	; 0x10fe <set_trx_state+0x134>
    10f6:	49 df       	rcall	.-366    	; 0xf8a <switch_pll_on>
    10f8:	e1 e4       	ldi	r30, 0x41	; 65
    10fa:	f1 e0       	ldi	r31, 0x01	; 1
    10fc:	a6 c0       	rjmp	.+332    	; 0x124a <set_trx_state+0x280>
    10fe:	89 e0       	ldi	r24, 0x09	; 9
    1100:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    1104:	62 e0       	ldi	r22, 0x02	; 2
    1106:	70 e0       	ldi	r23, 0x00	; 0
    1108:	80 e0       	ldi	r24, 0x00	; 0
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	33 df       	rcall	.-410    	; 0xf74 <__portable_avr_delay_cycles>
    110e:	f4 cf       	rjmp	.-24     	; 0x10f8 <set_trx_state+0x12e>
    1110:	80 91 4c 05 	lds	r24, 0x054C	; 0x80054c <tal_trx_status>
    1114:	88 30       	cpi	r24, 0x08	; 8
    1116:	19 f0       	breq	.+6      	; 0x111e <set_trx_state+0x154>
    1118:	89 30       	cpi	r24, 0x09	; 9
    111a:	71 f3       	breq	.-36     	; 0x10f8 <set_trx_state+0x12e>
    111c:	02 c0       	rjmp	.+4      	; 0x1122 <set_trx_state+0x158>
    111e:	35 df       	rcall	.-406    	; 0xf8a <switch_pll_on>
    1120:	eb cf       	rjmp	.-42     	; 0x10f8 <set_trx_state+0x12e>
    1122:	84 e0       	ldi	r24, 0x04	; 4
    1124:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    1128:	e7 cf       	rjmp	.-50     	; 0x10f8 <set_trx_state+0x12e>
    112a:	80 91 4c 05 	lds	r24, 0x054C	; 0x80054c <tal_trx_status>
    112e:	89 30       	cpi	r24, 0x09	; 9
    1130:	41 f0       	breq	.+16     	; 0x1142 <set_trx_state+0x178>
    1132:	18 f4       	brcc	.+6      	; 0x113a <set_trx_state+0x170>
    1134:	88 30       	cpi	r24, 0x08	; 8
    1136:	71 f0       	breq	.+28     	; 0x1154 <set_trx_state+0x18a>
    1138:	df cf       	rjmp	.-66     	; 0x10f8 <set_trx_state+0x12e>
    113a:	86 31       	cpi	r24, 0x16	; 22
    113c:	11 f0       	breq	.+4      	; 0x1142 <set_trx_state+0x178>
    113e:	89 31       	cpi	r24, 0x19	; 25
    1140:	d9 f6       	brne	.-74     	; 0x10f8 <set_trx_state+0x12e>
    1142:	86 e0       	ldi	r24, 0x06	; 6
    1144:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    1148:	62 e0       	ldi	r22, 0x02	; 2
    114a:	70 e0       	ldi	r23, 0x00	; 0
    114c:	80 e0       	ldi	r24, 0x00	; 0
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	11 df       	rcall	.-478    	; 0xf74 <__portable_avr_delay_cycles>
    1152:	d2 cf       	rjmp	.-92     	; 0x10f8 <set_trx_state+0x12e>
    1154:	1a df       	rcall	.-460    	; 0xf8a <switch_pll_on>
    1156:	86 e0       	ldi	r24, 0x06	; 6
    1158:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    115c:	62 e0       	ldi	r22, 0x02	; 2
    115e:	70 e0       	ldi	r23, 0x00	; 0
    1160:	80 e0       	ldi	r24, 0x00	; 0
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	07 df       	rcall	.-498    	; 0xf74 <__portable_avr_delay_cycles>
    1166:	c8 cf       	rjmp	.-112    	; 0x10f8 <set_trx_state+0x12e>
    1168:	80 91 4c 05 	lds	r24, 0x054C	; 0x80054c <tal_trx_status>
    116c:	88 30       	cpi	r24, 0x08	; 8
    116e:	91 f0       	breq	.+36     	; 0x1194 <set_trx_state+0x1ca>
    1170:	18 f4       	brcc	.+6      	; 0x1178 <set_trx_state+0x1ae>
    1172:	86 30       	cpi	r24, 0x06	; 6
    1174:	c9 f0       	breq	.+50     	; 0x11a8 <set_trx_state+0x1de>
    1176:	c0 cf       	rjmp	.-128    	; 0x10f8 <set_trx_state+0x12e>
    1178:	89 30       	cpi	r24, 0x09	; 9
    117a:	19 f0       	breq	.+6      	; 0x1182 <set_trx_state+0x1b8>
    117c:	89 31       	cpi	r24, 0x19	; 25
    117e:	09 f0       	breq	.+2      	; 0x1182 <set_trx_state+0x1b8>
    1180:	bb cf       	rjmp	.-138    	; 0x10f8 <set_trx_state+0x12e>
    1182:	86 e1       	ldi	r24, 0x16	; 22
    1184:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    1188:	62 e0       	ldi	r22, 0x02	; 2
    118a:	70 e0       	ldi	r23, 0x00	; 0
    118c:	80 e0       	ldi	r24, 0x00	; 0
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	f1 de       	rcall	.-542    	; 0xf74 <__portable_avr_delay_cycles>
    1192:	b2 cf       	rjmp	.-156    	; 0x10f8 <set_trx_state+0x12e>
    1194:	fa de       	rcall	.-524    	; 0xf8a <switch_pll_on>
    1196:	86 e1       	ldi	r24, 0x16	; 22
    1198:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    119c:	62 e0       	ldi	r22, 0x02	; 2
    119e:	70 e0       	ldi	r23, 0x00	; 0
    11a0:	80 e0       	ldi	r24, 0x00	; 0
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	e7 de       	rcall	.-562    	; 0xf74 <__portable_avr_delay_cycles>
    11a6:	a8 cf       	rjmp	.-176    	; 0x10f8 <set_trx_state+0x12e>
    11a8:	89 e0       	ldi	r24, 0x09	; 9
    11aa:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    11ae:	62 e0       	ldi	r22, 0x02	; 2
    11b0:	70 e0       	ldi	r23, 0x00	; 0
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	de de       	rcall	.-580    	; 0xf74 <__portable_avr_delay_cycles>
    11b8:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7c0141>
    11bc:	8f 71       	andi	r24, 0x1F	; 31
    11be:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <tal_trx_status>
    11c2:	89 30       	cpi	r24, 0x09	; 9
    11c4:	09 f0       	breq	.+2      	; 0x11c8 <set_trx_state+0x1fe>
    11c6:	47 c0       	rjmp	.+142    	; 0x1256 <set_trx_state+0x28c>
    11c8:	86 e1       	ldi	r24, 0x16	; 22
    11ca:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    11ce:	62 e0       	ldi	r22, 0x02	; 2
    11d0:	70 e0       	ldi	r23, 0x00	; 0
    11d2:	80 e0       	ldi	r24, 0x00	; 0
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	ce de       	rcall	.-612    	; 0xf74 <__portable_avr_delay_cycles>
    11d8:	8f cf       	rjmp	.-226    	; 0x10f8 <set_trx_state+0x12e>
    11da:	80 91 4c 05 	lds	r24, 0x054C	; 0x80054c <tal_trx_status>
    11de:	88 30       	cpi	r24, 0x08	; 8
    11e0:	51 f1       	breq	.+84     	; 0x1236 <set_trx_state+0x26c>
    11e2:	18 f4       	brcc	.+6      	; 0x11ea <set_trx_state+0x220>
    11e4:	86 30       	cpi	r24, 0x06	; 6
    11e6:	79 f0       	breq	.+30     	; 0x1206 <set_trx_state+0x23c>
    11e8:	87 cf       	rjmp	.-242    	; 0x10f8 <set_trx_state+0x12e>
    11ea:	89 30       	cpi	r24, 0x09	; 9
    11ec:	19 f0       	breq	.+6      	; 0x11f4 <set_trx_state+0x22a>
    11ee:	86 31       	cpi	r24, 0x16	; 22
    11f0:	51 f0       	breq	.+20     	; 0x1206 <set_trx_state+0x23c>
    11f2:	82 cf       	rjmp	.-252    	; 0x10f8 <set_trx_state+0x12e>
    11f4:	89 e1       	ldi	r24, 0x19	; 25
    11f6:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    11fa:	62 e0       	ldi	r22, 0x02	; 2
    11fc:	70 e0       	ldi	r23, 0x00	; 0
    11fe:	80 e0       	ldi	r24, 0x00	; 0
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	b8 de       	rcall	.-656    	; 0xf74 <__portable_avr_delay_cycles>
    1204:	79 cf       	rjmp	.-270    	; 0x10f8 <set_trx_state+0x12e>
    1206:	89 e0       	ldi	r24, 0x09	; 9
    1208:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    120c:	62 e0       	ldi	r22, 0x02	; 2
    120e:	70 e0       	ldi	r23, 0x00	; 0
    1210:	80 e0       	ldi	r24, 0x00	; 0
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	af de       	rcall	.-674    	; 0xf74 <__portable_avr_delay_cycles>
    1216:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7c0141>
    121a:	8f 71       	andi	r24, 0x1F	; 31
    121c:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <tal_trx_status>
    1220:	89 30       	cpi	r24, 0x09	; 9
    1222:	c9 f4       	brne	.+50     	; 0x1256 <set_trx_state+0x28c>
    1224:	89 e1       	ldi	r24, 0x19	; 25
    1226:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    122a:	62 e0       	ldi	r22, 0x02	; 2
    122c:	70 e0       	ldi	r23, 0x00	; 0
    122e:	80 e0       	ldi	r24, 0x00	; 0
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	a0 de       	rcall	.-704    	; 0xf74 <__portable_avr_delay_cycles>
    1234:	61 cf       	rjmp	.-318    	; 0x10f8 <set_trx_state+0x12e>
    1236:	a9 de       	rcall	.-686    	; 0xf8a <switch_pll_on>
    1238:	89 e1       	ldi	r24, 0x19	; 25
    123a:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    123e:	62 e0       	ldi	r22, 0x02	; 2
    1240:	70 e0       	ldi	r23, 0x00	; 0
    1242:	80 e0       	ldi	r24, 0x00	; 0
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	96 de       	rcall	.-724    	; 0xf74 <__portable_avr_delay_cycles>
    1248:	57 cf       	rjmp	.-338    	; 0x10f8 <set_trx_state+0x12e>
    124a:	80 81       	ld	r24, Z
    124c:	8f 71       	andi	r24, 0x1F	; 31
    124e:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <tal_trx_status>
    1252:	8f 31       	cpi	r24, 0x1F	; 31
    1254:	d1 f3       	breq	.-12     	; 0x124a <set_trx_state+0x280>
    1256:	0f 90       	pop	r0
    1258:	df 91       	pop	r29
    125a:	cf 91       	pop	r28
    125c:	1f 91       	pop	r17
    125e:	08 95       	ret

00001260 <tal_task>:
    1260:	cf 93       	push	r28
    1262:	df 93       	push	r29
    1264:	80 91 25 05 	lds	r24, 0x0525	; 0x800525 <tal_rx_on_required>
    1268:	88 23       	and	r24, r24
    126a:	19 f1       	breq	.+70     	; 0x12b2 <tal_task+0x52>
    126c:	80 91 51 05 	lds	r24, 0x0551	; 0x800551 <tal_state>
    1270:	81 11       	cpse	r24, r1
    1272:	1f c0       	rjmp	.+62     	; 0x12b2 <tal_task+0x52>
    1274:	80 91 53 04 	lds	r24, 0x0453	; 0x800453 <tal_rx_buffer>
    1278:	90 91 54 04 	lds	r25, 0x0454	; 0x800454 <tal_rx_buffer+0x1>
    127c:	89 2b       	or	r24, r25
    127e:	41 f4       	brne	.+16     	; 0x1290 <tal_task+0x30>
    1280:	8b e8       	ldi	r24, 0x8B	; 139
    1282:	b7 dd       	rcall	.-1170   	; 0xdf2 <bmm_buffer_alloc>
    1284:	90 93 54 04 	sts	0x0454, r25	; 0x800454 <tal_rx_buffer+0x1>
    1288:	80 93 53 04 	sts	0x0453, r24	; 0x800453 <tal_rx_buffer>
    128c:	89 2b       	or	r24, r25
    128e:	89 f0       	breq	.+34     	; 0x12b2 <tal_task+0x52>
    1290:	10 92 25 05 	sts	0x0525, r1	; 0x800525 <tal_rx_on_required>
    1294:	cc e4       	ldi	r28, 0x4C	; 76
    1296:	d1 e0       	ldi	r29, 0x01	; 1
    1298:	88 81       	ld	r24, Y
    129a:	8f 77       	andi	r24, 0x7F	; 127
    129c:	88 83       	st	Y, r24
    129e:	63 e0       	ldi	r22, 0x03	; 3
    12a0:	70 e0       	ldi	r23, 0x00	; 0
    12a2:	80 e0       	ldi	r24, 0x00	; 0
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	66 de       	rcall	.-820    	; 0xf74 <__portable_avr_delay_cycles>
    12a8:	88 81       	ld	r24, Y
    12aa:	80 68       	ori	r24, 0x80	; 128
    12ac:	88 83       	st	Y, r24
    12ae:	86 e1       	ldi	r24, 0x16	; 22
    12b0:	8c de       	rcall	.-744    	; 0xfca <set_trx_state>
    12b2:	80 91 2a 05 	lds	r24, 0x052A	; 0x80052a <tal_incoming_frame_queue+0x4>
    12b6:	88 23       	and	r24, r24
    12b8:	41 f0       	breq	.+16     	; 0x12ca <tal_task+0x6a>
    12ba:	60 e0       	ldi	r22, 0x00	; 0
    12bc:	70 e0       	ldi	r23, 0x00	; 0
    12be:	86 e2       	ldi	r24, 0x26	; 38
    12c0:	95 e0       	ldi	r25, 0x05	; 5
    12c2:	54 de       	rcall	.-856    	; 0xf6c <qmm_queue_remove>
    12c4:	00 97       	sbiw	r24, 0x00	; 0
    12c6:	09 f0       	breq	.+2      	; 0x12ca <tal_task+0x6a>
    12c8:	24 d5       	rcall	.+2632   	; 0x1d12 <process_incoming_frame>
    12ca:	80 91 51 05 	lds	r24, 0x0551	; 0x800551 <tal_state>
    12ce:	82 30       	cpi	r24, 0x02	; 2
    12d0:	09 f4       	brne	.+2      	; 0x12d4 <tal_task+0x74>
    12d2:	85 d5       	rcall	.+2826   	; 0x1dde <tx_done_handling>
    12d4:	df 91       	pop	r29
    12d6:	cf 91       	pop	r28
    12d8:	08 95       	ret

000012da <__portable_avr_delay_cycles>:
    12da:	04 c0       	rjmp	.+8      	; 0x12e4 <__portable_avr_delay_cycles+0xa>
    12dc:	61 50       	subi	r22, 0x01	; 1
    12de:	71 09       	sbc	r23, r1
    12e0:	81 09       	sbc	r24, r1
    12e2:	91 09       	sbc	r25, r1
    12e4:	61 15       	cp	r22, r1
    12e6:	71 05       	cpc	r23, r1
    12e8:	81 05       	cpc	r24, r1
    12ea:	91 05       	cpc	r25, r1
    12ec:	b9 f7       	brne	.-18     	; 0x12dc <__portable_avr_delay_cycles+0x2>
    12ee:	08 95       	ret

000012f0 <tal_generate_rand_seed>:
    12f0:	ff 92       	push	r15
    12f2:	0f 93       	push	r16
    12f4:	1f 93       	push	r17
    12f6:	cf 93       	push	r28
    12f8:	df 93       	push	r29
    12fa:	86 e0       	ldi	r24, 0x06	; 6
    12fc:	66 de       	rcall	.-820    	; 0xfca <set_trx_state>
    12fe:	86 30       	cpi	r24, 0x06	; 6
    1300:	e1 f7       	brne	.-8      	; 0x12fa <tal_generate_rand_seed+0xa>
    1302:	e5 e5       	ldi	r30, 0x55	; 85
    1304:	f1 e0       	ldi	r31, 0x01	; 1
    1306:	80 81       	ld	r24, Z
    1308:	8f 77       	andi	r24, 0x7F	; 127
    130a:	80 83       	st	Z, r24
    130c:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <__TEXT_REGION_LENGTH__+0x7c014e>
    1310:	68 94       	set
    1312:	ff 24       	eor	r15, r15
    1314:	f3 f8       	bld	r15, 3
    1316:	c0 e0       	ldi	r28, 0x00	; 0
    1318:	d0 e0       	ldi	r29, 0x00	; 0
    131a:	06 e4       	ldi	r16, 0x46	; 70
    131c:	11 e0       	ldi	r17, 0x01	; 1
    131e:	f8 01       	movw	r30, r16
    1320:	90 81       	ld	r25, Z
    1322:	cc 0f       	add	r28, r28
    1324:	dd 1f       	adc	r29, r29
    1326:	cc 0f       	add	r28, r28
    1328:	dd 1f       	adc	r29, r29
    132a:	90 76       	andi	r25, 0x60	; 96
    132c:	29 2f       	mov	r18, r25
    132e:	30 e0       	ldi	r19, 0x00	; 0
    1330:	36 95       	lsr	r19
    1332:	27 95       	ror	r18
    1334:	32 95       	swap	r19
    1336:	22 95       	swap	r18
    1338:	2f 70       	andi	r18, 0x0F	; 15
    133a:	23 27       	eor	r18, r19
    133c:	3f 70       	andi	r19, 0x0F	; 15
    133e:	23 27       	eor	r18, r19
    1340:	c2 2b       	or	r28, r18
    1342:	d3 2b       	or	r29, r19
    1344:	62 e0       	ldi	r22, 0x02	; 2
    1346:	70 e0       	ldi	r23, 0x00	; 0
    1348:	80 e0       	ldi	r24, 0x00	; 0
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	c6 df       	rcall	.-116    	; 0x12da <__portable_avr_delay_cycles>
    134e:	fa 94       	dec	r15
    1350:	f1 10       	cpse	r15, r1
    1352:	e5 cf       	rjmp	.-54     	; 0x131e <tal_generate_rand_seed+0x2e>
    1354:	83 e0       	ldi	r24, 0x03	; 3
    1356:	39 de       	rcall	.-910    	; 0xfca <set_trx_state>
    1358:	8f ef       	ldi	r24, 0xFF	; 255
    135a:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <__TEXT_REGION_LENGTH__+0x7c014f>
    135e:	88 e4       	ldi	r24, 0x48	; 72
    1360:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <__TEXT_REGION_LENGTH__+0x7c014e>
    1364:	ce 01       	movw	r24, r28
    1366:	0e 94 b8 15 	call	0x2b70	; 0x2b70 <srand>
    136a:	df 91       	pop	r29
    136c:	cf 91       	pop	r28
    136e:	1f 91       	pop	r17
    1370:	0f 91       	pop	r16
    1372:	ff 90       	pop	r15
    1374:	08 95       	ret

00001376 <internal_tal_reset>:
    1376:	ff 92       	push	r15
    1378:	0f 93       	push	r16
    137a:	1f 93       	push	r17
    137c:	cf 93       	push	r28
    137e:	df 93       	push	r29
    1380:	f8 2e       	mov	r15, r24
    1382:	c9 e3       	ldi	r28, 0x39	; 57
    1384:	d1 e0       	ldi	r29, 0x01	; 1
    1386:	88 81       	ld	r24, Y
    1388:	8d 7f       	andi	r24, 0xFD	; 253
    138a:	88 83       	st	Y, r24
    138c:	61 e4       	ldi	r22, 0x41	; 65
    138e:	71 e0       	ldi	r23, 0x01	; 1
    1390:	80 e0       	ldi	r24, 0x00	; 0
    1392:	90 e0       	ldi	r25, 0x00	; 0
    1394:	a2 df       	rcall	.-188    	; 0x12da <__portable_avr_delay_cycles>
    1396:	88 81       	ld	r24, Y
    1398:	8e 7f       	andi	r24, 0xFE	; 254
    139a:	88 83       	st	Y, r24
    139c:	62 e0       	ldi	r22, 0x02	; 2
    139e:	70 e0       	ldi	r23, 0x00	; 0
    13a0:	80 e0       	ldi	r24, 0x00	; 0
    13a2:	90 e0       	ldi	r25, 0x00	; 0
    13a4:	9a df       	rcall	.-204    	; 0x12da <__portable_avr_delay_cycles>
    13a6:	88 81       	ld	r24, Y
    13a8:	81 60       	ori	r24, 0x01	; 1
    13aa:	88 83       	st	Y, r24
    13ac:	66 e8       	ldi	r22, 0x86	; 134
    13ae:	70 e0       	ldi	r23, 0x00	; 0
    13b0:	80 e0       	ldi	r24, 0x00	; 0
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	92 df       	rcall	.-220    	; 0x12da <__portable_avr_delay_cycles>
    13b6:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7c0141>
    13ba:	8f 71       	andi	r24, 0x1F	; 31
    13bc:	ca e0       	ldi	r28, 0x0A	; 10
    13be:	01 e4       	ldi	r16, 0x41	; 65
    13c0:	11 e0       	ldi	r17, 0x01	; 1
    13c2:	0a c0       	rjmp	.+20     	; 0x13d8 <internal_tal_reset+0x62>
    13c4:	66 e8       	ldi	r22, 0x86	; 134
    13c6:	70 e0       	ldi	r23, 0x00	; 0
    13c8:	80 e0       	ldi	r24, 0x00	; 0
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	86 df       	rcall	.-244    	; 0x12da <__portable_avr_delay_cycles>
    13ce:	f8 01       	movw	r30, r16
    13d0:	80 81       	ld	r24, Z
    13d2:	8f 71       	andi	r24, 0x1F	; 31
    13d4:	c1 50       	subi	r28, 0x01	; 1
    13d6:	c9 f1       	breq	.+114    	; 0x144a <internal_tal_reset+0xd4>
    13d8:	88 30       	cpi	r24, 0x08	; 8
    13da:	a1 f7       	brne	.-24     	; 0x13c4 <internal_tal_reset+0x4e>
    13dc:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <tal_trx_status>
    13e0:	87 df       	rcall	.-242    	; 0x12f0 <tal_generate_rand_seed>
    13e2:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <rand>
    13e6:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <__TEXT_REGION_LENGTH__+0x7c016d>
    13ea:	ee e6       	ldi	r30, 0x6E	; 110
    13ec:	f1 e0       	ldi	r31, 0x01	; 1
    13ee:	80 81       	ld	r24, Z
    13f0:	97 70       	andi	r25, 0x07	; 7
    13f2:	88 7f       	andi	r24, 0xF8	; 248
    13f4:	89 2b       	or	r24, r25
    13f6:	80 83       	st	Z, r24
    13f8:	80 81       	ld	r24, Z
    13fa:	80 62       	ori	r24, 0x20	; 32
    13fc:	80 83       	st	Z, r24
    13fe:	ec e4       	ldi	r30, 0x4C	; 76
    1400:	f1 e0       	ldi	r31, 0x01	; 1
    1402:	80 81       	ld	r24, Z
    1404:	80 68       	ori	r24, 0x80	; 128
    1406:	80 83       	st	Z, r24
    1408:	88 e4       	ldi	r24, 0x48	; 72
    140a:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <__TEXT_REGION_LENGTH__+0x7c014e>
    140e:	8f ef       	ldi	r24, 0xFF	; 255
    1410:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <__TEXT_REGION_LENGTH__+0x7c0156>
    1414:	ed e4       	ldi	r30, 0x4D	; 77
    1416:	f1 e0       	ldi	r31, 0x01	; 1
    1418:	80 81       	ld	r24, Z
    141a:	8c 7f       	andi	r24, 0xFC	; 252
    141c:	82 60       	ori	r24, 0x02	; 2
    141e:	80 83       	st	Z, r24
    1420:	aa e4       	ldi	r26, 0x4A	; 74
    1422:	b1 e0       	ldi	r27, 0x01	; 1
    1424:	8c 91       	ld	r24, X
    1426:	80 7f       	andi	r24, 0xF0	; 240
    1428:	83 60       	ori	r24, 0x03	; 3
    142a:	8c 93       	st	X, r24
    142c:	80 81       	ld	r24, Z
    142e:	88 60       	ori	r24, 0x08	; 8
    1430:	80 83       	st	Z, r24
    1432:	80 81       	ld	r24, Z
    1434:	84 60       	ori	r24, 0x04	; 4
    1436:	80 83       	st	Z, r24
    1438:	f1 10       	cpse	r15, r1
    143a:	30 d2       	rcall	.+1120   	; 0x189c <init_tal_pib>
    143c:	7d d2       	rcall	.+1274   	; 0x1938 <write_all_tal_pib_to_trx>
    143e:	10 92 51 05 	sts	0x0551, r1	; 0x800551 <tal_state>
    1442:	10 92 25 05 	sts	0x0525, r1	; 0x800525 <tal_rx_on_required>
    1446:	80 e0       	ldi	r24, 0x00	; 0
    1448:	01 c0       	rjmp	.+2      	; 0x144c <internal_tal_reset+0xd6>
    144a:	85 e8       	ldi	r24, 0x85	; 133
    144c:	df 91       	pop	r29
    144e:	cf 91       	pop	r28
    1450:	1f 91       	pop	r17
    1452:	0f 91       	pop	r16
    1454:	ff 90       	pop	r15
    1456:	08 95       	ret

00001458 <tal_init>:
    1458:	cf 92       	push	r12
    145a:	df 92       	push	r13
    145c:	ef 92       	push	r14
    145e:	ff 92       	push	r15
    1460:	0f 93       	push	r16
    1462:	1f 93       	push	r17
    1464:	cf 93       	push	r28
    1466:	df 93       	push	r29
    1468:	14 be       	out	0x34, r1	; 52
    146a:	80 e1       	ldi	r24, 0x10	; 16
    146c:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <__TEXT_REGION_LENGTH__+0x7c0135>
    1470:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__TEXT_REGION_LENGTH__+0x7c0134>
    1474:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <__TEXT_REGION_LENGTH__+0x7c0133>
    1478:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__TEXT_REGION_LENGTH__+0x7c0132>
    147c:	92 dc       	rcall	.-1756   	; 0xda2 <pal_init>
    147e:	81 11       	cpse	r24, r1
    1480:	6d c0       	rjmp	.+218    	; 0x155c <tal_init+0x104>
    1482:	60 e4       	ldi	r22, 0x40	; 64
    1484:	81 e0       	ldi	r24, 0x01	; 1
    1486:	ba da       	rcall	.-2700   	; 0x9fc <sysclk_enable_module>
    1488:	c9 e3       	ldi	r28, 0x39	; 57
    148a:	d1 e0       	ldi	r29, 0x01	; 1
    148c:	88 81       	ld	r24, Y
    148e:	81 60       	ori	r24, 0x01	; 1
    1490:	88 83       	st	Y, r24
    1492:	88 81       	ld	r24, Y
    1494:	8d 7f       	andi	r24, 0xFD	; 253
    1496:	88 83       	st	Y, r24
    1498:	6b ef       	ldi	r22, 0xFB	; 251
    149a:	71 e0       	ldi	r23, 0x01	; 1
    149c:	80 e0       	ldi	r24, 0x00	; 0
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	1c df       	rcall	.-456    	; 0x12da <__portable_avr_delay_cycles>
    14a2:	88 81       	ld	r24, Y
    14a4:	8e 7f       	andi	r24, 0xFE	; 254
    14a6:	88 83       	st	Y, r24
    14a8:	62 e0       	ldi	r22, 0x02	; 2
    14aa:	70 e0       	ldi	r23, 0x00	; 0
    14ac:	80 e0       	ldi	r24, 0x00	; 0
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	14 df       	rcall	.-472    	; 0x12da <__portable_avr_delay_cycles>
    14b2:	88 81       	ld	r24, Y
    14b4:	81 60       	ori	r24, 0x01	; 1
    14b6:	88 83       	st	Y, r24
    14b8:	66 e8       	ldi	r22, 0x86	; 134
    14ba:	70 e0       	ldi	r23, 0x00	; 0
    14bc:	80 e0       	ldi	r24, 0x00	; 0
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	0c df       	rcall	.-488    	; 0x12da <__portable_avr_delay_cycles>
    14c2:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__TEXT_REGION_LENGTH__+0x7c0141>
    14c6:	8f 71       	andi	r24, 0x1F	; 31
    14c8:	ca e0       	ldi	r28, 0x0A	; 10
    14ca:	01 e4       	ldi	r16, 0x41	; 65
    14cc:	11 e0       	ldi	r17, 0x01	; 1
    14ce:	0b c0       	rjmp	.+22     	; 0x14e6 <tal_init+0x8e>
    14d0:	66 e8       	ldi	r22, 0x86	; 134
    14d2:	70 e0       	ldi	r23, 0x00	; 0
    14d4:	80 e0       	ldi	r24, 0x00	; 0
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	00 df       	rcall	.-512    	; 0x12da <__portable_avr_delay_cycles>
    14da:	f8 01       	movw	r30, r16
    14dc:	80 81       	ld	r24, Z
    14de:	8f 71       	andi	r24, 0x1F	; 31
    14e0:	c1 50       	subi	r28, 0x01	; 1
    14e2:	09 f4       	brne	.+2      	; 0x14e6 <tal_init+0x8e>
    14e4:	51 c0       	rjmp	.+162    	; 0x1588 <tal_init+0x130>
    14e6:	88 30       	cpi	r24, 0x08	; 8
    14e8:	99 f7       	brne	.-26     	; 0x14d0 <tal_init+0x78>
    14ea:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <tal_trx_status>
    14ee:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <__TEXT_REGION_LENGTH__+0x7c015c>
    14f2:	84 39       	cpi	r24, 0x94	; 148
    14f4:	09 f0       	breq	.+2      	; 0x14f8 <tal_init+0xa0>
    14f6:	48 c0       	rjmp	.+144    	; 0x1588 <tal_init+0x130>
    14f8:	35 c0       	rjmp	.+106    	; 0x1564 <tal_init+0x10c>
    14fa:	0e 94 b5 15 	call	0x2b6a	; 0x2b6a <rand>
    14fe:	f8 01       	movw	r30, r16
    1500:	81 93       	st	Z+, r24
    1502:	8f 01       	movw	r16, r30
    1504:	ec 15       	cp	r30, r12
    1506:	fd 05       	cpc	r31, r13
    1508:	c1 f7       	brne	.-16     	; 0x14fa <tal_init+0xa2>
    150a:	f7 01       	movw	r30, r14
    150c:	20 81       	ld	r18, Z
    150e:	31 81       	ldd	r19, Z+1	; 0x01
    1510:	42 81       	ldd	r20, Z+2	; 0x02
    1512:	53 81       	ldd	r21, Z+3	; 0x03
    1514:	64 81       	ldd	r22, Z+4	; 0x04
    1516:	75 81       	ldd	r23, Z+5	; 0x05
    1518:	86 81       	ldd	r24, Z+6	; 0x06
    151a:	97 81       	ldd	r25, Z+7	; 0x07
    151c:	af ef       	ldi	r26, 0xFF	; 255
    151e:	0e 94 56 15 	call	0x2aac	; 0x2aac <__adddi3_s8>
    1522:	ad ef       	ldi	r26, 0xFD	; 253
    1524:	0e 94 62 15 	call	0x2ac4	; 0x2ac4 <__cmpdi2_s8>
    1528:	21 f0       	breq	.+8      	; 0x1532 <tal_init+0xda>
    152a:	18 f0       	brcs	.+6      	; 0x1532 <tal_init+0xda>
    152c:	0d e2       	ldi	r16, 0x2D	; 45
    152e:	15 e0       	ldi	r17, 0x05	; 5
    1530:	e4 cf       	rjmp	.-56     	; 0x14fa <tal_init+0xa2>
    1532:	88 ef       	ldi	r24, 0xF8	; 248
    1534:	9b e0       	ldi	r25, 0x0B	; 11
    1536:	38 d0       	rcall	.+112    	; 0x15a8 <pal_trx_irq_init_rx_end>
    1538:	89 e0       	ldi	r24, 0x09	; 9
    153a:	9c e0       	ldi	r25, 0x0C	; 12
    153c:	30 d0       	rcall	.+96     	; 0x159e <pal_trx_irq_init_tx_end>
    153e:	8a e1       	ldi	r24, 0x1A	; 26
    1540:	9c e0       	ldi	r25, 0x0C	; 12
    1542:	37 d0       	rcall	.+110    	; 0x15b2 <pal_trx_irq_init_awake>
    1544:	32 dc       	rcall	.-1948   	; 0xdaa <bmm_buffer_init>
    1546:	8b e8       	ldi	r24, 0x8B	; 139
    1548:	54 dc       	rcall	.-1880   	; 0xdf2 <bmm_buffer_alloc>
    154a:	90 93 54 04 	sts	0x0454, r25	; 0x800454 <tal_rx_buffer+0x1>
    154e:	80 93 53 04 	sts	0x0453, r24	; 0x800453 <tal_rx_buffer>
    1552:	86 e2       	ldi	r24, 0x26	; 38
    1554:	95 e0       	ldi	r25, 0x05	; 5
    1556:	de dc       	rcall	.-1604   	; 0xf14 <qmm_queue_init>
    1558:	cb d5       	rcall	.+2966   	; 0x20f0 <tfa_init>
    155a:	17 c0       	rjmp	.+46     	; 0x158a <tal_init+0x132>
    155c:	c5 e8       	ldi	r28, 0x85	; 133
    155e:	15 c0       	rjmp	.+42     	; 0x158a <tal_init+0x132>
    1560:	c5 e8       	ldi	r28, 0x85	; 133
    1562:	13 c0       	rjmp	.+38     	; 0x158a <tal_init+0x132>
    1564:	81 e0       	ldi	r24, 0x01	; 1
    1566:	07 df       	rcall	.-498    	; 0x1376 <internal_tal_reset>
    1568:	c8 2f       	mov	r28, r24
    156a:	81 11       	cpse	r24, r1
    156c:	f9 cf       	rjmp	.-14     	; 0x1560 <tal_init+0x108>
    156e:	0f 2e       	mov	r0, r31
    1570:	fd e2       	ldi	r31, 0x2D	; 45
    1572:	ef 2e       	mov	r14, r31
    1574:	f5 e0       	ldi	r31, 0x05	; 5
    1576:	ff 2e       	mov	r15, r31
    1578:	f0 2d       	mov	r31, r0
    157a:	0f 2e       	mov	r0, r31
    157c:	f5 e3       	ldi	r31, 0x35	; 53
    157e:	cf 2e       	mov	r12, r31
    1580:	f5 e0       	ldi	r31, 0x05	; 5
    1582:	df 2e       	mov	r13, r31
    1584:	f0 2d       	mov	r31, r0
    1586:	c1 cf       	rjmp	.-126    	; 0x150a <tal_init+0xb2>
    1588:	c5 e8       	ldi	r28, 0x85	; 133
    158a:	8c 2f       	mov	r24, r28
    158c:	df 91       	pop	r29
    158e:	cf 91       	pop	r28
    1590:	1f 91       	pop	r17
    1592:	0f 91       	pop	r16
    1594:	ff 90       	pop	r15
    1596:	ef 90       	pop	r14
    1598:	df 90       	pop	r13
    159a:	cf 90       	pop	r12
    159c:	08 95       	ret

0000159e <pal_trx_irq_init_tx_end>:
    159e:	90 93 5c 04 	sts	0x045C, r25	; 0x80045c <irq_hdl_trx_tx_end+0x1>
    15a2:	80 93 5b 04 	sts	0x045B, r24	; 0x80045b <irq_hdl_trx_tx_end>
    15a6:	08 95       	ret

000015a8 <pal_trx_irq_init_rx_end>:
    15a8:	90 93 5a 04 	sts	0x045A, r25	; 0x80045a <irq_hdl_trx_rx_end+0x1>
    15ac:	80 93 59 04 	sts	0x0459, r24	; 0x800459 <irq_hdl_trx_rx_end>
    15b0:	08 95       	ret

000015b2 <pal_trx_irq_init_awake>:
    15b2:	90 93 56 04 	sts	0x0456, r25	; 0x800456 <irq_hdl_trx_awake+0x1>
    15b6:	80 93 55 04 	sts	0x0455, r24	; 0x800455 <irq_hdl_trx_awake>
    15ba:	08 95       	ret

000015bc <__vector_63>:
    15bc:	1f 92       	push	r1
    15be:	0f 92       	push	r0
    15c0:	0f b6       	in	r0, 0x3f	; 63
    15c2:	0f 92       	push	r0
    15c4:	11 24       	eor	r1, r1
    15c6:	0b b6       	in	r0, 0x3b	; 59
    15c8:	0f 92       	push	r0
    15ca:	2f 93       	push	r18
    15cc:	3f 93       	push	r19
    15ce:	4f 93       	push	r20
    15d0:	5f 93       	push	r21
    15d2:	6f 93       	push	r22
    15d4:	7f 93       	push	r23
    15d6:	8f 93       	push	r24
    15d8:	9f 93       	push	r25
    15da:	af 93       	push	r26
    15dc:	bf 93       	push	r27
    15de:	ef 93       	push	r30
    15e0:	ff 93       	push	r31
    15e2:	e0 91 5b 04 	lds	r30, 0x045B	; 0x80045b <irq_hdl_trx_tx_end>
    15e6:	f0 91 5c 04 	lds	r31, 0x045C	; 0x80045c <irq_hdl_trx_tx_end+0x1>
    15ea:	19 95       	eicall
    15ec:	ff 91       	pop	r31
    15ee:	ef 91       	pop	r30
    15f0:	bf 91       	pop	r27
    15f2:	af 91       	pop	r26
    15f4:	9f 91       	pop	r25
    15f6:	8f 91       	pop	r24
    15f8:	7f 91       	pop	r23
    15fa:	6f 91       	pop	r22
    15fc:	5f 91       	pop	r21
    15fe:	4f 91       	pop	r20
    1600:	3f 91       	pop	r19
    1602:	2f 91       	pop	r18
    1604:	0f 90       	pop	r0
    1606:	0b be       	out	0x3b, r0	; 59
    1608:	0f 90       	pop	r0
    160a:	0f be       	out	0x3f, r0	; 63
    160c:	0f 90       	pop	r0
    160e:	1f 90       	pop	r1
    1610:	18 95       	reti

00001612 <__vector_60>:
    1612:	1f 92       	push	r1
    1614:	0f 92       	push	r0
    1616:	0f b6       	in	r0, 0x3f	; 63
    1618:	0f 92       	push	r0
    161a:	11 24       	eor	r1, r1
    161c:	0b b6       	in	r0, 0x3b	; 59
    161e:	0f 92       	push	r0
    1620:	2f 93       	push	r18
    1622:	3f 93       	push	r19
    1624:	4f 93       	push	r20
    1626:	5f 93       	push	r21
    1628:	6f 93       	push	r22
    162a:	7f 93       	push	r23
    162c:	8f 93       	push	r24
    162e:	9f 93       	push	r25
    1630:	af 93       	push	r26
    1632:	bf 93       	push	r27
    1634:	ef 93       	push	r30
    1636:	ff 93       	push	r31
    1638:	e0 91 59 04 	lds	r30, 0x0459	; 0x800459 <irq_hdl_trx_rx_end>
    163c:	f0 91 5a 04 	lds	r31, 0x045A	; 0x80045a <irq_hdl_trx_rx_end+0x1>
    1640:	19 95       	eicall
    1642:	ff 91       	pop	r31
    1644:	ef 91       	pop	r30
    1646:	bf 91       	pop	r27
    1648:	af 91       	pop	r26
    164a:	9f 91       	pop	r25
    164c:	8f 91       	pop	r24
    164e:	7f 91       	pop	r23
    1650:	6f 91       	pop	r22
    1652:	5f 91       	pop	r21
    1654:	4f 91       	pop	r20
    1656:	3f 91       	pop	r19
    1658:	2f 91       	pop	r18
    165a:	0f 90       	pop	r0
    165c:	0b be       	out	0x3b, r0	; 59
    165e:	0f 90       	pop	r0
    1660:	0f be       	out	0x3f, r0	; 63
    1662:	0f 90       	pop	r0
    1664:	1f 90       	pop	r1
    1666:	18 95       	reti

00001668 <__vector_61>:
    1668:	1f 92       	push	r1
    166a:	0f 92       	push	r0
    166c:	0f b6       	in	r0, 0x3f	; 63
    166e:	0f 92       	push	r0
    1670:	11 24       	eor	r1, r1
    1672:	0b b6       	in	r0, 0x3b	; 59
    1674:	0f 92       	push	r0
    1676:	2f 93       	push	r18
    1678:	3f 93       	push	r19
    167a:	4f 93       	push	r20
    167c:	5f 93       	push	r21
    167e:	6f 93       	push	r22
    1680:	7f 93       	push	r23
    1682:	8f 93       	push	r24
    1684:	9f 93       	push	r25
    1686:	af 93       	push	r26
    1688:	bf 93       	push	r27
    168a:	ef 93       	push	r30
    168c:	ff 93       	push	r31
    168e:	e0 91 57 04 	lds	r30, 0x0457	; 0x800457 <irq_hdl_trx_cca_ed>
    1692:	f0 91 58 04 	lds	r31, 0x0458	; 0x800458 <irq_hdl_trx_cca_ed+0x1>
    1696:	19 95       	eicall
    1698:	ff 91       	pop	r31
    169a:	ef 91       	pop	r30
    169c:	bf 91       	pop	r27
    169e:	af 91       	pop	r26
    16a0:	9f 91       	pop	r25
    16a2:	8f 91       	pop	r24
    16a4:	7f 91       	pop	r23
    16a6:	6f 91       	pop	r22
    16a8:	5f 91       	pop	r21
    16aa:	4f 91       	pop	r20
    16ac:	3f 91       	pop	r19
    16ae:	2f 91       	pop	r18
    16b0:	0f 90       	pop	r0
    16b2:	0b be       	out	0x3b, r0	; 59
    16b4:	0f 90       	pop	r0
    16b6:	0f be       	out	0x3f, r0	; 63
    16b8:	0f 90       	pop	r0
    16ba:	1f 90       	pop	r1
    16bc:	18 95       	reti

000016be <__vector_64>:
    16be:	1f 92       	push	r1
    16c0:	0f 92       	push	r0
    16c2:	0f b6       	in	r0, 0x3f	; 63
    16c4:	0f 92       	push	r0
    16c6:	11 24       	eor	r1, r1
    16c8:	0b b6       	in	r0, 0x3b	; 59
    16ca:	0f 92       	push	r0
    16cc:	2f 93       	push	r18
    16ce:	3f 93       	push	r19
    16d0:	4f 93       	push	r20
    16d2:	5f 93       	push	r21
    16d4:	6f 93       	push	r22
    16d6:	7f 93       	push	r23
    16d8:	8f 93       	push	r24
    16da:	9f 93       	push	r25
    16dc:	af 93       	push	r26
    16de:	bf 93       	push	r27
    16e0:	ef 93       	push	r30
    16e2:	ff 93       	push	r31
    16e4:	e0 91 55 04 	lds	r30, 0x0455	; 0x800455 <irq_hdl_trx_awake>
    16e8:	f0 91 56 04 	lds	r31, 0x0456	; 0x800456 <irq_hdl_trx_awake+0x1>
    16ec:	19 95       	eicall
    16ee:	ff 91       	pop	r31
    16f0:	ef 91       	pop	r30
    16f2:	bf 91       	pop	r27
    16f4:	af 91       	pop	r26
    16f6:	9f 91       	pop	r25
    16f8:	8f 91       	pop	r24
    16fa:	7f 91       	pop	r23
    16fc:	6f 91       	pop	r22
    16fe:	5f 91       	pop	r21
    1700:	4f 91       	pop	r20
    1702:	3f 91       	pop	r19
    1704:	2f 91       	pop	r18
    1706:	0f 90       	pop	r0
    1708:	0b be       	out	0x3b, r0	; 59
    170a:	0f 90       	pop	r0
    170c:	0f be       	out	0x3f, r0	; 63
    170e:	0f 90       	pop	r0
    1710:	1f 90       	pop	r1
    1712:	18 95       	reti

00001714 <__vector_59>:
    1714:	1f 92       	push	r1
    1716:	0f 92       	push	r0
    1718:	0f b6       	in	r0, 0x3f	; 63
    171a:	0f 92       	push	r0
    171c:	11 24       	eor	r1, r1
    171e:	0f 90       	pop	r0
    1720:	0f be       	out	0x3f, r0	; 63
    1722:	0f 90       	pop	r0
    1724:	1f 90       	pop	r1
    1726:	18 95       	reti

00001728 <__vector_57>:
    1728:	1f 92       	push	r1
    172a:	0f 92       	push	r0
    172c:	0f b6       	in	r0, 0x3f	; 63
    172e:	0f 92       	push	r0
    1730:	11 24       	eor	r1, r1
    1732:	0f 90       	pop	r0
    1734:	0f be       	out	0x3f, r0	; 63
    1736:	0f 90       	pop	r0
    1738:	1f 90       	pop	r1
    173a:	18 95       	reti

0000173c <__vector_58>:
    173c:	1f 92       	push	r1
    173e:	0f 92       	push	r0
    1740:	0f b6       	in	r0, 0x3f	; 63
    1742:	0f 92       	push	r0
    1744:	11 24       	eor	r1, r1
    1746:	0f 90       	pop	r0
    1748:	0f be       	out	0x3f, r0	; 63
    174a:	0f 90       	pop	r0
    174c:	1f 90       	pop	r1
    174e:	18 95       	reti

00001750 <__vector_62>:
    1750:	1f 92       	push	r1
    1752:	0f 92       	push	r0
    1754:	0f b6       	in	r0, 0x3f	; 63
    1756:	0f 92       	push	r0
    1758:	11 24       	eor	r1, r1
    175a:	0f 90       	pop	r0
    175c:	0f be       	out	0x3f, r0	; 63
    175e:	0f 90       	pop	r0
    1760:	1f 90       	pop	r1
    1762:	18 95       	reti

00001764 <__vector_71>:
    1764:	1f 92       	push	r1
    1766:	0f 92       	push	r0
    1768:	0f b6       	in	r0, 0x3f	; 63
    176a:	0f 92       	push	r0
    176c:	11 24       	eor	r1, r1
    176e:	0f 90       	pop	r0
    1770:	0f be       	out	0x3f, r0	; 63
    1772:	0f 90       	pop	r0
    1774:	1f 90       	pop	r1
    1776:	18 95       	reti

00001778 <__vector_70>:
    1778:	1f 92       	push	r1
    177a:	0f 92       	push	r0
    177c:	0f b6       	in	r0, 0x3f	; 63
    177e:	0f 92       	push	r0
    1780:	11 24       	eor	r1, r1
    1782:	0f 90       	pop	r0
    1784:	0f be       	out	0x3f, r0	; 63
    1786:	0f 90       	pop	r0
    1788:	1f 90       	pop	r1
    178a:	18 95       	reti

0000178c <__vector_72>:
    178c:	1f 92       	push	r1
    178e:	0f 92       	push	r0
    1790:	0f b6       	in	r0, 0x3f	; 63
    1792:	0f 92       	push	r0
    1794:	11 24       	eor	r1, r1
    1796:	0f 90       	pop	r0
    1798:	0f be       	out	0x3f, r0	; 63
    179a:	0f 90       	pop	r0
    179c:	1f 90       	pop	r1
    179e:	18 95       	reti

000017a0 <__vector_73>:
    17a0:	1f 92       	push	r1
    17a2:	0f 92       	push	r0
    17a4:	0f b6       	in	r0, 0x3f	; 63
    17a6:	0f 92       	push	r0
    17a8:	11 24       	eor	r1, r1
    17aa:	0f 90       	pop	r0
    17ac:	0f be       	out	0x3f, r0	; 63
    17ae:	0f 90       	pop	r0
    17b0:	1f 90       	pop	r1
    17b2:	18 95       	reti

000017b4 <__vector_74>:
    17b4:	1f 92       	push	r1
    17b6:	0f 92       	push	r0
    17b8:	0f b6       	in	r0, 0x3f	; 63
    17ba:	0f 92       	push	r0
    17bc:	11 24       	eor	r1, r1
    17be:	0f 90       	pop	r0
    17c0:	0f be       	out	0x3f, r0	; 63
    17c2:	0f 90       	pop	r0
    17c4:	1f 90       	pop	r1
    17c6:	18 95       	reti

000017c8 <__vector_75>:
    17c8:	1f 92       	push	r1
    17ca:	0f 92       	push	r0
    17cc:	0f b6       	in	r0, 0x3f	; 63
    17ce:	0f 92       	push	r0
    17d0:	11 24       	eor	r1, r1
    17d2:	0f 90       	pop	r0
    17d4:	0f be       	out	0x3f, r0	; 63
    17d6:	0f 90       	pop	r0
    17d8:	1f 90       	pop	r1
    17da:	18 95       	reti

000017dc <__vector_76>:
    17dc:	1f 92       	push	r1
    17de:	0f 92       	push	r0
    17e0:	0f b6       	in	r0, 0x3f	; 63
    17e2:	0f 92       	push	r0
    17e4:	11 24       	eor	r1, r1
    17e6:	0f 90       	pop	r0
    17e8:	0f be       	out	0x3f, r0	; 63
    17ea:	0f 90       	pop	r0
    17ec:	1f 90       	pop	r1
    17ee:	18 95       	reti

000017f0 <trx_rx_end_handler_cb>:
    17f0:	1f 93       	push	r17
    17f2:	cf 93       	push	r28
    17f4:	df 93       	push	r29
    17f6:	1f 92       	push	r1
    17f8:	cd b7       	in	r28, 0x3d	; 61
    17fa:	de b7       	in	r29, 0x3e	; 62
    17fc:	8f b7       	in	r24, 0x3f	; 63
    17fe:	89 83       	std	Y+1, r24	; 0x01
    1800:	f8 94       	cli
    1802:	19 81       	ldd	r17, Y+1	; 0x01
    1804:	19 d2       	rcall	.+1074   	; 0x1c38 <handle_received_frame_irq>
    1806:	1f bf       	out	0x3f, r17	; 63
    1808:	0f 90       	pop	r0
    180a:	df 91       	pop	r29
    180c:	cf 91       	pop	r28
    180e:	1f 91       	pop	r17
    1810:	08 95       	ret

00001812 <trx_tx_end_handler_cb>:
    1812:	1f 93       	push	r17
    1814:	cf 93       	push	r28
    1816:	df 93       	push	r29
    1818:	1f 92       	push	r1
    181a:	cd b7       	in	r28, 0x3d	; 61
    181c:	de b7       	in	r29, 0x3e	; 62
    181e:	8f b7       	in	r24, 0x3f	; 63
    1820:	89 83       	std	Y+1, r24	; 0x01
    1822:	f8 94       	cli
    1824:	19 81       	ldd	r17, Y+1	; 0x01
    1826:	a6 d3       	rcall	.+1868   	; 0x1f74 <handle_tx_end_irq>
    1828:	1f bf       	out	0x3f, r17	; 63
    182a:	0f 90       	pop	r0
    182c:	df 91       	pop	r29
    182e:	cf 91       	pop	r28
    1830:	1f 91       	pop	r17
    1832:	08 95       	ret

00001834 <trx_awake_handler_cb>:
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	80 93 50 05 	sts	0x0550, r24	; 0x800550 <tal_awake_end_flag>
    183a:	08 95       	ret

0000183c <limit_tx_pwr>:
    183c:	85 fd       	sbrc	r24, 5
    183e:	03 c0       	rjmp	.+6      	; 0x1846 <limit_tx_pwr+0xa>
    1840:	98 2f       	mov	r25, r24
    1842:	9f 73       	andi	r25, 0x3F	; 63
    1844:	04 c0       	rjmp	.+8      	; 0x184e <limit_tx_pwr+0x12>
    1846:	98 2f       	mov	r25, r24
    1848:	91 95       	neg	r25
    184a:	9f 71       	andi	r25, 0x1F	; 31
    184c:	91 95       	neg	r25
    184e:	e2 e6       	ldi	r30, 0x62	; 98
    1850:	f1 e0       	ldi	r31, 0x01	; 1
    1852:	24 91       	lpm	r18, Z
    1854:	29 17       	cp	r18, r25
    1856:	54 f4       	brge	.+20     	; 0x186c <limit_tx_pwr+0x30>
    1858:	84 91       	lpm	r24, Z
    185a:	80 3e       	cpi	r24, 0xE0	; 224
    185c:	b4 f0       	brlt	.+44     	; 0x188a <limit_tx_pwr+0x4e>
    185e:	80 32       	cpi	r24, 0x20	; 32
    1860:	b4 f4       	brge	.+44     	; 0x188e <limit_tx_pwr+0x52>
    1862:	88 23       	and	r24, r24
    1864:	cc f4       	brge	.+50     	; 0x1898 <limit_tx_pwr+0x5c>
    1866:	8f 71       	andi	r24, 0x1F	; 31
    1868:	80 62       	ori	r24, 0x20	; 32
    186a:	16 c0       	rjmp	.+44     	; 0x1898 <limit_tx_pwr+0x5c>
    186c:	e1 e7       	ldi	r30, 0x71	; 113
    186e:	f1 e0       	ldi	r31, 0x01	; 1
    1870:	24 91       	lpm	r18, Z
    1872:	92 17       	cp	r25, r18
    1874:	8c f4       	brge	.+34     	; 0x1898 <limit_tx_pwr+0x5c>
    1876:	84 91       	lpm	r24, Z
    1878:	80 3e       	cpi	r24, 0xE0	; 224
    187a:	5c f0       	brlt	.+22     	; 0x1892 <limit_tx_pwr+0x56>
    187c:	80 32       	cpi	r24, 0x20	; 32
    187e:	5c f4       	brge	.+22     	; 0x1896 <limit_tx_pwr+0x5a>
    1880:	88 23       	and	r24, r24
    1882:	54 f4       	brge	.+20     	; 0x1898 <limit_tx_pwr+0x5c>
    1884:	8f 71       	andi	r24, 0x1F	; 31
    1886:	80 62       	ori	r24, 0x20	; 32
    1888:	07 c0       	rjmp	.+14     	; 0x1898 <limit_tx_pwr+0x5c>
    188a:	80 e2       	ldi	r24, 0x20	; 32
    188c:	05 c0       	rjmp	.+10     	; 0x1898 <limit_tx_pwr+0x5c>
    188e:	8f e1       	ldi	r24, 0x1F	; 31
    1890:	03 c0       	rjmp	.+6      	; 0x1898 <limit_tx_pwr+0x5c>
    1892:	80 e2       	ldi	r24, 0x20	; 32
    1894:	01 c0       	rjmp	.+2      	; 0x1898 <limit_tx_pwr+0x5c>
    1896:	8f e1       	ldi	r24, 0x1F	; 31
    1898:	80 68       	ori	r24, 0x80	; 128
    189a:	08 95       	ret

0000189c <init_tal_pib>:
    189c:	cf 93       	push	r28
    189e:	df 93       	push	r29
    18a0:	cd e2       	ldi	r28, 0x2D	; 45
    18a2:	d5 e0       	ldi	r29, 0x05	; 5
    18a4:	84 e0       	ldi	r24, 0x04	; 4
    18a6:	8c 8b       	std	Y+20, r24	; 0x14
    18a8:	83 e0       	ldi	r24, 0x03	; 3
    18aa:	8d 8b       	std	Y+21, r24	; 0x15
    18ac:	2f ef       	ldi	r18, 0xFF	; 255
    18ae:	3f ef       	ldi	r19, 0xFF	; 255
    18b0:	3f 87       	std	Y+15, r19	; 0x0f
    18b2:	2e 87       	std	Y+14, r18	; 0x0e
    18b4:	3d 87       	std	Y+13, r19	; 0x0d
    18b6:	2c 87       	std	Y+12, r18	; 0x0c
    18b8:	9b e0       	ldi	r25, 0x0B	; 11
    18ba:	9b 8b       	std	Y+19, r25	; 0x13
    18bc:	18 8e       	std	Y+24, r1	; 0x18
    18be:	40 e0       	ldi	r20, 0x00	; 0
    18c0:	58 ef       	ldi	r21, 0xF8	; 248
    18c2:	6f ef       	ldi	r22, 0xFF	; 255
    18c4:	77 e0       	ldi	r23, 0x07	; 7
    18c6:	48 87       	std	Y+8, r20	; 0x08
    18c8:	59 87       	std	Y+9, r21	; 0x09
    18ca:	6a 87       	std	Y+10, r22	; 0x0a
    18cc:	7b 87       	std	Y+11, r23	; 0x0b
    18ce:	2a e0       	ldi	r18, 0x0A	; 10
    18d0:	31 e0       	ldi	r19, 0x01	; 1
    18d2:	39 8b       	std	Y+17, r19	; 0x11
    18d4:	28 8b       	std	Y+16, r18	; 0x10
    18d6:	9a e0       	ldi	r25, 0x0A	; 10
    18d8:	99 8f       	std	Y+25, r25	; 0x19
    18da:	92 e0       	ldi	r25, 0x02	; 2
    18dc:	9a 8f       	std	Y+26, r25	; 0x1a
    18de:	95 e0       	ldi	r25, 0x05	; 5
    18e0:	9b 8f       	std	Y+27, r25	; 0x1b
    18e2:	8c 8f       	std	Y+28, r24	; 0x1c
    18e4:	84 e8       	ldi	r24, 0x84	; 132
    18e6:	aa df       	rcall	.-172    	; 0x183c <limit_tx_pwr>
    18e8:	8f 8b       	std	Y+23, r24	; 0x17
    18ea:	81 e0       	ldi	r24, 0x01	; 1
    18ec:	8a 8b       	std	Y+18, r24	; 0x12
    18ee:	1e 8a       	std	Y+22, r1	; 0x16
    18f0:	df 91       	pop	r29
    18f2:	cf 91       	pop	r28
    18f4:	08 95       	ret

000018f6 <convert_phyTransmitPower_to_reg_value>:
    18f6:	85 fd       	sbrc	r24, 5
    18f8:	02 c0       	rjmp	.+4      	; 0x18fe <convert_phyTransmitPower_to_reg_value+0x8>
    18fa:	8f 73       	andi	r24, 0x3F	; 63
    18fc:	03 c0       	rjmp	.+6      	; 0x1904 <convert_phyTransmitPower_to_reg_value+0xe>
    18fe:	81 95       	neg	r24
    1900:	8f 71       	andi	r24, 0x1F	; 31
    1902:	81 95       	neg	r24
    1904:	e2 e6       	ldi	r30, 0x62	; 98
    1906:	f1 e0       	ldi	r31, 0x01	; 1
    1908:	94 91       	lpm	r25, Z
    190a:	89 17       	cp	r24, r25
    190c:	3c f4       	brge	.+14     	; 0x191c <convert_phyTransmitPower_to_reg_value+0x26>
    190e:	e3 e6       	ldi	r30, 0x63	; 99
    1910:	f1 e0       	ldi	r31, 0x01	; 1
    1912:	21 e0       	ldi	r18, 0x01	; 1
    1914:	94 91       	lpm	r25, Z
    1916:	89 17       	cp	r24, r25
    1918:	3c f0       	brlt	.+14     	; 0x1928 <convert_phyTransmitPower_to_reg_value+0x32>
    191a:	01 c0       	rjmp	.+2      	; 0x191e <convert_phyTransmitPower_to_reg_value+0x28>
    191c:	20 e0       	ldi	r18, 0x00	; 0
    191e:	98 17       	cp	r25, r24
    1920:	4c f4       	brge	.+18     	; 0x1934 <convert_phyTransmitPower_to_reg_value+0x3e>
    1922:	8f ef       	ldi	r24, 0xFF	; 255
    1924:	82 0f       	add	r24, r18
    1926:	08 95       	ret
    1928:	2f 5f       	subi	r18, 0xFF	; 255
    192a:	31 96       	adiw	r30, 0x01	; 1
    192c:	20 31       	cpi	r18, 0x10	; 16
    192e:	91 f7       	brne	.-28     	; 0x1914 <convert_phyTransmitPower_to_reg_value+0x1e>
    1930:	80 e0       	ldi	r24, 0x00	; 0
    1932:	08 95       	ret
    1934:	82 2f       	mov	r24, r18
    1936:	08 95       	ret

00001938 <write_all_tal_pib_to_trx>:
    1938:	cf 93       	push	r28
    193a:	df 93       	push	r29
    193c:	ed e2       	ldi	r30, 0x2D	; 45
    193e:	f5 e0       	ldi	r31, 0x05	; 5
    1940:	86 85       	ldd	r24, Z+14	; 0x0e
    1942:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <__TEXT_REGION_LENGTH__+0x7c0162>
    1946:	87 85       	ldd	r24, Z+15	; 0x0f
    1948:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <__TEXT_REGION_LENGTH__+0x7c0163>
    194c:	e4 e6       	ldi	r30, 0x64	; 100
    194e:	f1 e0       	ldi	r31, 0x01	; 1
    1950:	ad e2       	ldi	r26, 0x2D	; 45
    1952:	b5 e0       	ldi	r27, 0x05	; 5
    1954:	8d 91       	ld	r24, X+
    1956:	81 93       	st	Z+, r24
    1958:	ec 36       	cpi	r30, 0x6C	; 108
    195a:	31 e0       	ldi	r19, 0x01	; 1
    195c:	f3 07       	cpc	r31, r19
    195e:	d1 f7       	brne	.-12     	; 0x1954 <write_all_tal_pib_to_trx+0x1c>
    1960:	ed e2       	ldi	r30, 0x2D	; 45
    1962:	f5 e0       	ldi	r31, 0x05	; 5
    1964:	84 85       	ldd	r24, Z+12	; 0x0c
    1966:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__TEXT_REGION_LENGTH__+0x7c0160>
    196a:	85 85       	ldd	r24, Z+13	; 0x0d
    196c:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__TEXT_REGION_LENGTH__+0x7c0161>
    1970:	48 e4       	ldi	r20, 0x48	; 72
    1972:	51 e0       	ldi	r21, 0x01	; 1
    1974:	da 01       	movw	r26, r20
    1976:	8c 91       	ld	r24, X
    1978:	22 89       	ldd	r18, Z+18	; 0x12
    197a:	b0 e2       	ldi	r27, 0x20	; 32
    197c:	2b 9f       	mul	r18, r27
    197e:	90 01       	movw	r18, r0
    1980:	11 24       	eor	r1, r1
    1982:	20 76       	andi	r18, 0x60	; 96
    1984:	8f 79       	andi	r24, 0x9F	; 159
    1986:	82 2b       	or	r24, r18
    1988:	da 01       	movw	r26, r20
    198a:	8c 93       	st	X, r24
    198c:	cf e6       	ldi	r28, 0x6F	; 111
    198e:	d1 e0       	ldi	r29, 0x01	; 1
    1990:	88 81       	ld	r24, Y
    1992:	95 89       	ldd	r25, Z+21	; 0x15
    1994:	9f 70       	andi	r25, 0x0F	; 15
    1996:	80 7f       	andi	r24, 0xF0	; 240
    1998:	89 2b       	or	r24, r25
    199a:	88 83       	st	Y, r24
    199c:	2e e6       	ldi	r18, 0x6E	; 110
    199e:	31 e0       	ldi	r19, 0x01	; 1
    19a0:	d9 01       	movw	r26, r18
    19a2:	8c 91       	ld	r24, X
    19a4:	96 89       	ldd	r25, Z+22	; 0x16
    19a6:	99 0f       	add	r25, r25
    19a8:	99 0f       	add	r25, r25
    19aa:	99 0f       	add	r25, r25
    19ac:	98 70       	andi	r25, 0x08	; 8
    19ae:	87 7f       	andi	r24, 0xF7	; 247
    19b0:	89 2b       	or	r24, r25
    19b2:	8c 93       	st	X, r24
    19b4:	28 81       	ld	r18, Y
    19b6:	93 8d       	ldd	r25, Z+27	; 0x1b
    19b8:	b0 e1       	ldi	r27, 0x10	; 16
    19ba:	9b 9f       	mul	r25, r27
    19bc:	c0 01       	movw	r24, r0
    19be:	11 24       	eor	r1, r1
    19c0:	92 2f       	mov	r25, r18
    19c2:	9f 70       	andi	r25, 0x0F	; 15
    19c4:	89 2b       	or	r24, r25
    19c6:	88 83       	st	Y, r24
    19c8:	da 01       	movw	r26, r20
    19ca:	8c 91       	ld	r24, X
    19cc:	93 89       	ldd	r25, Z+19	; 0x13
    19ce:	9f 71       	andi	r25, 0x1F	; 31
    19d0:	80 7e       	andi	r24, 0xE0	; 224
    19d2:	89 2b       	or	r24, r25
    19d4:	8c 93       	st	X, r24
    19d6:	87 89       	ldd	r24, Z+23	; 0x17
    19d8:	8e df       	rcall	.-228    	; 0x18f6 <convert_phyTransmitPower_to_reg_value>
    19da:	e5 e4       	ldi	r30, 0x45	; 69
    19dc:	f1 e0       	ldi	r31, 0x01	; 1
    19de:	90 81       	ld	r25, Z
    19e0:	90 7f       	andi	r25, 0xF0	; 240
    19e2:	8f 70       	andi	r24, 0x0F	; 15
    19e4:	89 2b       	or	r24, r25
    19e6:	80 83       	st	Z, r24
    19e8:	df 91       	pop	r29
    19ea:	cf 91       	pop	r28
    19ec:	08 95       	ret

000019ee <tal_pib_set>:
    19ee:	cf 93       	push	r28
    19f0:	df 93       	push	r29
    19f2:	8e 34       	cpi	r24, 0x4E	; 78
    19f4:	41 f0       	breq	.+16     	; 0x1a06 <tal_pib_set+0x18>
    19f6:	89 35       	cpi	r24, 0x59	; 89
    19f8:	61 f4       	brne	.+24     	; 0x1a12 <tal_pib_set+0x24>
    19fa:	fb 01       	movw	r30, r22
    19fc:	80 81       	ld	r24, Z
    19fe:	80 93 49 05 	sts	0x0549, r24	; 0x800549 <tal_pib+0x1c>
    1a02:	80 e0       	ldi	r24, 0x00	; 0
    1a04:	0b c1       	rjmp	.+534    	; 0x1c1c <tal_pib_set+0x22e>
    1a06:	fb 01       	movw	r30, r22
    1a08:	80 81       	ld	r24, Z
    1a0a:	80 93 41 05 	sts	0x0541, r24	; 0x800541 <tal_pib+0x14>
    1a0e:	80 e0       	ldi	r24, 0x00	; 0
    1a10:	05 c1       	rjmp	.+522    	; 0x1c1c <tal_pib_set+0x22e>
    1a12:	90 91 4c 05 	lds	r25, 0x054C	; 0x80054c <tal_trx_status>
    1a16:	9f 30       	cpi	r25, 0x0F	; 15
    1a18:	09 f4       	brne	.+2      	; 0x1a1c <tal_pib_set+0x2e>
    1a1a:	dc c0       	rjmp	.+440    	; 0x1bd4 <tal_pib_set+0x1e6>
    1a1c:	8b 30       	cpi	r24, 0x0B	; 11
    1a1e:	09 f4       	brne	.+2      	; 0x1a22 <tal_pib_set+0x34>
    1a20:	c9 c0       	rjmp	.+402    	; 0x1bb4 <tal_pib_set+0x1c6>
    1a22:	80 f4       	brcc	.+32     	; 0x1a44 <tal_pib_set+0x56>
    1a24:	eb 01       	movw	r28, r22
    1a26:	82 30       	cpi	r24, 0x02	; 2
    1a28:	09 f4       	brne	.+2      	; 0x1a2c <tal_pib_set+0x3e>
    1a2a:	84 c0       	rjmp	.+264    	; 0x1b34 <tal_pib_set+0x146>
    1a2c:	20 f4       	brcc	.+8      	; 0x1a36 <tal_pib_set+0x48>
    1a2e:	88 23       	and	r24, r24
    1a30:	09 f4       	brne	.+2      	; 0x1a34 <tal_pib_set+0x46>
    1a32:	46 c0       	rjmp	.+140    	; 0x1ac0 <tal_pib_set+0xd2>
    1a34:	d1 c0       	rjmp	.+418    	; 0x1bd8 <tal_pib_set+0x1ea>
    1a36:	83 30       	cpi	r24, 0x03	; 3
    1a38:	09 f4       	brne	.+2      	; 0x1a3c <tal_pib_set+0x4e>
    1a3a:	8c c0       	rjmp	.+280    	; 0x1b54 <tal_pib_set+0x166>
    1a3c:	84 30       	cpi	r24, 0x04	; 4
    1a3e:	09 f4       	brne	.+2      	; 0x1a42 <tal_pib_set+0x54>
    1a40:	5a c0       	rjmp	.+180    	; 0x1af6 <tal_pib_set+0x108>
    1a42:	ca c0       	rjmp	.+404    	; 0x1bd8 <tal_pib_set+0x1ea>
    1a44:	83 35       	cpi	r24, 0x53	; 83
    1a46:	79 f1       	breq	.+94     	; 0x1aa6 <tal_pib_set+0xb8>
    1a48:	28 f4       	brcc	.+10     	; 0x1a54 <tal_pib_set+0x66>
    1a4a:	8f 34       	cpi	r24, 0x4F	; 79
    1a4c:	51 f0       	breq	.+20     	; 0x1a62 <tal_pib_set+0x74>
    1a4e:	80 35       	cpi	r24, 0x50	; 80
    1a50:	e9 f0       	breq	.+58     	; 0x1a8c <tal_pib_set+0x9e>
    1a52:	c2 c0       	rjmp	.+388    	; 0x1bd8 <tal_pib_set+0x1ea>
    1a54:	87 35       	cpi	r24, 0x57	; 87
    1a56:	09 f4       	brne	.+2      	; 0x1a5a <tal_pib_set+0x6c>
    1a58:	56 c0       	rjmp	.+172    	; 0x1b06 <tal_pib_set+0x118>
    1a5a:	80 3f       	cpi	r24, 0xF0	; 240
    1a5c:	09 f4       	brne	.+2      	; 0x1a60 <tal_pib_set+0x72>
    1a5e:	8b c0       	rjmp	.+278    	; 0x1b76 <tal_pib_set+0x188>
    1a60:	bb c0       	rjmp	.+374    	; 0x1bd8 <tal_pib_set+0x1ea>
    1a62:	fb 01       	movw	r30, r22
    1a64:	80 81       	ld	r24, Z
    1a66:	ed e2       	ldi	r30, 0x2D	; 45
    1a68:	f5 e0       	ldi	r31, 0x05	; 5
    1a6a:	85 8b       	std	Z+21, r24	; 0x15
    1a6c:	93 8d       	ldd	r25, Z+27	; 0x1b
    1a6e:	98 17       	cp	r25, r24
    1a70:	10 f4       	brcc	.+4      	; 0x1a76 <tal_pib_set+0x88>
    1a72:	90 93 42 05 	sts	0x0542, r25	; 0x800542 <tal_pib+0x15>
    1a76:	ef e6       	ldi	r30, 0x6F	; 111
    1a78:	f1 e0       	ldi	r31, 0x01	; 1
    1a7a:	80 81       	ld	r24, Z
    1a7c:	90 91 42 05 	lds	r25, 0x0542	; 0x800542 <tal_pib+0x15>
    1a80:	9f 70       	andi	r25, 0x0F	; 15
    1a82:	80 7f       	andi	r24, 0xF0	; 240
    1a84:	89 2b       	or	r24, r25
    1a86:	80 83       	st	Z, r24
    1a88:	80 e0       	ldi	r24, 0x00	; 0
    1a8a:	c8 c0       	rjmp	.+400    	; 0x1c1c <tal_pib_set+0x22e>
    1a8c:	fb 01       	movw	r30, r22
    1a8e:	90 81       	ld	r25, Z
    1a90:	81 81       	ldd	r24, Z+1	; 0x01
    1a92:	ed e2       	ldi	r30, 0x2D	; 45
    1a94:	f5 e0       	ldi	r31, 0x05	; 5
    1a96:	96 87       	std	Z+14, r25	; 0x0e
    1a98:	87 87       	std	Z+15, r24	; 0x0f
    1a9a:	90 93 62 01 	sts	0x0162, r25	; 0x800162 <__TEXT_REGION_LENGTH__+0x7c0162>
    1a9e:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <__TEXT_REGION_LENGTH__+0x7c0163>
    1aa2:	80 e0       	ldi	r24, 0x00	; 0
    1aa4:	bb c0       	rjmp	.+374    	; 0x1c1c <tal_pib_set+0x22e>
    1aa6:	fb 01       	movw	r30, r22
    1aa8:	90 81       	ld	r25, Z
    1aaa:	81 81       	ldd	r24, Z+1	; 0x01
    1aac:	ed e2       	ldi	r30, 0x2D	; 45
    1aae:	f5 e0       	ldi	r31, 0x05	; 5
    1ab0:	94 87       	std	Z+12, r25	; 0x0c
    1ab2:	85 87       	std	Z+13, r24	; 0x0d
    1ab4:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <__TEXT_REGION_LENGTH__+0x7c0160>
    1ab8:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <__TEXT_REGION_LENGTH__+0x7c0161>
    1abc:	80 e0       	ldi	r24, 0x00	; 0
    1abe:	ae c0       	rjmp	.+348    	; 0x1c1c <tal_pib_set+0x22e>
    1ac0:	80 91 51 05 	lds	r24, 0x0551	; 0x800551 <tal_state>
    1ac4:	81 11       	cpse	r24, r1
    1ac6:	8a c0       	rjmp	.+276    	; 0x1bdc <tal_pib_set+0x1ee>
    1ac8:	88 81       	ld	r24, Y
    1aca:	40 e0       	ldi	r20, 0x00	; 0
    1acc:	58 ef       	ldi	r21, 0xF8	; 248
    1ace:	6f ef       	ldi	r22, 0xFF	; 255
    1ad0:	77 e0       	ldi	r23, 0x07	; 7
    1ad2:	08 2e       	mov	r0, r24
    1ad4:	04 c0       	rjmp	.+8      	; 0x1ade <tal_pib_set+0xf0>
    1ad6:	76 95       	lsr	r23
    1ad8:	67 95       	ror	r22
    1ada:	57 95       	ror	r21
    1adc:	47 95       	ror	r20
    1ade:	0a 94       	dec	r0
    1ae0:	d2 f7       	brpl	.-12     	; 0x1ad6 <tal_pib_set+0xe8>
    1ae2:	40 ff       	sbrs	r20, 0
    1ae4:	7d c0       	rjmp	.+250    	; 0x1be0 <tal_pib_set+0x1f2>
    1ae6:	98 30       	cpi	r25, 0x08	; 8
    1ae8:	09 f4       	brne	.+2      	; 0x1aec <tal_pib_set+0xfe>
    1aea:	80 c0       	rjmp	.+256    	; 0x1bec <tal_pib_set+0x1fe>
    1aec:	88 e0       	ldi	r24, 0x08	; 8
    1aee:	6d da       	rcall	.-2854   	; 0xfca <set_trx_state>
    1af0:	88 30       	cpi	r24, 0x08	; 8
    1af2:	e1 f7       	brne	.-8      	; 0x1aec <tal_pib_set+0xfe>
    1af4:	86 c0       	rjmp	.+268    	; 0x1c02 <tal_pib_set+0x214>
    1af6:	80 91 51 05 	lds	r24, 0x0551	; 0x800551 <tal_state>
    1afa:	81 11       	cpse	r24, r1
    1afc:	73 c0       	rjmp	.+230    	; 0x1be4 <tal_pib_set+0x1f6>
    1afe:	88 81       	ld	r24, Y
    1b00:	81 11       	cpse	r24, r1
    1b02:	72 c0       	rjmp	.+228    	; 0x1be8 <tal_pib_set+0x1fa>
    1b04:	8b c0       	rjmp	.+278    	; 0x1c1c <tal_pib_set+0x22e>
    1b06:	fb 01       	movw	r30, r22
    1b08:	90 81       	ld	r25, Z
    1b0a:	ed e2       	ldi	r30, 0x2D	; 45
    1b0c:	f5 e0       	ldi	r31, 0x05	; 5
    1b0e:	93 8f       	std	Z+27, r25	; 0x1b
    1b10:	85 89       	ldd	r24, Z+21	; 0x15
    1b12:	98 17       	cp	r25, r24
    1b14:	10 f4       	brcc	.+4      	; 0x1b1a <tal_pib_set+0x12c>
    1b16:	90 93 42 05 	sts	0x0542, r25	; 0x800542 <tal_pib+0x15>
    1b1a:	ef e6       	ldi	r30, 0x6F	; 111
    1b1c:	f1 e0       	ldi	r31, 0x01	; 1
    1b1e:	80 81       	ld	r24, Z
    1b20:	28 2f       	mov	r18, r24
    1b22:	2f 70       	andi	r18, 0x0F	; 15
    1b24:	30 e1       	ldi	r19, 0x10	; 16
    1b26:	93 9f       	mul	r25, r19
    1b28:	c0 01       	movw	r24, r0
    1b2a:	11 24       	eor	r1, r1
    1b2c:	82 2b       	or	r24, r18
    1b2e:	80 83       	st	Z, r24
    1b30:	80 e0       	ldi	r24, 0x00	; 0
    1b32:	74 c0       	rjmp	.+232    	; 0x1c1c <tal_pib_set+0x22e>
    1b34:	88 81       	ld	r24, Y
    1b36:	cd e2       	ldi	r28, 0x2D	; 45
    1b38:	d5 e0       	ldi	r29, 0x05	; 5
    1b3a:	8f 8b       	std	Y+23, r24	; 0x17
    1b3c:	7f de       	rcall	.-770    	; 0x183c <limit_tx_pwr>
    1b3e:	8f 8b       	std	Y+23, r24	; 0x17
    1b40:	da de       	rcall	.-588    	; 0x18f6 <convert_phyTransmitPower_to_reg_value>
    1b42:	e5 e4       	ldi	r30, 0x45	; 69
    1b44:	f1 e0       	ldi	r31, 0x01	; 1
    1b46:	90 81       	ld	r25, Z
    1b48:	90 7f       	andi	r25, 0xF0	; 240
    1b4a:	8f 70       	andi	r24, 0x0F	; 15
    1b4c:	89 2b       	or	r24, r25
    1b4e:	80 83       	st	Z, r24
    1b50:	80 e0       	ldi	r24, 0x00	; 0
    1b52:	64 c0       	rjmp	.+200    	; 0x1c1c <tal_pib_set+0x22e>
    1b54:	88 81       	ld	r24, Y
    1b56:	80 93 3f 05 	sts	0x053F, r24	; 0x80053f <tal_pib+0x12>
    1b5a:	e8 e4       	ldi	r30, 0x48	; 72
    1b5c:	f1 e0       	ldi	r31, 0x01	; 1
    1b5e:	20 81       	ld	r18, Z
    1b60:	30 e2       	ldi	r19, 0x20	; 32
    1b62:	83 9f       	mul	r24, r19
    1b64:	c0 01       	movw	r24, r0
    1b66:	11 24       	eor	r1, r1
    1b68:	80 76       	andi	r24, 0x60	; 96
    1b6a:	92 2f       	mov	r25, r18
    1b6c:	9f 79       	andi	r25, 0x9F	; 159
    1b6e:	89 2b       	or	r24, r25
    1b70:	80 83       	st	Z, r24
    1b72:	80 e0       	ldi	r24, 0x00	; 0
    1b74:	53 c0       	rjmp	.+166    	; 0x1c1c <tal_pib_set+0x22e>
    1b76:	fb 01       	movw	r30, r22
    1b78:	b0 81       	ld	r27, Z
    1b7a:	a1 81       	ldd	r26, Z+1	; 0x01
    1b7c:	52 81       	ldd	r21, Z+2	; 0x02
    1b7e:	43 81       	ldd	r20, Z+3	; 0x03
    1b80:	34 81       	ldd	r19, Z+4	; 0x04
    1b82:	25 81       	ldd	r18, Z+5	; 0x05
    1b84:	96 81       	ldd	r25, Z+6	; 0x06
    1b86:	87 81       	ldd	r24, Z+7	; 0x07
    1b88:	ed e2       	ldi	r30, 0x2D	; 45
    1b8a:	f5 e0       	ldi	r31, 0x05	; 5
    1b8c:	b0 83       	st	Z, r27
    1b8e:	a1 83       	std	Z+1, r26	; 0x01
    1b90:	52 83       	std	Z+2, r21	; 0x02
    1b92:	43 83       	std	Z+3, r20	; 0x03
    1b94:	34 83       	std	Z+4, r19	; 0x04
    1b96:	25 83       	std	Z+5, r18	; 0x05
    1b98:	96 83       	std	Z+6, r25	; 0x06
    1b9a:	87 83       	std	Z+7, r24	; 0x07
    1b9c:	e4 e6       	ldi	r30, 0x64	; 100
    1b9e:	f1 e0       	ldi	r31, 0x01	; 1
    1ba0:	ad e2       	ldi	r26, 0x2D	; 45
    1ba2:	b5 e0       	ldi	r27, 0x05	; 5
    1ba4:	8d 91       	ld	r24, X+
    1ba6:	81 93       	st	Z+, r24
    1ba8:	ec 36       	cpi	r30, 0x6C	; 108
    1baa:	31 e0       	ldi	r19, 0x01	; 1
    1bac:	f3 07       	cpc	r31, r19
    1bae:	d1 f7       	brne	.-12     	; 0x1ba4 <tal_pib_set+0x1b6>
    1bb0:	80 e0       	ldi	r24, 0x00	; 0
    1bb2:	34 c0       	rjmp	.+104    	; 0x1c1c <tal_pib_set+0x22e>
    1bb4:	fb 01       	movw	r30, r22
    1bb6:	80 81       	ld	r24, Z
    1bb8:	80 93 43 05 	sts	0x0543, r24	; 0x800543 <tal_pib+0x16>
    1bbc:	ee e6       	ldi	r30, 0x6E	; 110
    1bbe:	f1 e0       	ldi	r31, 0x01	; 1
    1bc0:	90 81       	ld	r25, Z
    1bc2:	88 0f       	add	r24, r24
    1bc4:	88 0f       	add	r24, r24
    1bc6:	88 0f       	add	r24, r24
    1bc8:	88 70       	andi	r24, 0x08	; 8
    1bca:	97 7f       	andi	r25, 0xF7	; 247
    1bcc:	89 2b       	or	r24, r25
    1bce:	80 83       	st	Z, r24
    1bd0:	80 e0       	ldi	r24, 0x00	; 0
    1bd2:	24 c0       	rjmp	.+72     	; 0x1c1c <tal_pib_set+0x22e>
    1bd4:	81 e8       	ldi	r24, 0x81	; 129
    1bd6:	22 c0       	rjmp	.+68     	; 0x1c1c <tal_pib_set+0x22e>
    1bd8:	84 ef       	ldi	r24, 0xF4	; 244
    1bda:	20 c0       	rjmp	.+64     	; 0x1c1c <tal_pib_set+0x22e>
    1bdc:	86 e8       	ldi	r24, 0x86	; 134
    1bde:	1e c0       	rjmp	.+60     	; 0x1c1c <tal_pib_set+0x22e>
    1be0:	88 ee       	ldi	r24, 0xE8	; 232
    1be2:	1c c0       	rjmp	.+56     	; 0x1c1c <tal_pib_set+0x22e>
    1be4:	86 e8       	ldi	r24, 0x86	; 134
    1be6:	1a c0       	rjmp	.+52     	; 0x1c1c <tal_pib_set+0x22e>
    1be8:	88 ee       	ldi	r24, 0xE8	; 232
    1bea:	18 c0       	rjmp	.+48     	; 0x1c1c <tal_pib_set+0x22e>
    1bec:	80 93 40 05 	sts	0x0540, r24	; 0x800540 <tal_pib+0x13>
    1bf0:	e8 e4       	ldi	r30, 0x48	; 72
    1bf2:	f1 e0       	ldi	r31, 0x01	; 1
    1bf4:	90 81       	ld	r25, Z
    1bf6:	90 7e       	andi	r25, 0xE0	; 224
    1bf8:	8f 71       	andi	r24, 0x1F	; 31
    1bfa:	89 2b       	or	r24, r25
    1bfc:	80 83       	st	Z, r24
    1bfe:	80 e0       	ldi	r24, 0x00	; 0
    1c00:	0d c0       	rjmp	.+26     	; 0x1c1c <tal_pib_set+0x22e>
    1c02:	88 81       	ld	r24, Y
    1c04:	80 93 40 05 	sts	0x0540, r24	; 0x800540 <tal_pib+0x13>
    1c08:	e8 e4       	ldi	r30, 0x48	; 72
    1c0a:	f1 e0       	ldi	r31, 0x01	; 1
    1c0c:	90 81       	ld	r25, Z
    1c0e:	90 7e       	andi	r25, 0xE0	; 224
    1c10:	8f 71       	andi	r24, 0x1F	; 31
    1c12:	89 2b       	or	r24, r25
    1c14:	80 83       	st	Z, r24
    1c16:	86 e1       	ldi	r24, 0x16	; 22
    1c18:	d8 d9       	rcall	.-3152   	; 0xfca <set_trx_state>
    1c1a:	80 e0       	ldi	r24, 0x00	; 0
    1c1c:	df 91       	pop	r29
    1c1e:	cf 91       	pop	r28
    1c20:	08 95       	ret

00001c22 <__portable_avr_delay_cycles>:
    1c22:	04 c0       	rjmp	.+8      	; 0x1c2c <__portable_avr_delay_cycles+0xa>
    1c24:	61 50       	subi	r22, 0x01	; 1
    1c26:	71 09       	sbc	r23, r1
    1c28:	81 09       	sbc	r24, r1
    1c2a:	91 09       	sbc	r25, r1
    1c2c:	61 15       	cp	r22, r1
    1c2e:	71 05       	cpc	r23, r1
    1c30:	81 05       	cpc	r24, r1
    1c32:	91 05       	cpc	r25, r1
    1c34:	b9 f7       	brne	.-18     	; 0x1c24 <__portable_avr_delay_cycles+0x2>
    1c36:	08 95       	ret

00001c38 <handle_received_frame_irq>:
    1c38:	cf 92       	push	r12
    1c3a:	df 92       	push	r13
    1c3c:	ef 92       	push	r14
    1c3e:	ff 92       	push	r15
    1c40:	0f 93       	push	r16
    1c42:	1f 93       	push	r17
    1c44:	cf 93       	push	r28
    1c46:	df 93       	push	r29
    1c48:	e0 91 53 04 	lds	r30, 0x0453	; 0x800453 <tal_rx_buffer>
    1c4c:	f0 91 54 04 	lds	r31, 0x0454	; 0x800454 <tal_rx_buffer+0x1>
    1c50:	30 97       	sbiw	r30, 0x00	; 0
    1c52:	71 f4       	brne	.+28     	; 0x1c70 <handle_received_frame_irq+0x38>
    1c54:	cc e4       	ldi	r28, 0x4C	; 76
    1c56:	d1 e0       	ldi	r29, 0x01	; 1
    1c58:	88 81       	ld	r24, Y
    1c5a:	8f 77       	andi	r24, 0x7F	; 127
    1c5c:	88 83       	st	Y, r24
    1c5e:	63 e0       	ldi	r22, 0x03	; 3
    1c60:	70 e0       	ldi	r23, 0x00	; 0
    1c62:	80 e0       	ldi	r24, 0x00	; 0
    1c64:	90 e0       	ldi	r25, 0x00	; 0
    1c66:	dd df       	rcall	.-70     	; 0x1c22 <__portable_avr_delay_cycles>
    1c68:	88 81       	ld	r24, Y
    1c6a:	80 68       	ori	r24, 0x80	; 128
    1c6c:	88 83       	st	Y, r24
    1c6e:	48 c0       	rjmp	.+144    	; 0x1d00 <handle_received_frame_irq+0xc8>
    1c70:	00 91 47 01 	lds	r16, 0x0147	; 0x800147 <__TEXT_REGION_LENGTH__+0x7c0147>
    1c74:	10 91 7b 01 	lds	r17, 0x017B	; 0x80017b <__TEXT_REGION_LENGTH__+0x7c017b>
    1c78:	11 23       	and	r17, r17
    1c7a:	0c f4       	brge	.+2      	; 0x1c7e <handle_received_frame_irq+0x46>
    1c7c:	41 c0       	rjmp	.+130    	; 0x1d00 <handle_received_frame_irq+0xc8>
    1c7e:	e0 80       	ld	r14, Z
    1c80:	f1 80       	ldd	r15, Z+1	; 0x01
    1c82:	82 e0       	ldi	r24, 0x02	; 2
    1c84:	81 0f       	add	r24, r17
    1c86:	eb e8       	ldi	r30, 0x8B	; 139
    1c88:	f0 e0       	ldi	r31, 0x00	; 0
    1c8a:	e8 1b       	sub	r30, r24
    1c8c:	f1 09       	sbc	r31, r1
    1c8e:	e7 01       	movw	r28, r14
    1c90:	ce 0f       	add	r28, r30
    1c92:	df 1f       	adc	r29, r31
    1c94:	c1 2e       	mov	r12, r17
    1c96:	d1 2c       	mov	r13, r1
    1c98:	a6 01       	movw	r20, r12
    1c9a:	4f 5f       	subi	r20, 0xFF	; 255
    1c9c:	5f 4f       	sbci	r21, 0xFF	; 255
    1c9e:	60 e8       	ldi	r22, 0x80	; 128
    1ca0:	71 e0       	ldi	r23, 0x01	; 1
    1ca2:	ce 01       	movw	r24, r28
    1ca4:	70 d7       	rcall	.+3808   	; 0x2b86 <memcpy>
    1ca6:	fe 01       	movw	r30, r28
    1ca8:	12 93       	st	-Z, r17
    1caa:	d7 01       	movw	r26, r14
    1cac:	18 96       	adiw	r26, 0x08	; 8
    1cae:	fc 93       	st	X, r31
    1cb0:	ee 93       	st	-X, r30
    1cb2:	17 97       	sbiw	r26, 0x07	; 7
    1cb4:	ec 0d       	add	r30, r12
    1cb6:	fd 1d       	adc	r31, r13
    1cb8:	02 83       	std	Z+2, r16	; 0x02
    1cba:	60 91 53 04 	lds	r22, 0x0453	; 0x800453 <tal_rx_buffer>
    1cbe:	70 91 54 04 	lds	r23, 0x0454	; 0x800454 <tal_rx_buffer+0x1>
    1cc2:	86 e2       	ldi	r24, 0x26	; 38
    1cc4:	95 e0       	ldi	r25, 0x05	; 5
    1cc6:	2d d9       	rcall	.-3494   	; 0xf22 <qmm_queue_append>
    1cc8:	8b e8       	ldi	r24, 0x8B	; 139
    1cca:	93 d8       	rcall	.-3802   	; 0xdf2 <bmm_buffer_alloc>
    1ccc:	90 93 54 04 	sts	0x0454, r25	; 0x800454 <tal_rx_buffer+0x1>
    1cd0:	80 93 53 04 	sts	0x0453, r24	; 0x800453 <tal_rx_buffer>
    1cd4:	89 2b       	or	r24, r25
    1cd6:	21 f4       	brne	.+8      	; 0x1ce0 <handle_received_frame_irq+0xa8>
    1cd8:	81 e0       	ldi	r24, 0x01	; 1
    1cda:	80 93 25 05 	sts	0x0525, r24	; 0x800525 <tal_rx_on_required>
    1cde:	0d c0       	rjmp	.+26     	; 0x1cfa <handle_received_frame_irq+0xc2>
    1ce0:	cc e4       	ldi	r28, 0x4C	; 76
    1ce2:	d1 e0       	ldi	r29, 0x01	; 1
    1ce4:	88 81       	ld	r24, Y
    1ce6:	8f 77       	andi	r24, 0x7F	; 127
    1ce8:	88 83       	st	Y, r24
    1cea:	63 e0       	ldi	r22, 0x03	; 3
    1cec:	70 e0       	ldi	r23, 0x00	; 0
    1cee:	80 e0       	ldi	r24, 0x00	; 0
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	97 df       	rcall	.-210    	; 0x1c22 <__portable_avr_delay_cycles>
    1cf4:	88 81       	ld	r24, Y
    1cf6:	80 68       	ori	r24, 0x80	; 128
    1cf8:	88 83       	st	Y, r24
    1cfa:	80 e4       	ldi	r24, 0x40	; 64
    1cfc:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <__TEXT_REGION_LENGTH__+0x7c014f>
    1d00:	df 91       	pop	r29
    1d02:	cf 91       	pop	r28
    1d04:	1f 91       	pop	r17
    1d06:	0f 91       	pop	r16
    1d08:	ff 90       	pop	r15
    1d0a:	ef 90       	pop	r14
    1d0c:	df 90       	pop	r13
    1d0e:	cf 90       	pop	r12
    1d10:	08 95       	ret

00001d12 <process_incoming_frame>:
    1d12:	cf 93       	push	r28
    1d14:	df 93       	push	r29
    1d16:	ac 01       	movw	r20, r24
    1d18:	fc 01       	movw	r30, r24
    1d1a:	c0 81       	ld	r28, Z
    1d1c:	d1 81       	ldd	r29, Z+1	; 0x01
    1d1e:	af 81       	ldd	r26, Y+7	; 0x07
    1d20:	b8 85       	ldd	r27, Y+8	; 0x08
    1d22:	8c 91       	ld	r24, X
    1d24:	80 93 4d 05 	sts	0x054D, r24	; 0x80054d <last_frame_length>
    1d28:	e8 2f       	mov	r30, r24
    1d2a:	f0 e0       	ldi	r31, 0x00	; 0
    1d2c:	31 96       	adiw	r30, 0x01	; 1
    1d2e:	ea 0f       	add	r30, r26
    1d30:	fb 1f       	adc	r31, r27
    1d32:	80 81       	ld	r24, Z
    1d34:	31 81       	ldd	r19, Z+1	; 0x01
    1d36:	3d 33       	cpi	r19, 0x3D	; 61
    1d38:	20 f4       	brcc	.+8      	; 0x1d42 <process_incoming_frame+0x30>
    1d3a:	31 11       	cpse	r19, r1
    1d3c:	03 c0       	rjmp	.+6      	; 0x1d44 <process_incoming_frame+0x32>
    1d3e:	31 e0       	ldi	r19, 0x01	; 1
    1d40:	01 c0       	rjmp	.+2      	; 0x1d44 <process_incoming_frame+0x32>
    1d42:	3c e3       	ldi	r19, 0x3C	; 60
    1d44:	82 95       	swap	r24
    1d46:	86 95       	lsr	r24
    1d48:	86 95       	lsr	r24
    1d4a:	83 70       	andi	r24, 0x03	; 3
    1d4c:	2f ef       	ldi	r18, 0xFF	; 255
    1d4e:	82 9f       	mul	r24, r18
    1d50:	c0 01       	movw	r24, r0
    1d52:	11 24       	eor	r1, r1
    1d54:	38 9f       	mul	r19, r24
    1d56:	b0 01       	movw	r22, r0
    1d58:	39 9f       	mul	r19, r25
    1d5a:	70 0d       	add	r23, r0
    1d5c:	11 24       	eor	r1, r1
    1d5e:	9b 01       	movw	r18, r22
    1d60:	a3 e8       	ldi	r26, 0x83	; 131
    1d62:	bd e2       	ldi	r27, 0x2D	; 45
    1d64:	8a d6       	rcall	.+3348   	; 0x2a7a <__umulhisi3>
    1d66:	96 95       	lsr	r25
    1d68:	87 95       	ror	r24
    1d6a:	92 95       	swap	r25
    1d6c:	82 95       	swap	r24
    1d6e:	8f 70       	andi	r24, 0x0F	; 15
    1d70:	89 27       	eor	r24, r25
    1d72:	9f 70       	andi	r25, 0x0F	; 15
    1d74:	89 27       	eor	r24, r25
    1d76:	8f 3f       	cpi	r24, 0xFF	; 255
    1d78:	91 05       	cpc	r25, r1
    1d7a:	11 f0       	breq	.+4      	; 0x1d80 <process_incoming_frame+0x6e>
    1d7c:	08 f0       	brcs	.+2      	; 0x1d80 <process_incoming_frame+0x6e>
    1d7e:	8f ef       	ldi	r24, 0xFF	; 255
    1d80:	80 83       	st	Z, r24
    1d82:	5a 83       	std	Y+2, r21	; 0x02
    1d84:	49 83       	std	Y+1, r20	; 0x01
    1d86:	ce 01       	movw	r24, r28
    1d88:	2e d6       	rcall	.+3164   	; 0x29e6 <tal_rx_frame_cb>
    1d8a:	df 91       	pop	r29
    1d8c:	cf 91       	pop	r28
    1d8e:	08 95       	ret

00001d90 <tal_rx_enable>:
    1d90:	90 91 51 05 	lds	r25, 0x0551	; 0x800551 <tal_state>
    1d94:	91 11       	cpse	r25, r1
    1d96:	16 c0       	rjmp	.+44     	; 0x1dc4 <tal_rx_enable+0x34>
    1d98:	88 30       	cpi	r24, 0x08	; 8
    1d9a:	29 f4       	brne	.+10     	; 0x1da6 <tal_rx_enable+0x16>
    1d9c:	16 d9       	rcall	.-3540   	; 0xfca <set_trx_state>
    1d9e:	10 92 25 05 	sts	0x0525, r1	; 0x800525 <tal_rx_on_required>
    1da2:	88 e0       	ldi	r24, 0x08	; 8
    1da4:	08 95       	ret
    1da6:	80 91 53 04 	lds	r24, 0x0453	; 0x800453 <tal_rx_buffer>
    1daa:	90 91 54 04 	lds	r25, 0x0454	; 0x800454 <tal_rx_buffer+0x1>
    1dae:	89 2b       	or	r24, r25
    1db0:	21 f0       	breq	.+8      	; 0x1dba <tal_rx_enable+0x2a>
    1db2:	86 e1       	ldi	r24, 0x16	; 22
    1db4:	0a d9       	rcall	.-3564   	; 0xfca <set_trx_state>
    1db6:	86 e0       	ldi	r24, 0x06	; 6
    1db8:	08 95       	ret
    1dba:	81 e0       	ldi	r24, 0x01	; 1
    1dbc:	80 93 25 05 	sts	0x0525, r24	; 0x800525 <tal_rx_on_required>
    1dc0:	86 e0       	ldi	r24, 0x06	; 6
    1dc2:	08 95       	ret
    1dc4:	86 e8       	ldi	r24, 0x86	; 134
    1dc6:	08 95       	ret

00001dc8 <__portable_avr_delay_cycles>:
    1dc8:	04 c0       	rjmp	.+8      	; 0x1dd2 <__portable_avr_delay_cycles+0xa>
    1dca:	61 50       	subi	r22, 0x01	; 1
    1dcc:	71 09       	sbc	r23, r1
    1dce:	81 09       	sbc	r24, r1
    1dd0:	91 09       	sbc	r25, r1
    1dd2:	61 15       	cp	r22, r1
    1dd4:	71 05       	cpc	r23, r1
    1dd6:	81 05       	cpc	r24, r1
    1dd8:	91 05       	cpc	r25, r1
    1dda:	b9 f7       	brne	.-18     	; 0x1dca <__portable_avr_delay_cycles+0x2>
    1ddc:	08 95       	ret

00001dde <tx_done_handling>:
    1dde:	10 92 51 05 	sts	0x0551, r1	; 0x800551 <tal_state>
    1de2:	80 91 5d 04 	lds	r24, 0x045D	; 0x80045d <trx_trac_status>
    1de6:	83 30       	cpi	r24, 0x03	; 3
    1de8:	69 f0       	breq	.+26     	; 0x1e04 <tx_done_handling+0x26>
    1dea:	28 f4       	brcc	.+10     	; 0x1df6 <tx_done_handling+0x18>
    1dec:	88 23       	and	r24, r24
    1dee:	91 f0       	breq	.+36     	; 0x1e14 <tx_done_handling+0x36>
    1df0:	81 30       	cpi	r24, 0x01	; 1
    1df2:	31 f0       	breq	.+12     	; 0x1e00 <tx_done_handling+0x22>
    1df4:	0d c0       	rjmp	.+26     	; 0x1e10 <tx_done_handling+0x32>
    1df6:	85 30       	cpi	r24, 0x05	; 5
    1df8:	39 f0       	breq	.+14     	; 0x1e08 <tx_done_handling+0x2a>
    1dfa:	87 30       	cpi	r24, 0x07	; 7
    1dfc:	39 f0       	breq	.+14     	; 0x1e0c <tx_done_handling+0x2e>
    1dfe:	08 c0       	rjmp	.+16     	; 0x1e10 <tx_done_handling+0x32>
    1e00:	87 e8       	ldi	r24, 0x87	; 135
    1e02:	09 c0       	rjmp	.+18     	; 0x1e16 <tx_done_handling+0x38>
    1e04:	81 ee       	ldi	r24, 0xE1	; 225
    1e06:	07 c0       	rjmp	.+14     	; 0x1e16 <tx_done_handling+0x38>
    1e08:	89 ee       	ldi	r24, 0xE9	; 233
    1e0a:	05 c0       	rjmp	.+10     	; 0x1e16 <tx_done_handling+0x38>
    1e0c:	85 e8       	ldi	r24, 0x85	; 133
    1e0e:	03 c0       	rjmp	.+6      	; 0x1e16 <tx_done_handling+0x38>
    1e10:	85 e8       	ldi	r24, 0x85	; 133
    1e12:	01 c0       	rjmp	.+2      	; 0x1e16 <tx_done_handling+0x38>
    1e14:	80 e0       	ldi	r24, 0x00	; 0
    1e16:	60 91 2b 05 	lds	r22, 0x052B	; 0x80052b <mac_frame_ptr>
    1e1a:	70 91 2c 05 	lds	r23, 0x052C	; 0x80052c <mac_frame_ptr+0x1>
    1e1e:	e0 c5       	rjmp	.+3008   	; 0x29e0 <tal_tx_frame_done_cb>
    1e20:	08 95       	ret

00001e22 <send_frame>:
    1e22:	1f 93       	push	r17
    1e24:	cf 93       	push	r28
    1e26:	df 93       	push	r29
    1e28:	1f 92       	push	r1
    1e2a:	cd b7       	in	r28, 0x3d	; 61
    1e2c:	de b7       	in	r29, 0x3e	; 62
    1e2e:	18 2f       	mov	r17, r24
    1e30:	66 23       	and	r22, r22
    1e32:	81 f0       	breq	.+32     	; 0x1e54 <send_frame+0x32>
    1e34:	ec e6       	ldi	r30, 0x6C	; 108
    1e36:	f1 e0       	ldi	r31, 0x01	; 1
    1e38:	20 81       	ld	r18, Z
    1e3a:	90 91 49 05 	lds	r25, 0x0549	; 0x800549 <tal_pib+0x1c>
    1e3e:	30 e1       	ldi	r19, 0x10	; 16
    1e40:	93 9f       	mul	r25, r19
    1e42:	c0 01       	movw	r24, r0
    1e44:	11 24       	eor	r1, r1
    1e46:	92 2f       	mov	r25, r18
    1e48:	9f 70       	andi	r25, 0x0F	; 15
    1e4a:	89 2b       	or	r24, r25
    1e4c:	80 83       	st	Z, r24
    1e4e:	12 30       	cpi	r17, 0x02	; 2
    1e50:	e0 f4       	brcc	.+56     	; 0x1e8a <send_frame+0x68>
    1e52:	08 c0       	rjmp	.+16     	; 0x1e64 <send_frame+0x42>
    1e54:	ec e6       	ldi	r30, 0x6C	; 108
    1e56:	f1 e0       	ldi	r31, 0x01	; 1
    1e58:	80 81       	ld	r24, Z
    1e5a:	8f 70       	andi	r24, 0x0F	; 15
    1e5c:	80 83       	st	Z, r24
    1e5e:	12 30       	cpi	r17, 0x02	; 2
    1e60:	a0 f4       	brcc	.+40     	; 0x1e8a <send_frame+0x68>
    1e62:	0d c0       	rjmp	.+26     	; 0x1e7e <send_frame+0x5c>
    1e64:	ec e6       	ldi	r30, 0x6C	; 108
    1e66:	f1 e0       	ldi	r31, 0x01	; 1
    1e68:	80 81       	ld	r24, Z
    1e6a:	90 91 41 05 	lds	r25, 0x0541	; 0x800541 <tal_pib+0x14>
    1e6e:	99 0f       	add	r25, r25
    1e70:	9e 70       	andi	r25, 0x0E	; 14
    1e72:	81 7f       	andi	r24, 0xF1	; 241
    1e74:	89 2b       	or	r24, r25
    1e76:	80 83       	st	Z, r24
    1e78:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <__TEXT_REGION_LENGTH__+0x7c016f>
    1e7c:	1a c0       	rjmp	.+52     	; 0x1eb2 <send_frame+0x90>
    1e7e:	ec e6       	ldi	r30, 0x6C	; 108
    1e80:	f1 e0       	ldi	r31, 0x01	; 1
    1e82:	80 81       	ld	r24, Z
    1e84:	8e 60       	ori	r24, 0x0E	; 14
    1e86:	80 83       	st	Z, r24
    1e88:	14 c0       	rjmp	.+40     	; 0x1eb2 <send_frame+0x90>
    1e8a:	ed e2       	ldi	r30, 0x2D	; 45
    1e8c:	f5 e0       	ldi	r31, 0x05	; 5
    1e8e:	83 8d       	ldd	r24, Z+27	; 0x1b
    1e90:	20 e1       	ldi	r18, 0x10	; 16
    1e92:	82 9f       	mul	r24, r18
    1e94:	c0 01       	movw	r24, r0
    1e96:	11 24       	eor	r1, r1
    1e98:	95 89       	ldd	r25, Z+21	; 0x15
    1e9a:	89 2b       	or	r24, r25
    1e9c:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <__TEXT_REGION_LENGTH__+0x7c016f>
    1ea0:	ac e6       	ldi	r26, 0x6C	; 108
    1ea2:	b1 e0       	ldi	r27, 0x01	; 1
    1ea4:	8c 91       	ld	r24, X
    1ea6:	94 89       	ldd	r25, Z+20	; 0x14
    1ea8:	99 0f       	add	r25, r25
    1eaa:	9e 70       	andi	r25, 0x0E	; 14
    1eac:	81 7f       	andi	r24, 0xF1	; 241
    1eae:	89 2b       	or	r24, r25
    1eb0:	8c 93       	st	X, r24
    1eb2:	89 e1       	ldi	r24, 0x19	; 25
    1eb4:	8a d8       	rcall	.-3820   	; 0xfca <set_trx_state>
    1eb6:	89 31       	cpi	r24, 0x19	; 25
    1eb8:	e1 f7       	brne	.-8      	; 0x1eb2 <send_frame+0x90>
    1eba:	11 30       	cpi	r17, 0x01	; 1
    1ebc:	a1 f4       	brne	.+40     	; 0x1ee6 <send_frame+0xc4>
    1ebe:	80 91 4d 05 	lds	r24, 0x054D	; 0x80054d <last_frame_length>
    1ec2:	83 31       	cpi	r24, 0x13	; 19
    1ec4:	40 f0       	brcs	.+16     	; 0x1ed6 <send_frame+0xb4>
    1ec6:	61 e0       	ldi	r22, 0x01	; 1
    1ec8:	73 e0       	ldi	r23, 0x03	; 3
    1eca:	80 e0       	ldi	r24, 0x00	; 0
    1ecc:	90 e0       	ldi	r25, 0x00	; 0
    1ece:	7c df       	rcall	.-264    	; 0x1dc8 <__portable_avr_delay_cycles>
    1ed0:	10 92 4d 05 	sts	0x054D, r1	; 0x80054d <last_frame_length>
    1ed4:	0d c0       	rjmp	.+26     	; 0x1ef0 <send_frame+0xce>
    1ed6:	6b ea       	ldi	r22, 0xAB	; 171
    1ed8:	70 e0       	ldi	r23, 0x00	; 0
    1eda:	80 e0       	ldi	r24, 0x00	; 0
    1edc:	90 e0       	ldi	r25, 0x00	; 0
    1ede:	74 df       	rcall	.-280    	; 0x1dc8 <__portable_avr_delay_cycles>
    1ee0:	10 92 4d 05 	sts	0x054D, r1	; 0x80054d <last_frame_length>
    1ee4:	05 c0       	rjmp	.+10     	; 0x1ef0 <send_frame+0xce>
    1ee6:	6c e0       	ldi	r22, 0x0C	; 12
    1ee8:	70 e0       	ldi	r23, 0x00	; 0
    1eea:	80 e0       	ldi	r24, 0x00	; 0
    1eec:	90 e0       	ldi	r25, 0x00	; 0
    1eee:	6c df       	rcall	.-296    	; 0x1dc8 <__portable_avr_delay_cycles>
    1ef0:	8f b7       	in	r24, 0x3f	; 63
    1ef2:	89 83       	std	Y+1, r24	; 0x01
    1ef4:	f8 94       	cli
    1ef6:	19 81       	ldd	r17, Y+1	; 0x01
    1ef8:	e9 e3       	ldi	r30, 0x39	; 57
    1efa:	f1 e0       	ldi	r31, 0x01	; 1
    1efc:	80 81       	ld	r24, Z
    1efe:	82 60       	ori	r24, 0x02	; 2
    1f00:	80 83       	st	Z, r24
    1f02:	00 00       	nop
    1f04:	00 00       	nop
    1f06:	80 81       	ld	r24, Z
    1f08:	8d 7f       	andi	r24, 0xFD	; 253
    1f0a:	80 83       	st	Z, r24
    1f0c:	60 91 4e 05 	lds	r22, 0x054E	; 0x80054e <tal_frame_to_tx>
    1f10:	70 91 4f 05 	lds	r23, 0x054F	; 0x80054f <tal_frame_to_tx+0x1>
    1f14:	fb 01       	movw	r30, r22
    1f16:	40 81       	ld	r20, Z
    1f18:	50 e0       	ldi	r21, 0x00	; 0
    1f1a:	41 50       	subi	r20, 0x01	; 1
    1f1c:	51 09       	sbc	r21, r1
    1f1e:	80 e8       	ldi	r24, 0x80	; 128
    1f20:	91 e0       	ldi	r25, 0x01	; 1
    1f22:	31 d6       	rcall	.+3170   	; 0x2b86 <memcpy>
    1f24:	81 e0       	ldi	r24, 0x01	; 1
    1f26:	80 93 51 05 	sts	0x0551, r24	; 0x800551 <tal_state>
    1f2a:	1f bf       	out	0x3f, r17	; 63
    1f2c:	0f 90       	pop	r0
    1f2e:	df 91       	pop	r29
    1f30:	cf 91       	pop	r28
    1f32:	1f 91       	pop	r17
    1f34:	08 95       	ret

00001f36 <tal_tx_frame>:
    1f36:	fc 01       	movw	r30, r24
    1f38:	90 91 51 05 	lds	r25, 0x0551	; 0x800551 <tal_state>
    1f3c:	91 11       	cpse	r25, r1
    1f3e:	16 c0       	rjmp	.+44     	; 0x1f6c <tal_tx_frame+0x36>
    1f40:	f0 93 2c 05 	sts	0x052C, r31	; 0x80052c <mac_frame_ptr+0x1>
    1f44:	e0 93 2b 05 	sts	0x052B, r30	; 0x80052b <mac_frame_ptr>
    1f48:	07 80       	ldd	r0, Z+7	; 0x07
    1f4a:	f0 85       	ldd	r31, Z+8	; 0x08
    1f4c:	e0 2d       	mov	r30, r0
    1f4e:	f0 93 4f 05 	sts	0x054F, r31	; 0x80054f <tal_frame_to_tx+0x1>
    1f52:	e0 93 4e 05 	sts	0x054E, r30	; 0x80054e <tal_frame_to_tx>
    1f56:	80 81       	ld	r24, Z
    1f58:	81 50       	subi	r24, 0x01	; 1
    1f5a:	80 93 4d 05 	sts	0x054D, r24	; 0x80054d <last_frame_length>
    1f5e:	ef 2b       	or	r30, r31
    1f60:	39 f0       	breq	.+14     	; 0x1f70 <tal_tx_frame+0x3a>
    1f62:	86 2f       	mov	r24, r22
    1f64:	64 2f       	mov	r22, r20
    1f66:	5d df       	rcall	.-326    	; 0x1e22 <send_frame>
    1f68:	80 e0       	ldi	r24, 0x00	; 0
    1f6a:	08 95       	ret
    1f6c:	86 e8       	ldi	r24, 0x86	; 134
    1f6e:	08 95       	ret
    1f70:	88 ee       	ldi	r24, 0xE8	; 232
    1f72:	08 95       	ret

00001f74 <handle_tx_end_irq>:
    1f74:	80 91 51 05 	lds	r24, 0x0551	; 0x800551 <tal_state>
    1f78:	81 30       	cpi	r24, 0x01	; 1
    1f7a:	c1 f4       	brne	.+48     	; 0x1fac <handle_tx_end_irq+0x38>
    1f7c:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__TEXT_REGION_LENGTH__+0x7c0142>
    1f80:	82 95       	swap	r24
    1f82:	86 95       	lsr	r24
    1f84:	87 70       	andi	r24, 0x07	; 7
    1f86:	80 93 5d 04 	sts	0x045D, r24	; 0x80045d <trx_trac_status>
    1f8a:	82 e0       	ldi	r24, 0x02	; 2
    1f8c:	80 93 51 05 	sts	0x0551, r24	; 0x800551 <tal_state>
    1f90:	80 91 53 04 	lds	r24, 0x0453	; 0x800453 <tal_rx_buffer>
    1f94:	90 91 54 04 	lds	r25, 0x0454	; 0x800454 <tal_rx_buffer+0x1>
    1f98:	89 2b       	or	r24, r25
    1f9a:	31 f4       	brne	.+12     	; 0x1fa8 <handle_tx_end_irq+0x34>
    1f9c:	89 e0       	ldi	r24, 0x09	; 9
    1f9e:	15 d8       	rcall	.-4054   	; 0xfca <set_trx_state>
    1fa0:	81 e0       	ldi	r24, 0x01	; 1
    1fa2:	80 93 25 05 	sts	0x0525, r24	; 0x800525 <tal_rx_on_required>
    1fa6:	08 95       	ret
    1fa8:	86 e1       	ldi	r24, 0x16	; 22
    1faa:	0f c8       	rjmp	.-4066   	; 0xfca <set_trx_state>
    1fac:	08 95       	ret

00001fae <tal_ant_div_config>:
    1fae:	88 23       	and	r24, r24
    1fb0:	29 f1       	breq	.+74     	; 0x1ffc <tal_ant_div_config+0x4e>
    1fb2:	ed e4       	ldi	r30, 0x4D	; 77
    1fb4:	f1 e0       	ldi	r31, 0x01	; 1
    1fb6:	80 81       	ld	r24, Z
    1fb8:	8c 7f       	andi	r24, 0xFC	; 252
    1fba:	80 83       	st	Z, r24
    1fbc:	80 81       	ld	r24, Z
    1fbe:	88 60       	ori	r24, 0x08	; 8
    1fc0:	80 83       	st	Z, r24
    1fc2:	aa e4       	ldi	r26, 0x4A	; 74
    1fc4:	b1 e0       	ldi	r27, 0x01	; 1
    1fc6:	8c 91       	ld	r24, X
    1fc8:	80 7f       	andi	r24, 0xF0	; 240
    1fca:	83 60       	ori	r24, 0x03	; 3
    1fcc:	8c 93       	st	X, r24
    1fce:	80 81       	ld	r24, Z
    1fd0:	84 60       	ori	r24, 0x04	; 4
    1fd2:	80 83       	st	Z, r24
    1fd4:	80 81       	ld	r24, Z
    1fd6:	83 70       	andi	r24, 0x03	; 3
    1fd8:	09 f0       	breq	.+2      	; 0x1fdc <tal_ant_div_config+0x2e>
    1fda:	54 c0       	rjmp	.+168    	; 0x2084 <__EEPROM_REGION_LENGTH__+0x84>
    1fdc:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <__TEXT_REGION_LENGTH__+0x7c014d>
    1fe0:	83 ff       	sbrs	r24, 3
    1fe2:	52 c0       	rjmp	.+164    	; 0x2088 <__EEPROM_REGION_LENGTH__+0x88>
    1fe4:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <__TEXT_REGION_LENGTH__+0x7c014d>
    1fe8:	82 ff       	sbrs	r24, 2
    1fea:	50 c0       	rjmp	.+160    	; 0x208c <__EEPROM_REGION_LENGTH__+0x8c>
    1fec:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <__TEXT_REGION_LENGTH__+0x7c014a>
    1ff0:	8f 70       	andi	r24, 0x0F	; 15
    1ff2:	83 30       	cpi	r24, 0x03	; 3
    1ff4:	09 f0       	breq	.+2      	; 0x1ff8 <tal_ant_div_config+0x4a>
    1ff6:	4c c0       	rjmp	.+152    	; 0x2090 <__EEPROM_REGION_LENGTH__+0x90>
    1ff8:	80 e0       	ldi	r24, 0x00	; 0
    1ffa:	08 95       	ret
    1ffc:	ed e4       	ldi	r30, 0x4D	; 77
    1ffe:	f1 e0       	ldi	r31, 0x01	; 1
    2000:	80 81       	ld	r24, Z
    2002:	87 7f       	andi	r24, 0xF7	; 247
    2004:	80 83       	st	Z, r24
    2006:	aa e4       	ldi	r26, 0x4A	; 74
    2008:	b1 e0       	ldi	r27, 0x01	; 1
    200a:	8c 91       	ld	r24, X
    200c:	80 7f       	andi	r24, 0xF0	; 240
    200e:	87 60       	ori	r24, 0x07	; 7
    2010:	8c 93       	st	X, r24
    2012:	80 81       	ld	r24, Z
    2014:	84 60       	ori	r24, 0x04	; 4
    2016:	80 83       	st	Z, r24
    2018:	61 30       	cpi	r22, 0x01	; 1
    201a:	31 f4       	brne	.+12     	; 0x2028 <__EEPROM_REGION_LENGTH__+0x28>
    201c:	80 81       	ld	r24, Z
    201e:	8c 7f       	andi	r24, 0xFC	; 252
    2020:	81 60       	ori	r24, 0x01	; 1
    2022:	80 83       	st	Z, r24
    2024:	85 e8       	ldi	r24, 0x85	; 133
    2026:	17 c0       	rjmp	.+46     	; 0x2056 <__EEPROM_REGION_LENGTH__+0x56>
    2028:	62 30       	cpi	r22, 0x02	; 2
    202a:	41 f4       	brne	.+16     	; 0x203c <__EEPROM_REGION_LENGTH__+0x3c>
    202c:	ed e4       	ldi	r30, 0x4D	; 77
    202e:	f1 e0       	ldi	r31, 0x01	; 1
    2030:	80 81       	ld	r24, Z
    2032:	8c 7f       	andi	r24, 0xFC	; 252
    2034:	82 60       	ori	r24, 0x02	; 2
    2036:	80 83       	st	Z, r24
    2038:	85 e8       	ldi	r24, 0x85	; 133
    203a:	0d c0       	rjmp	.+26     	; 0x2056 <__EEPROM_REGION_LENGTH__+0x56>
    203c:	66 23       	and	r22, r22
    203e:	11 f0       	breq	.+4      	; 0x2044 <__EEPROM_REGION_LENGTH__+0x44>
    2040:	63 30       	cpi	r22, 0x03	; 3
    2042:	41 f4       	brne	.+16     	; 0x2054 <__EEPROM_REGION_LENGTH__+0x54>
    2044:	ed e4       	ldi	r30, 0x4D	; 77
    2046:	f1 e0       	ldi	r31, 0x01	; 1
    2048:	80 81       	ld	r24, Z
    204a:	8c 7f       	andi	r24, 0xFC	; 252
    204c:	80 83       	st	Z, r24
    204e:	85 e8       	ldi	r24, 0x85	; 133
    2050:	60 e0       	ldi	r22, 0x00	; 0
    2052:	01 c0       	rjmp	.+2      	; 0x2056 <__EEPROM_REGION_LENGTH__+0x56>
    2054:	88 ee       	ldi	r24, 0xE8	; 232
    2056:	20 91 4d 01 	lds	r18, 0x014D	; 0x80014d <__TEXT_REGION_LENGTH__+0x7c014d>
    205a:	23 70       	andi	r18, 0x03	; 3
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	70 e0       	ldi	r23, 0x00	; 0
    2060:	26 17       	cp	r18, r22
    2062:	37 07       	cpc	r19, r23
    2064:	b9 f4       	brne	.+46     	; 0x2094 <__EEPROM_REGION_LENGTH__+0x94>
    2066:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <__TEXT_REGION_LENGTH__+0x7c014d>
    206a:	93 fd       	sbrc	r25, 3
    206c:	15 c0       	rjmp	.+42     	; 0x2098 <__EEPROM_REGION_LENGTH__+0x98>
    206e:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <__TEXT_REGION_LENGTH__+0x7c014d>
    2072:	92 fd       	sbrc	r25, 2
    2074:	13 c0       	rjmp	.+38     	; 0x209c <__EEPROM_REGION_LENGTH__+0x9c>
    2076:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <__TEXT_REGION_LENGTH__+0x7c014a>
    207a:	9f 70       	andi	r25, 0x0F	; 15
    207c:	93 30       	cpi	r25, 0x03	; 3
    207e:	79 f4       	brne	.+30     	; 0x209e <__EEPROM_REGION_LENGTH__+0x9e>
    2080:	80 e0       	ldi	r24, 0x00	; 0
    2082:	08 95       	ret
    2084:	85 e8       	ldi	r24, 0x85	; 133
    2086:	08 95       	ret
    2088:	85 e8       	ldi	r24, 0x85	; 133
    208a:	08 95       	ret
    208c:	85 e8       	ldi	r24, 0x85	; 133
    208e:	08 95       	ret
    2090:	85 e8       	ldi	r24, 0x85	; 133
    2092:	08 95       	ret
    2094:	85 e8       	ldi	r24, 0x85	; 133
    2096:	08 95       	ret
    2098:	85 e8       	ldi	r24, 0x85	; 133
    209a:	08 95       	ret
    209c:	85 e8       	ldi	r24, 0x85	; 133
    209e:	08 95       	ret

000020a0 <tfa_pib_set>:
    20a0:	81 11       	cpse	r24, r1
    20a2:	24 c0       	rjmp	.+72     	; 0x20ec <tfa_pib_set+0x4c>
    20a4:	fb 01       	movw	r30, r22
    20a6:	80 81       	ld	r24, Z
    20a8:	80 3d       	cpi	r24, 0xD0	; 208
    20aa:	2c f0       	brlt	.+10     	; 0x20b6 <tfa_pib_set+0x16>
    20ac:	8f ec       	ldi	r24, 0xCF	; 207
    20ae:	80 93 5e 04 	sts	0x045E, r24	; 0x80045e <tfa_pib_rx_sens>
    20b2:	6f e0       	ldi	r22, 0x0F	; 15
    20b4:	12 c0       	rjmp	.+36     	; 0x20da <tfa_pib_set+0x3a>
    20b6:	87 3a       	cpi	r24, 0xA7	; 167
    20b8:	2c f4       	brge	.+10     	; 0x20c4 <tfa_pib_set+0x24>
    20ba:	86 ea       	ldi	r24, 0xA6	; 166
    20bc:	80 93 5e 04 	sts	0x045E, r24	; 0x80045e <tfa_pib_rx_sens>
    20c0:	60 e0       	ldi	r22, 0x00	; 0
    20c2:	0b c0       	rjmp	.+22     	; 0x20da <tfa_pib_set+0x3a>
    20c4:	80 93 5e 04 	sts	0x045E, r24	; 0x80045e <tfa_pib_rx_sens>
    20c8:	08 2e       	mov	r0, r24
    20ca:	00 0c       	add	r0, r0
    20cc:	99 0b       	sbc	r25, r25
    20ce:	86 5a       	subi	r24, 0xA6	; 166
    20d0:	9f 4f       	sbci	r25, 0xFF	; 255
    20d2:	63 e0       	ldi	r22, 0x03	; 3
    20d4:	70 e0       	ldi	r23, 0x00	; 0
    20d6:	b6 d4       	rcall	.+2412   	; 0x2a44 <__divmodhi4>
    20d8:	6f 5f       	subi	r22, 0xFF	; 255
    20da:	e5 e5       	ldi	r30, 0x55	; 85
    20dc:	f1 e0       	ldi	r31, 0x01	; 1
    20de:	80 81       	ld	r24, Z
    20e0:	80 7f       	andi	r24, 0xF0	; 240
    20e2:	6f 70       	andi	r22, 0x0F	; 15
    20e4:	68 2b       	or	r22, r24
    20e6:	60 83       	st	Z, r22
    20e8:	80 e0       	ldi	r24, 0x00	; 0
    20ea:	08 95       	ret
    20ec:	84 ef       	ldi	r24, 0xF4	; 244
    20ee:	08 95       	ret

000020f0 <tfa_init>:
    20f0:	86 ea       	ldi	r24, 0xA6	; 166
    20f2:	80 93 5e 04 	sts	0x045E, r24	; 0x80045e <tfa_pib_rx_sens>
    20f6:	6e e5       	ldi	r22, 0x5E	; 94
    20f8:	74 e0       	ldi	r23, 0x04	; 4
    20fa:	80 e0       	ldi	r24, 0x00	; 0
    20fc:	d1 df       	rcall	.-94     	; 0x20a0 <tfa_pib_set>
    20fe:	61 e0       	ldi	r22, 0x01	; 1
    2100:	80 e0       	ldi	r24, 0x00	; 0
    2102:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    2106:	60 e1       	ldi	r22, 0x10	; 16
    2108:	80 e0       	ldi	r24, 0x00	; 0
    210a:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    210e:	80 e0       	ldi	r24, 0x00	; 0
    2110:	08 95       	ret

00002112 <tc_ovf_callback>:
    2112:	0c 94 9a 01 	jmp	0x334	; 0x334 <tmr_ovf_callback>
    2116:	08 95       	ret

00002118 <tc_cca_callback>:
    2118:	0c 94 d2 01 	jmp	0x3a4	; 0x3a4 <tmr_cca_callback>
    211c:	08 95       	ret

0000211e <tmr_read_count>:
    211e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    2122:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    2126:	08 95       	ret

00002128 <tmr_disable_cc_interrupt>:
    2128:	ef e6       	ldi	r30, 0x6F	; 111
    212a:	f0 e0       	ldi	r31, 0x00	; 0
    212c:	80 81       	ld	r24, Z
    212e:	8d 7f       	andi	r24, 0xFD	; 253
    2130:	80 83       	st	Z, r24
    2132:	b1 9a       	sbi	0x16, 1	; 22
    2134:	08 95       	ret

00002136 <tmr_enable_cc_interrupt>:
    2136:	b1 9a       	sbi	0x16, 1	; 22
    2138:	ef e6       	ldi	r30, 0x6F	; 111
    213a:	f0 e0       	ldi	r31, 0x00	; 0
    213c:	80 81       	ld	r24, Z
    213e:	82 60       	ori	r24, 0x02	; 2
    2140:	80 83       	st	Z, r24
    2142:	08 95       	ret

00002144 <tmr_disable_ovf_interrupt>:
    2144:	ef e6       	ldi	r30, 0x6F	; 111
    2146:	f0 e0       	ldi	r31, 0x00	; 0
    2148:	80 81       	ld	r24, Z
    214a:	81 60       	ori	r24, 0x01	; 1
    214c:	80 83       	st	Z, r24
    214e:	b0 9a       	sbi	0x16, 0	; 22
    2150:	08 95       	ret

00002152 <tmr_stop>:
    2152:	80 e8       	ldi	r24, 0x80	; 128
    2154:	90 e0       	ldi	r25, 0x00	; 0
    2156:	82 c3       	rjmp	.+1796   	; 0x285c <tc_disable>
    2158:	08 95       	ret

0000215a <tmr_write_cmpreg>:
    215a:	e9 e8       	ldi	r30, 0x89	; 137
    215c:	f0 e0       	ldi	r31, 0x00	; 0
    215e:	20 81       	ld	r18, Z
    2160:	92 2b       	or	r25, r18
    2162:	90 83       	st	Z, r25
    2164:	e8 e8       	ldi	r30, 0x88	; 136
    2166:	f0 e0       	ldi	r31, 0x00	; 0
    2168:	90 81       	ld	r25, Z
    216a:	89 2b       	or	r24, r25
    216c:	80 83       	st	Z, r24
    216e:	08 95       	ret

00002170 <save_cpu_interrupt>:
    2170:	cf 93       	push	r28
    2172:	df 93       	push	r29
    2174:	1f 92       	push	r1
    2176:	cd b7       	in	r28, 0x3d	; 61
    2178:	de b7       	in	r29, 0x3e	; 62
    217a:	8f b7       	in	r24, 0x3f	; 63
    217c:	89 83       	std	Y+1, r24	; 0x01
    217e:	f8 94       	cli
    2180:	89 81       	ldd	r24, Y+1	; 0x01
    2182:	0f 90       	pop	r0
    2184:	df 91       	pop	r29
    2186:	cf 91       	pop	r28
    2188:	08 95       	ret

0000218a <restore_cpu_interrupt>:
    218a:	8f bf       	out	0x3f, r24	; 63
    218c:	08 95       	ret

0000218e <tmr_init>:
    218e:	cf 93       	push	r28
    2190:	df 93       	push	r29
    2192:	80 e8       	ldi	r24, 0x80	; 128
    2194:	90 e0       	ldi	r25, 0x00	; 0
    2196:	eb d2       	rcall	.+1494   	; 0x276e <tc_enable>
    2198:	69 e8       	ldi	r22, 0x89	; 137
    219a:	70 e1       	ldi	r23, 0x10	; 16
    219c:	80 e8       	ldi	r24, 0x80	; 128
    219e:	90 e0       	ldi	r25, 0x00	; 0
    21a0:	d4 d3       	rcall	.+1960   	; 0x294a <tc_set_overflow_interrupt_callback>
    21a2:	cf e6       	ldi	r28, 0x6F	; 111
    21a4:	d0 e0       	ldi	r29, 0x00	; 0
    21a6:	88 81       	ld	r24, Y
    21a8:	81 60       	ori	r24, 0x01	; 1
    21aa:	88 83       	st	Y, r24
    21ac:	6c e8       	ldi	r22, 0x8C	; 140
    21ae:	70 e1       	ldi	r23, 0x10	; 16
    21b0:	80 e8       	ldi	r24, 0x80	; 128
    21b2:	90 e0       	ldi	r25, 0x00	; 0
    21b4:	ea d3       	rcall	.+2004   	; 0x298a <tc_set_compa_interrupt_callback>
    21b6:	88 81       	ld	r24, Y
    21b8:	8d 7f       	andi	r24, 0xFD	; 253
    21ba:	88 83       	st	Y, r24
    21bc:	e1 e8       	ldi	r30, 0x81	; 129
    21be:	f0 e0       	ldi	r31, 0x00	; 0
    21c0:	80 81       	ld	r24, Z
    21c2:	81 60       	ori	r24, 0x01	; 1
    21c4:	80 83       	st	Z, r24
    21c6:	88 e0       	ldi	r24, 0x08	; 8
    21c8:	df 91       	pop	r29
    21ca:	cf 91       	pop	r28
    21cc:	08 95       	ret

000021ce <__vector_20>:
    21ce:	1f 92       	push	r1
    21d0:	0f 92       	push	r0
    21d2:	0f b6       	in	r0, 0x3f	; 63
    21d4:	0f 92       	push	r0
    21d6:	11 24       	eor	r1, r1
    21d8:	0b b6       	in	r0, 0x3b	; 59
    21da:	0f 92       	push	r0
    21dc:	2f 93       	push	r18
    21de:	3f 93       	push	r19
    21e0:	4f 93       	push	r20
    21e2:	5f 93       	push	r21
    21e4:	6f 93       	push	r22
    21e6:	7f 93       	push	r23
    21e8:	8f 93       	push	r24
    21ea:	9f 93       	push	r25
    21ec:	af 93       	push	r26
    21ee:	bf 93       	push	r27
    21f0:	ef 93       	push	r30
    21f2:	ff 93       	push	r31
    21f4:	e0 91 7d 04 	lds	r30, 0x047D	; 0x80047d <tc_tccr1_ovf_callback>
    21f8:	f0 91 7e 04 	lds	r31, 0x047E	; 0x80047e <tc_tccr1_ovf_callback+0x1>
    21fc:	30 97       	sbiw	r30, 0x00	; 0
    21fe:	09 f0       	breq	.+2      	; 0x2202 <__vector_20+0x34>
    2200:	19 95       	eicall
    2202:	ff 91       	pop	r31
    2204:	ef 91       	pop	r30
    2206:	bf 91       	pop	r27
    2208:	af 91       	pop	r26
    220a:	9f 91       	pop	r25
    220c:	8f 91       	pop	r24
    220e:	7f 91       	pop	r23
    2210:	6f 91       	pop	r22
    2212:	5f 91       	pop	r21
    2214:	4f 91       	pop	r20
    2216:	3f 91       	pop	r19
    2218:	2f 91       	pop	r18
    221a:	0f 90       	pop	r0
    221c:	0b be       	out	0x3b, r0	; 59
    221e:	0f 90       	pop	r0
    2220:	0f be       	out	0x3f, r0	; 63
    2222:	0f 90       	pop	r0
    2224:	1f 90       	pop	r1
    2226:	18 95       	reti

00002228 <__vector_17>:
    2228:	1f 92       	push	r1
    222a:	0f 92       	push	r0
    222c:	0f b6       	in	r0, 0x3f	; 63
    222e:	0f 92       	push	r0
    2230:	11 24       	eor	r1, r1
    2232:	0b b6       	in	r0, 0x3b	; 59
    2234:	0f 92       	push	r0
    2236:	2f 93       	push	r18
    2238:	3f 93       	push	r19
    223a:	4f 93       	push	r20
    223c:	5f 93       	push	r21
    223e:	6f 93       	push	r22
    2240:	7f 93       	push	r23
    2242:	8f 93       	push	r24
    2244:	9f 93       	push	r25
    2246:	af 93       	push	r26
    2248:	bf 93       	push	r27
    224a:	ef 93       	push	r30
    224c:	ff 93       	push	r31
    224e:	e0 91 7b 04 	lds	r30, 0x047B	; 0x80047b <tc_tccr1_compa_callback>
    2252:	f0 91 7c 04 	lds	r31, 0x047C	; 0x80047c <tc_tccr1_compa_callback+0x1>
    2256:	30 97       	sbiw	r30, 0x00	; 0
    2258:	09 f0       	breq	.+2      	; 0x225c <__vector_17+0x34>
    225a:	19 95       	eicall
    225c:	ff 91       	pop	r31
    225e:	ef 91       	pop	r30
    2260:	bf 91       	pop	r27
    2262:	af 91       	pop	r26
    2264:	9f 91       	pop	r25
    2266:	8f 91       	pop	r24
    2268:	7f 91       	pop	r23
    226a:	6f 91       	pop	r22
    226c:	5f 91       	pop	r21
    226e:	4f 91       	pop	r20
    2270:	3f 91       	pop	r19
    2272:	2f 91       	pop	r18
    2274:	0f 90       	pop	r0
    2276:	0b be       	out	0x3b, r0	; 59
    2278:	0f 90       	pop	r0
    227a:	0f be       	out	0x3f, r0	; 63
    227c:	0f 90       	pop	r0
    227e:	1f 90       	pop	r1
    2280:	18 95       	reti

00002282 <__vector_18>:
    2282:	1f 92       	push	r1
    2284:	0f 92       	push	r0
    2286:	0f b6       	in	r0, 0x3f	; 63
    2288:	0f 92       	push	r0
    228a:	11 24       	eor	r1, r1
    228c:	0b b6       	in	r0, 0x3b	; 59
    228e:	0f 92       	push	r0
    2290:	2f 93       	push	r18
    2292:	3f 93       	push	r19
    2294:	4f 93       	push	r20
    2296:	5f 93       	push	r21
    2298:	6f 93       	push	r22
    229a:	7f 93       	push	r23
    229c:	8f 93       	push	r24
    229e:	9f 93       	push	r25
    22a0:	af 93       	push	r26
    22a2:	bf 93       	push	r27
    22a4:	ef 93       	push	r30
    22a6:	ff 93       	push	r31
    22a8:	e0 91 79 04 	lds	r30, 0x0479	; 0x800479 <tc_tccr1_compb_callback>
    22ac:	f0 91 7a 04 	lds	r31, 0x047A	; 0x80047a <tc_tccr1_compb_callback+0x1>
    22b0:	30 97       	sbiw	r30, 0x00	; 0
    22b2:	09 f0       	breq	.+2      	; 0x22b6 <__vector_18+0x34>
    22b4:	19 95       	eicall
    22b6:	ff 91       	pop	r31
    22b8:	ef 91       	pop	r30
    22ba:	bf 91       	pop	r27
    22bc:	af 91       	pop	r26
    22be:	9f 91       	pop	r25
    22c0:	8f 91       	pop	r24
    22c2:	7f 91       	pop	r23
    22c4:	6f 91       	pop	r22
    22c6:	5f 91       	pop	r21
    22c8:	4f 91       	pop	r20
    22ca:	3f 91       	pop	r19
    22cc:	2f 91       	pop	r18
    22ce:	0f 90       	pop	r0
    22d0:	0b be       	out	0x3b, r0	; 59
    22d2:	0f 90       	pop	r0
    22d4:	0f be       	out	0x3f, r0	; 63
    22d6:	0f 90       	pop	r0
    22d8:	1f 90       	pop	r1
    22da:	18 95       	reti

000022dc <__vector_19>:
    22dc:	1f 92       	push	r1
    22de:	0f 92       	push	r0
    22e0:	0f b6       	in	r0, 0x3f	; 63
    22e2:	0f 92       	push	r0
    22e4:	11 24       	eor	r1, r1
    22e6:	0b b6       	in	r0, 0x3b	; 59
    22e8:	0f 92       	push	r0
    22ea:	2f 93       	push	r18
    22ec:	3f 93       	push	r19
    22ee:	4f 93       	push	r20
    22f0:	5f 93       	push	r21
    22f2:	6f 93       	push	r22
    22f4:	7f 93       	push	r23
    22f6:	8f 93       	push	r24
    22f8:	9f 93       	push	r25
    22fa:	af 93       	push	r26
    22fc:	bf 93       	push	r27
    22fe:	ef 93       	push	r30
    2300:	ff 93       	push	r31
    2302:	e0 91 77 04 	lds	r30, 0x0477	; 0x800477 <tc_tccr1_compc_callback>
    2306:	f0 91 78 04 	lds	r31, 0x0478	; 0x800478 <tc_tccr1_compc_callback+0x1>
    230a:	30 97       	sbiw	r30, 0x00	; 0
    230c:	09 f0       	breq	.+2      	; 0x2310 <__vector_19+0x34>
    230e:	19 95       	eicall
    2310:	ff 91       	pop	r31
    2312:	ef 91       	pop	r30
    2314:	bf 91       	pop	r27
    2316:	af 91       	pop	r26
    2318:	9f 91       	pop	r25
    231a:	8f 91       	pop	r24
    231c:	7f 91       	pop	r23
    231e:	6f 91       	pop	r22
    2320:	5f 91       	pop	r21
    2322:	4f 91       	pop	r20
    2324:	3f 91       	pop	r19
    2326:	2f 91       	pop	r18
    2328:	0f 90       	pop	r0
    232a:	0b be       	out	0x3b, r0	; 59
    232c:	0f 90       	pop	r0
    232e:	0f be       	out	0x3f, r0	; 63
    2330:	0f 90       	pop	r0
    2332:	1f 90       	pop	r1
    2334:	18 95       	reti

00002336 <__vector_35>:
    2336:	1f 92       	push	r1
    2338:	0f 92       	push	r0
    233a:	0f b6       	in	r0, 0x3f	; 63
    233c:	0f 92       	push	r0
    233e:	11 24       	eor	r1, r1
    2340:	0b b6       	in	r0, 0x3b	; 59
    2342:	0f 92       	push	r0
    2344:	2f 93       	push	r18
    2346:	3f 93       	push	r19
    2348:	4f 93       	push	r20
    234a:	5f 93       	push	r21
    234c:	6f 93       	push	r22
    234e:	7f 93       	push	r23
    2350:	8f 93       	push	r24
    2352:	9f 93       	push	r25
    2354:	af 93       	push	r26
    2356:	bf 93       	push	r27
    2358:	ef 93       	push	r30
    235a:	ff 93       	push	r31
    235c:	e0 91 75 04 	lds	r30, 0x0475	; 0x800475 <tc_tccr3_ovf_callback>
    2360:	f0 91 76 04 	lds	r31, 0x0476	; 0x800476 <tc_tccr3_ovf_callback+0x1>
    2364:	30 97       	sbiw	r30, 0x00	; 0
    2366:	09 f0       	breq	.+2      	; 0x236a <__vector_35+0x34>
    2368:	19 95       	eicall
    236a:	ff 91       	pop	r31
    236c:	ef 91       	pop	r30
    236e:	bf 91       	pop	r27
    2370:	af 91       	pop	r26
    2372:	9f 91       	pop	r25
    2374:	8f 91       	pop	r24
    2376:	7f 91       	pop	r23
    2378:	6f 91       	pop	r22
    237a:	5f 91       	pop	r21
    237c:	4f 91       	pop	r20
    237e:	3f 91       	pop	r19
    2380:	2f 91       	pop	r18
    2382:	0f 90       	pop	r0
    2384:	0b be       	out	0x3b, r0	; 59
    2386:	0f 90       	pop	r0
    2388:	0f be       	out	0x3f, r0	; 63
    238a:	0f 90       	pop	r0
    238c:	1f 90       	pop	r1
    238e:	18 95       	reti

00002390 <__vector_32>:
    2390:	1f 92       	push	r1
    2392:	0f 92       	push	r0
    2394:	0f b6       	in	r0, 0x3f	; 63
    2396:	0f 92       	push	r0
    2398:	11 24       	eor	r1, r1
    239a:	0b b6       	in	r0, 0x3b	; 59
    239c:	0f 92       	push	r0
    239e:	2f 93       	push	r18
    23a0:	3f 93       	push	r19
    23a2:	4f 93       	push	r20
    23a4:	5f 93       	push	r21
    23a6:	6f 93       	push	r22
    23a8:	7f 93       	push	r23
    23aa:	8f 93       	push	r24
    23ac:	9f 93       	push	r25
    23ae:	af 93       	push	r26
    23b0:	bf 93       	push	r27
    23b2:	ef 93       	push	r30
    23b4:	ff 93       	push	r31
    23b6:	e0 91 73 04 	lds	r30, 0x0473	; 0x800473 <tc_tccr3_compa_callback>
    23ba:	f0 91 74 04 	lds	r31, 0x0474	; 0x800474 <tc_tccr3_compa_callback+0x1>
    23be:	30 97       	sbiw	r30, 0x00	; 0
    23c0:	09 f0       	breq	.+2      	; 0x23c4 <__vector_32+0x34>
    23c2:	19 95       	eicall
    23c4:	ff 91       	pop	r31
    23c6:	ef 91       	pop	r30
    23c8:	bf 91       	pop	r27
    23ca:	af 91       	pop	r26
    23cc:	9f 91       	pop	r25
    23ce:	8f 91       	pop	r24
    23d0:	7f 91       	pop	r23
    23d2:	6f 91       	pop	r22
    23d4:	5f 91       	pop	r21
    23d6:	4f 91       	pop	r20
    23d8:	3f 91       	pop	r19
    23da:	2f 91       	pop	r18
    23dc:	0f 90       	pop	r0
    23de:	0b be       	out	0x3b, r0	; 59
    23e0:	0f 90       	pop	r0
    23e2:	0f be       	out	0x3f, r0	; 63
    23e4:	0f 90       	pop	r0
    23e6:	1f 90       	pop	r1
    23e8:	18 95       	reti

000023ea <__vector_33>:
    23ea:	1f 92       	push	r1
    23ec:	0f 92       	push	r0
    23ee:	0f b6       	in	r0, 0x3f	; 63
    23f0:	0f 92       	push	r0
    23f2:	11 24       	eor	r1, r1
    23f4:	0b b6       	in	r0, 0x3b	; 59
    23f6:	0f 92       	push	r0
    23f8:	2f 93       	push	r18
    23fa:	3f 93       	push	r19
    23fc:	4f 93       	push	r20
    23fe:	5f 93       	push	r21
    2400:	6f 93       	push	r22
    2402:	7f 93       	push	r23
    2404:	8f 93       	push	r24
    2406:	9f 93       	push	r25
    2408:	af 93       	push	r26
    240a:	bf 93       	push	r27
    240c:	ef 93       	push	r30
    240e:	ff 93       	push	r31
    2410:	e0 91 71 04 	lds	r30, 0x0471	; 0x800471 <tc_tccr3_compb_callback>
    2414:	f0 91 72 04 	lds	r31, 0x0472	; 0x800472 <tc_tccr3_compb_callback+0x1>
    2418:	30 97       	sbiw	r30, 0x00	; 0
    241a:	09 f0       	breq	.+2      	; 0x241e <__vector_33+0x34>
    241c:	19 95       	eicall
    241e:	ff 91       	pop	r31
    2420:	ef 91       	pop	r30
    2422:	bf 91       	pop	r27
    2424:	af 91       	pop	r26
    2426:	9f 91       	pop	r25
    2428:	8f 91       	pop	r24
    242a:	7f 91       	pop	r23
    242c:	6f 91       	pop	r22
    242e:	5f 91       	pop	r21
    2430:	4f 91       	pop	r20
    2432:	3f 91       	pop	r19
    2434:	2f 91       	pop	r18
    2436:	0f 90       	pop	r0
    2438:	0b be       	out	0x3b, r0	; 59
    243a:	0f 90       	pop	r0
    243c:	0f be       	out	0x3f, r0	; 63
    243e:	0f 90       	pop	r0
    2440:	1f 90       	pop	r1
    2442:	18 95       	reti

00002444 <__vector_34>:
    2444:	1f 92       	push	r1
    2446:	0f 92       	push	r0
    2448:	0f b6       	in	r0, 0x3f	; 63
    244a:	0f 92       	push	r0
    244c:	11 24       	eor	r1, r1
    244e:	0b b6       	in	r0, 0x3b	; 59
    2450:	0f 92       	push	r0
    2452:	2f 93       	push	r18
    2454:	3f 93       	push	r19
    2456:	4f 93       	push	r20
    2458:	5f 93       	push	r21
    245a:	6f 93       	push	r22
    245c:	7f 93       	push	r23
    245e:	8f 93       	push	r24
    2460:	9f 93       	push	r25
    2462:	af 93       	push	r26
    2464:	bf 93       	push	r27
    2466:	ef 93       	push	r30
    2468:	ff 93       	push	r31
    246a:	e0 91 6f 04 	lds	r30, 0x046F	; 0x80046f <tc_tccr3_compc_callback>
    246e:	f0 91 70 04 	lds	r31, 0x0470	; 0x800470 <tc_tccr3_compc_callback+0x1>
    2472:	30 97       	sbiw	r30, 0x00	; 0
    2474:	09 f0       	breq	.+2      	; 0x2478 <__vector_34+0x34>
    2476:	19 95       	eicall
    2478:	ff 91       	pop	r31
    247a:	ef 91       	pop	r30
    247c:	bf 91       	pop	r27
    247e:	af 91       	pop	r26
    2480:	9f 91       	pop	r25
    2482:	8f 91       	pop	r24
    2484:	7f 91       	pop	r23
    2486:	6f 91       	pop	r22
    2488:	5f 91       	pop	r21
    248a:	4f 91       	pop	r20
    248c:	3f 91       	pop	r19
    248e:	2f 91       	pop	r18
    2490:	0f 90       	pop	r0
    2492:	0b be       	out	0x3b, r0	; 59
    2494:	0f 90       	pop	r0
    2496:	0f be       	out	0x3f, r0	; 63
    2498:	0f 90       	pop	r0
    249a:	1f 90       	pop	r1
    249c:	18 95       	reti

0000249e <__vector_45>:
    249e:	1f 92       	push	r1
    24a0:	0f 92       	push	r0
    24a2:	0f b6       	in	r0, 0x3f	; 63
    24a4:	0f 92       	push	r0
    24a6:	11 24       	eor	r1, r1
    24a8:	0b b6       	in	r0, 0x3b	; 59
    24aa:	0f 92       	push	r0
    24ac:	2f 93       	push	r18
    24ae:	3f 93       	push	r19
    24b0:	4f 93       	push	r20
    24b2:	5f 93       	push	r21
    24b4:	6f 93       	push	r22
    24b6:	7f 93       	push	r23
    24b8:	8f 93       	push	r24
    24ba:	9f 93       	push	r25
    24bc:	af 93       	push	r26
    24be:	bf 93       	push	r27
    24c0:	ef 93       	push	r30
    24c2:	ff 93       	push	r31
    24c4:	e0 91 6d 04 	lds	r30, 0x046D	; 0x80046d <tc_tccr4_ovf_callback>
    24c8:	f0 91 6e 04 	lds	r31, 0x046E	; 0x80046e <tc_tccr4_ovf_callback+0x1>
    24cc:	30 97       	sbiw	r30, 0x00	; 0
    24ce:	09 f0       	breq	.+2      	; 0x24d2 <__vector_45+0x34>
    24d0:	19 95       	eicall
    24d2:	ff 91       	pop	r31
    24d4:	ef 91       	pop	r30
    24d6:	bf 91       	pop	r27
    24d8:	af 91       	pop	r26
    24da:	9f 91       	pop	r25
    24dc:	8f 91       	pop	r24
    24de:	7f 91       	pop	r23
    24e0:	6f 91       	pop	r22
    24e2:	5f 91       	pop	r21
    24e4:	4f 91       	pop	r20
    24e6:	3f 91       	pop	r19
    24e8:	2f 91       	pop	r18
    24ea:	0f 90       	pop	r0
    24ec:	0b be       	out	0x3b, r0	; 59
    24ee:	0f 90       	pop	r0
    24f0:	0f be       	out	0x3f, r0	; 63
    24f2:	0f 90       	pop	r0
    24f4:	1f 90       	pop	r1
    24f6:	18 95       	reti

000024f8 <__vector_42>:
    24f8:	1f 92       	push	r1
    24fa:	0f 92       	push	r0
    24fc:	0f b6       	in	r0, 0x3f	; 63
    24fe:	0f 92       	push	r0
    2500:	11 24       	eor	r1, r1
    2502:	0b b6       	in	r0, 0x3b	; 59
    2504:	0f 92       	push	r0
    2506:	2f 93       	push	r18
    2508:	3f 93       	push	r19
    250a:	4f 93       	push	r20
    250c:	5f 93       	push	r21
    250e:	6f 93       	push	r22
    2510:	7f 93       	push	r23
    2512:	8f 93       	push	r24
    2514:	9f 93       	push	r25
    2516:	af 93       	push	r26
    2518:	bf 93       	push	r27
    251a:	ef 93       	push	r30
    251c:	ff 93       	push	r31
    251e:	e0 91 6b 04 	lds	r30, 0x046B	; 0x80046b <tc_tccr4_compa_callback>
    2522:	f0 91 6c 04 	lds	r31, 0x046C	; 0x80046c <tc_tccr4_compa_callback+0x1>
    2526:	30 97       	sbiw	r30, 0x00	; 0
    2528:	09 f0       	breq	.+2      	; 0x252c <__vector_42+0x34>
    252a:	19 95       	eicall
    252c:	ff 91       	pop	r31
    252e:	ef 91       	pop	r30
    2530:	bf 91       	pop	r27
    2532:	af 91       	pop	r26
    2534:	9f 91       	pop	r25
    2536:	8f 91       	pop	r24
    2538:	7f 91       	pop	r23
    253a:	6f 91       	pop	r22
    253c:	5f 91       	pop	r21
    253e:	4f 91       	pop	r20
    2540:	3f 91       	pop	r19
    2542:	2f 91       	pop	r18
    2544:	0f 90       	pop	r0
    2546:	0b be       	out	0x3b, r0	; 59
    2548:	0f 90       	pop	r0
    254a:	0f be       	out	0x3f, r0	; 63
    254c:	0f 90       	pop	r0
    254e:	1f 90       	pop	r1
    2550:	18 95       	reti

00002552 <__vector_43>:
    2552:	1f 92       	push	r1
    2554:	0f 92       	push	r0
    2556:	0f b6       	in	r0, 0x3f	; 63
    2558:	0f 92       	push	r0
    255a:	11 24       	eor	r1, r1
    255c:	0b b6       	in	r0, 0x3b	; 59
    255e:	0f 92       	push	r0
    2560:	2f 93       	push	r18
    2562:	3f 93       	push	r19
    2564:	4f 93       	push	r20
    2566:	5f 93       	push	r21
    2568:	6f 93       	push	r22
    256a:	7f 93       	push	r23
    256c:	8f 93       	push	r24
    256e:	9f 93       	push	r25
    2570:	af 93       	push	r26
    2572:	bf 93       	push	r27
    2574:	ef 93       	push	r30
    2576:	ff 93       	push	r31
    2578:	e0 91 69 04 	lds	r30, 0x0469	; 0x800469 <tc_tccr4_compb_callback>
    257c:	f0 91 6a 04 	lds	r31, 0x046A	; 0x80046a <tc_tccr4_compb_callback+0x1>
    2580:	30 97       	sbiw	r30, 0x00	; 0
    2582:	09 f0       	breq	.+2      	; 0x2586 <__vector_43+0x34>
    2584:	19 95       	eicall
    2586:	ff 91       	pop	r31
    2588:	ef 91       	pop	r30
    258a:	bf 91       	pop	r27
    258c:	af 91       	pop	r26
    258e:	9f 91       	pop	r25
    2590:	8f 91       	pop	r24
    2592:	7f 91       	pop	r23
    2594:	6f 91       	pop	r22
    2596:	5f 91       	pop	r21
    2598:	4f 91       	pop	r20
    259a:	3f 91       	pop	r19
    259c:	2f 91       	pop	r18
    259e:	0f 90       	pop	r0
    25a0:	0b be       	out	0x3b, r0	; 59
    25a2:	0f 90       	pop	r0
    25a4:	0f be       	out	0x3f, r0	; 63
    25a6:	0f 90       	pop	r0
    25a8:	1f 90       	pop	r1
    25aa:	18 95       	reti

000025ac <__vector_44>:
    25ac:	1f 92       	push	r1
    25ae:	0f 92       	push	r0
    25b0:	0f b6       	in	r0, 0x3f	; 63
    25b2:	0f 92       	push	r0
    25b4:	11 24       	eor	r1, r1
    25b6:	0b b6       	in	r0, 0x3b	; 59
    25b8:	0f 92       	push	r0
    25ba:	2f 93       	push	r18
    25bc:	3f 93       	push	r19
    25be:	4f 93       	push	r20
    25c0:	5f 93       	push	r21
    25c2:	6f 93       	push	r22
    25c4:	7f 93       	push	r23
    25c6:	8f 93       	push	r24
    25c8:	9f 93       	push	r25
    25ca:	af 93       	push	r26
    25cc:	bf 93       	push	r27
    25ce:	ef 93       	push	r30
    25d0:	ff 93       	push	r31
    25d2:	e0 91 67 04 	lds	r30, 0x0467	; 0x800467 <tc_tccr4_compc_callback>
    25d6:	f0 91 68 04 	lds	r31, 0x0468	; 0x800468 <tc_tccr4_compc_callback+0x1>
    25da:	30 97       	sbiw	r30, 0x00	; 0
    25dc:	09 f0       	breq	.+2      	; 0x25e0 <__vector_44+0x34>
    25de:	19 95       	eicall
    25e0:	ff 91       	pop	r31
    25e2:	ef 91       	pop	r30
    25e4:	bf 91       	pop	r27
    25e6:	af 91       	pop	r26
    25e8:	9f 91       	pop	r25
    25ea:	8f 91       	pop	r24
    25ec:	7f 91       	pop	r23
    25ee:	6f 91       	pop	r22
    25f0:	5f 91       	pop	r21
    25f2:	4f 91       	pop	r20
    25f4:	3f 91       	pop	r19
    25f6:	2f 91       	pop	r18
    25f8:	0f 90       	pop	r0
    25fa:	0b be       	out	0x3b, r0	; 59
    25fc:	0f 90       	pop	r0
    25fe:	0f be       	out	0x3f, r0	; 63
    2600:	0f 90       	pop	r0
    2602:	1f 90       	pop	r1
    2604:	18 95       	reti

00002606 <__vector_50>:
    2606:	1f 92       	push	r1
    2608:	0f 92       	push	r0
    260a:	0f b6       	in	r0, 0x3f	; 63
    260c:	0f 92       	push	r0
    260e:	11 24       	eor	r1, r1
    2610:	0b b6       	in	r0, 0x3b	; 59
    2612:	0f 92       	push	r0
    2614:	2f 93       	push	r18
    2616:	3f 93       	push	r19
    2618:	4f 93       	push	r20
    261a:	5f 93       	push	r21
    261c:	6f 93       	push	r22
    261e:	7f 93       	push	r23
    2620:	8f 93       	push	r24
    2622:	9f 93       	push	r25
    2624:	af 93       	push	r26
    2626:	bf 93       	push	r27
    2628:	ef 93       	push	r30
    262a:	ff 93       	push	r31
    262c:	e0 91 65 04 	lds	r30, 0x0465	; 0x800465 <tc_tccr5_ovf_callback>
    2630:	f0 91 66 04 	lds	r31, 0x0466	; 0x800466 <tc_tccr5_ovf_callback+0x1>
    2634:	30 97       	sbiw	r30, 0x00	; 0
    2636:	09 f0       	breq	.+2      	; 0x263a <__vector_50+0x34>
    2638:	19 95       	eicall
    263a:	ff 91       	pop	r31
    263c:	ef 91       	pop	r30
    263e:	bf 91       	pop	r27
    2640:	af 91       	pop	r26
    2642:	9f 91       	pop	r25
    2644:	8f 91       	pop	r24
    2646:	7f 91       	pop	r23
    2648:	6f 91       	pop	r22
    264a:	5f 91       	pop	r21
    264c:	4f 91       	pop	r20
    264e:	3f 91       	pop	r19
    2650:	2f 91       	pop	r18
    2652:	0f 90       	pop	r0
    2654:	0b be       	out	0x3b, r0	; 59
    2656:	0f 90       	pop	r0
    2658:	0f be       	out	0x3f, r0	; 63
    265a:	0f 90       	pop	r0
    265c:	1f 90       	pop	r1
    265e:	18 95       	reti

00002660 <__vector_47>:
    2660:	1f 92       	push	r1
    2662:	0f 92       	push	r0
    2664:	0f b6       	in	r0, 0x3f	; 63
    2666:	0f 92       	push	r0
    2668:	11 24       	eor	r1, r1
    266a:	0b b6       	in	r0, 0x3b	; 59
    266c:	0f 92       	push	r0
    266e:	2f 93       	push	r18
    2670:	3f 93       	push	r19
    2672:	4f 93       	push	r20
    2674:	5f 93       	push	r21
    2676:	6f 93       	push	r22
    2678:	7f 93       	push	r23
    267a:	8f 93       	push	r24
    267c:	9f 93       	push	r25
    267e:	af 93       	push	r26
    2680:	bf 93       	push	r27
    2682:	ef 93       	push	r30
    2684:	ff 93       	push	r31
    2686:	e0 91 63 04 	lds	r30, 0x0463	; 0x800463 <tc_tccr5_compa_callback>
    268a:	f0 91 64 04 	lds	r31, 0x0464	; 0x800464 <tc_tccr5_compa_callback+0x1>
    268e:	30 97       	sbiw	r30, 0x00	; 0
    2690:	09 f0       	breq	.+2      	; 0x2694 <__vector_47+0x34>
    2692:	19 95       	eicall
    2694:	ff 91       	pop	r31
    2696:	ef 91       	pop	r30
    2698:	bf 91       	pop	r27
    269a:	af 91       	pop	r26
    269c:	9f 91       	pop	r25
    269e:	8f 91       	pop	r24
    26a0:	7f 91       	pop	r23
    26a2:	6f 91       	pop	r22
    26a4:	5f 91       	pop	r21
    26a6:	4f 91       	pop	r20
    26a8:	3f 91       	pop	r19
    26aa:	2f 91       	pop	r18
    26ac:	0f 90       	pop	r0
    26ae:	0b be       	out	0x3b, r0	; 59
    26b0:	0f 90       	pop	r0
    26b2:	0f be       	out	0x3f, r0	; 63
    26b4:	0f 90       	pop	r0
    26b6:	1f 90       	pop	r1
    26b8:	18 95       	reti

000026ba <__vector_48>:
    26ba:	1f 92       	push	r1
    26bc:	0f 92       	push	r0
    26be:	0f b6       	in	r0, 0x3f	; 63
    26c0:	0f 92       	push	r0
    26c2:	11 24       	eor	r1, r1
    26c4:	0b b6       	in	r0, 0x3b	; 59
    26c6:	0f 92       	push	r0
    26c8:	2f 93       	push	r18
    26ca:	3f 93       	push	r19
    26cc:	4f 93       	push	r20
    26ce:	5f 93       	push	r21
    26d0:	6f 93       	push	r22
    26d2:	7f 93       	push	r23
    26d4:	8f 93       	push	r24
    26d6:	9f 93       	push	r25
    26d8:	af 93       	push	r26
    26da:	bf 93       	push	r27
    26dc:	ef 93       	push	r30
    26de:	ff 93       	push	r31
    26e0:	e0 91 61 04 	lds	r30, 0x0461	; 0x800461 <tc_tccr5_compb_callback>
    26e4:	f0 91 62 04 	lds	r31, 0x0462	; 0x800462 <tc_tccr5_compb_callback+0x1>
    26e8:	30 97       	sbiw	r30, 0x00	; 0
    26ea:	09 f0       	breq	.+2      	; 0x26ee <__vector_48+0x34>
    26ec:	19 95       	eicall
    26ee:	ff 91       	pop	r31
    26f0:	ef 91       	pop	r30
    26f2:	bf 91       	pop	r27
    26f4:	af 91       	pop	r26
    26f6:	9f 91       	pop	r25
    26f8:	8f 91       	pop	r24
    26fa:	7f 91       	pop	r23
    26fc:	6f 91       	pop	r22
    26fe:	5f 91       	pop	r21
    2700:	4f 91       	pop	r20
    2702:	3f 91       	pop	r19
    2704:	2f 91       	pop	r18
    2706:	0f 90       	pop	r0
    2708:	0b be       	out	0x3b, r0	; 59
    270a:	0f 90       	pop	r0
    270c:	0f be       	out	0x3f, r0	; 63
    270e:	0f 90       	pop	r0
    2710:	1f 90       	pop	r1
    2712:	18 95       	reti

00002714 <__vector_49>:
    2714:	1f 92       	push	r1
    2716:	0f 92       	push	r0
    2718:	0f b6       	in	r0, 0x3f	; 63
    271a:	0f 92       	push	r0
    271c:	11 24       	eor	r1, r1
    271e:	0b b6       	in	r0, 0x3b	; 59
    2720:	0f 92       	push	r0
    2722:	2f 93       	push	r18
    2724:	3f 93       	push	r19
    2726:	4f 93       	push	r20
    2728:	5f 93       	push	r21
    272a:	6f 93       	push	r22
    272c:	7f 93       	push	r23
    272e:	8f 93       	push	r24
    2730:	9f 93       	push	r25
    2732:	af 93       	push	r26
    2734:	bf 93       	push	r27
    2736:	ef 93       	push	r30
    2738:	ff 93       	push	r31
    273a:	e0 91 5f 04 	lds	r30, 0x045F	; 0x80045f <tc_tccr5_compc_callback>
    273e:	f0 91 60 04 	lds	r31, 0x0460	; 0x800460 <tc_tccr5_compc_callback+0x1>
    2742:	30 97       	sbiw	r30, 0x00	; 0
    2744:	09 f0       	breq	.+2      	; 0x2748 <__vector_49+0x34>
    2746:	19 95       	eicall
    2748:	ff 91       	pop	r31
    274a:	ef 91       	pop	r30
    274c:	bf 91       	pop	r27
    274e:	af 91       	pop	r26
    2750:	9f 91       	pop	r25
    2752:	8f 91       	pop	r24
    2754:	7f 91       	pop	r23
    2756:	6f 91       	pop	r22
    2758:	5f 91       	pop	r21
    275a:	4f 91       	pop	r20
    275c:	3f 91       	pop	r19
    275e:	2f 91       	pop	r18
    2760:	0f 90       	pop	r0
    2762:	0b be       	out	0x3b, r0	; 59
    2764:	0f 90       	pop	r0
    2766:	0f be       	out	0x3f, r0	; 63
    2768:	0f 90       	pop	r0
    276a:	1f 90       	pop	r1
    276c:	18 95       	reti

0000276e <tc_enable>:
    276e:	1f 93       	push	r17
    2770:	cf 93       	push	r28
    2772:	df 93       	push	r29
    2774:	1f 92       	push	r1
    2776:	cd b7       	in	r28, 0x3d	; 61
    2778:	de b7       	in	r29, 0x3e	; 62
    277a:	2f b7       	in	r18, 0x3f	; 63
    277c:	29 83       	std	Y+1, r18	; 0x01
    277e:	f8 94       	cli
    2780:	19 81       	ldd	r17, Y+1	; 0x01
    2782:	00 97       	sbiw	r24, 0x00	; 0
    2784:	09 f4       	brne	.+2      	; 0x2788 <tc_enable+0x1a>
    2786:	64 c0       	rjmp	.+200    	; 0x2850 <tc_enable+0xe2>
    2788:	88 37       	cpi	r24, 0x78	; 120
    278a:	91 05       	cpc	r25, r1
    278c:	49 f4       	brne	.+18     	; 0x27a0 <tc_enable+0x32>
    278e:	61 e0       	ldi	r22, 0x01	; 1
    2790:	80 e0       	ldi	r24, 0x00	; 0
    2792:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    2796:	60 e1       	ldi	r22, 0x10	; 16
    2798:	80 e0       	ldi	r24, 0x00	; 0
    279a:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    279e:	58 c0       	rjmp	.+176    	; 0x2850 <tc_enable+0xe2>
    27a0:	80 3c       	cpi	r24, 0xC0	; 192
    27a2:	91 05       	cpc	r25, r1
    27a4:	29 f4       	brne	.+10     	; 0x27b0 <tc_enable+0x42>
    27a6:	62 e0       	ldi	r22, 0x02	; 2
    27a8:	80 e0       	ldi	r24, 0x00	; 0
    27aa:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    27ae:	50 c0       	rjmp	.+160    	; 0x2850 <tc_enable+0xe2>
    27b0:	8c 34       	cpi	r24, 0x4C	; 76
    27b2:	91 05       	cpc	r25, r1
    27b4:	29 f4       	brne	.+10     	; 0x27c0 <tc_enable+0x52>
    27b6:	64 e0       	ldi	r22, 0x04	; 4
    27b8:	80 e0       	ldi	r24, 0x00	; 0
    27ba:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    27be:	48 c0       	rjmp	.+144    	; 0x2850 <tc_enable+0xe2>
    27c0:	80 38       	cpi	r24, 0x80	; 128
    27c2:	91 05       	cpc	r25, r1
    27c4:	29 f4       	brne	.+10     	; 0x27d0 <tc_enable+0x62>
    27c6:	68 e0       	ldi	r22, 0x08	; 8
    27c8:	80 e0       	ldi	r24, 0x00	; 0
    27ca:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    27ce:	40 c0       	rjmp	.+128    	; 0x2850 <tc_enable+0xe2>
    27d0:	84 34       	cpi	r24, 0x44	; 68
    27d2:	91 05       	cpc	r25, r1
    27d4:	29 f4       	brne	.+10     	; 0x27e0 <tc_enable+0x72>
    27d6:	60 e2       	ldi	r22, 0x20	; 32
    27d8:	80 e0       	ldi	r24, 0x00	; 0
    27da:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    27de:	38 c0       	rjmp	.+112    	; 0x2850 <tc_enable+0xe2>
    27e0:	80 3b       	cpi	r24, 0xB0	; 176
    27e2:	91 05       	cpc	r25, r1
    27e4:	29 f4       	brne	.+10     	; 0x27f0 <tc_enable+0x82>
    27e6:	60 e4       	ldi	r22, 0x40	; 64
    27e8:	80 e0       	ldi	r24, 0x00	; 0
    27ea:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    27ee:	30 c0       	rjmp	.+96     	; 0x2850 <tc_enable+0xe2>
    27f0:	88 3b       	cpi	r24, 0xB8	; 184
    27f2:	91 05       	cpc	r25, r1
    27f4:	29 f4       	brne	.+10     	; 0x2800 <tc_enable+0x92>
    27f6:	60 e8       	ldi	r22, 0x80	; 128
    27f8:	80 e0       	ldi	r24, 0x00	; 0
    27fa:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    27fe:	28 c0       	rjmp	.+80     	; 0x2850 <tc_enable+0xe2>
    2800:	88 3c       	cpi	r24, 0xC8	; 200
    2802:	91 05       	cpc	r25, r1
    2804:	29 f4       	brne	.+10     	; 0x2810 <tc_enable+0xa2>
    2806:	61 e0       	ldi	r22, 0x01	; 1
    2808:	81 e0       	ldi	r24, 0x01	; 1
    280a:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    280e:	20 c0       	rjmp	.+64     	; 0x2850 <tc_enable+0xe2>
    2810:	80 39       	cpi	r24, 0x90	; 144
    2812:	91 05       	cpc	r25, r1
    2814:	29 f4       	brne	.+10     	; 0x2820 <tc_enable+0xb2>
    2816:	68 e0       	ldi	r22, 0x08	; 8
    2818:	81 e0       	ldi	r24, 0x01	; 1
    281a:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    281e:	18 c0       	rjmp	.+48     	; 0x2850 <tc_enable+0xe2>
    2820:	80 3a       	cpi	r24, 0xA0	; 160
    2822:	91 05       	cpc	r25, r1
    2824:	29 f4       	brne	.+10     	; 0x2830 <tc_enable+0xc2>
    2826:	60 e1       	ldi	r22, 0x10	; 16
    2828:	81 e0       	ldi	r24, 0x01	; 1
    282a:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    282e:	10 c0       	rjmp	.+32     	; 0x2850 <tc_enable+0xe2>
    2830:	80 32       	cpi	r24, 0x20	; 32
    2832:	21 e0       	ldi	r18, 0x01	; 1
    2834:	92 07       	cpc	r25, r18
    2836:	29 f4       	brne	.+10     	; 0x2842 <tc_enable+0xd4>
    2838:	60 e2       	ldi	r22, 0x20	; 32
    283a:	81 e0       	ldi	r24, 0x01	; 1
    283c:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    2840:	07 c0       	rjmp	.+14     	; 0x2850 <tc_enable+0xe2>
    2842:	83 34       	cpi	r24, 0x43	; 67
    2844:	91 40       	sbci	r25, 0x01	; 1
    2846:	21 f4       	brne	.+8      	; 0x2850 <tc_enable+0xe2>
    2848:	60 e4       	ldi	r22, 0x40	; 64
    284a:	81 e0       	ldi	r24, 0x01	; 1
    284c:	0e 94 fe 04 	call	0x9fc	; 0x9fc <sysclk_enable_module>
    2850:	1f bf       	out	0x3f, r17	; 63
    2852:	0f 90       	pop	r0
    2854:	df 91       	pop	r29
    2856:	cf 91       	pop	r28
    2858:	1f 91       	pop	r17
    285a:	08 95       	ret

0000285c <tc_disable>:
    285c:	1f 93       	push	r17
    285e:	cf 93       	push	r28
    2860:	df 93       	push	r29
    2862:	1f 92       	push	r1
    2864:	cd b7       	in	r28, 0x3d	; 61
    2866:	de b7       	in	r29, 0x3e	; 62
    2868:	2f b7       	in	r18, 0x3f	; 63
    286a:	29 83       	std	Y+1, r18	; 0x01
    286c:	f8 94       	cli
    286e:	19 81       	ldd	r17, Y+1	; 0x01
    2870:	00 97       	sbiw	r24, 0x00	; 0
    2872:	09 f4       	brne	.+2      	; 0x2876 <tc_disable+0x1a>
    2874:	64 c0       	rjmp	.+200    	; 0x293e <tc_disable+0xe2>
    2876:	88 37       	cpi	r24, 0x78	; 120
    2878:	91 05       	cpc	r25, r1
    287a:	49 f4       	brne	.+18     	; 0x288e <tc_disable+0x32>
    287c:	61 e0       	ldi	r22, 0x01	; 1
    287e:	80 e0       	ldi	r24, 0x00	; 0
    2880:	0e 94 16 05 	call	0xa2c	; 0xa2c <sysclk_disable_module>
    2884:	60 e1       	ldi	r22, 0x10	; 16
    2886:	80 e0       	ldi	r24, 0x00	; 0
    2888:	0e 94 16 05 	call	0xa2c	; 0xa2c <sysclk_disable_module>
    288c:	58 c0       	rjmp	.+176    	; 0x293e <tc_disable+0xe2>
    288e:	80 3c       	cpi	r24, 0xC0	; 192
    2890:	91 05       	cpc	r25, r1
    2892:	29 f4       	brne	.+10     	; 0x289e <tc_disable+0x42>
    2894:	62 e0       	ldi	r22, 0x02	; 2
    2896:	80 e0       	ldi	r24, 0x00	; 0
    2898:	0e 94 16 05 	call	0xa2c	; 0xa2c <sysclk_disable_module>
    289c:	50 c0       	rjmp	.+160    	; 0x293e <tc_disable+0xe2>
    289e:	8c 34       	cpi	r24, 0x4C	; 76
    28a0:	91 05       	cpc	r25, r1
    28a2:	29 f4       	brne	.+10     	; 0x28ae <tc_disable+0x52>
    28a4:	64 e0       	ldi	r22, 0x04	; 4
    28a6:	80 e0       	ldi	r24, 0x00	; 0
    28a8:	0e 94 16 05 	call	0xa2c	; 0xa2c <sysclk_disable_module>
    28ac:	48 c0       	rjmp	.+144    	; 0x293e <tc_disable+0xe2>
    28ae:	80 38       	cpi	r24, 0x80	; 128
    28b0:	91 05       	cpc	r25, r1
    28b2:	29 f4       	brne	.+10     	; 0x28be <tc_disable+0x62>
    28b4:	68 e0       	ldi	r22, 0x08	; 8
    28b6:	80 e0       	ldi	r24, 0x00	; 0
    28b8:	0e 94 16 05 	call	0xa2c	; 0xa2c <sysclk_disable_module>
    28bc:	40 c0       	rjmp	.+128    	; 0x293e <tc_disable+0xe2>
    28be:	84 34       	cpi	r24, 0x44	; 68
    28c0:	91 05       	cpc	r25, r1
    28c2:	29 f4       	brne	.+10     	; 0x28ce <tc_disable+0x72>
    28c4:	60 e2       	ldi	r22, 0x20	; 32
    28c6:	80 e0       	ldi	r24, 0x00	; 0
    28c8:	0e 94 16 05 	call	0xa2c	; 0xa2c <sysclk_disable_module>
    28cc:	38 c0       	rjmp	.+112    	; 0x293e <tc_disable+0xe2>
    28ce:	80 3b       	cpi	r24, 0xB0	; 176
    28d0:	91 05       	cpc	r25, r1
    28d2:	29 f4       	brne	.+10     	; 0x28de <tc_disable+0x82>
    28d4:	60 e4       	ldi	r22, 0x40	; 64
    28d6:	80 e0       	ldi	r24, 0x00	; 0
    28d8:	0e 94 16 05 	call	0xa2c	; 0xa2c <sysclk_disable_module>
    28dc:	30 c0       	rjmp	.+96     	; 0x293e <tc_disable+0xe2>
    28de:	88 3b       	cpi	r24, 0xB8	; 184
    28e0:	91 05       	cpc	r25, r1
    28e2:	29 f4       	brne	.+10     	; 0x28ee <tc_disable+0x92>
    28e4:	60 e8       	ldi	r22, 0x80	; 128
    28e6:	80 e0       	ldi	r24, 0x00	; 0
    28e8:	0e 94 16 05 	call	0xa2c	; 0xa2c <sysclk_disable_module>
    28ec:	28 c0       	rjmp	.+80     	; 0x293e <tc_disable+0xe2>
    28ee:	88 3c       	cpi	r24, 0xC8	; 200
    28f0:	91 05       	cpc	r25, r1
    28f2:	29 f4       	brne	.+10     	; 0x28fe <tc_disable+0xa2>
    28f4:	61 e0       	ldi	r22, 0x01	; 1
    28f6:	81 e0       	ldi	r24, 0x01	; 1
    28f8:	0e 94 16 05 	call	0xa2c	; 0xa2c <sysclk_disable_module>
    28fc:	20 c0       	rjmp	.+64     	; 0x293e <tc_disable+0xe2>
    28fe:	80 39       	cpi	r24, 0x90	; 144
    2900:	91 05       	cpc	r25, r1
    2902:	29 f4       	brne	.+10     	; 0x290e <tc_disable+0xb2>
    2904:	68 e0       	ldi	r22, 0x08	; 8
    2906:	81 e0       	ldi	r24, 0x01	; 1
    2908:	0e 94 16 05 	call	0xa2c	; 0xa2c <sysclk_disable_module>
    290c:	18 c0       	rjmp	.+48     	; 0x293e <tc_disable+0xe2>
    290e:	80 3a       	cpi	r24, 0xA0	; 160
    2910:	91 05       	cpc	r25, r1
    2912:	29 f4       	brne	.+10     	; 0x291e <tc_disable+0xc2>
    2914:	60 e1       	ldi	r22, 0x10	; 16
    2916:	81 e0       	ldi	r24, 0x01	; 1
    2918:	0e 94 16 05 	call	0xa2c	; 0xa2c <sysclk_disable_module>
    291c:	10 c0       	rjmp	.+32     	; 0x293e <tc_disable+0xe2>
    291e:	80 32       	cpi	r24, 0x20	; 32
    2920:	21 e0       	ldi	r18, 0x01	; 1
    2922:	92 07       	cpc	r25, r18
    2924:	29 f4       	brne	.+10     	; 0x2930 <tc_disable+0xd4>
    2926:	60 e2       	ldi	r22, 0x20	; 32
    2928:	81 e0       	ldi	r24, 0x01	; 1
    292a:	0e 94 16 05 	call	0xa2c	; 0xa2c <sysclk_disable_module>
    292e:	07 c0       	rjmp	.+14     	; 0x293e <tc_disable+0xe2>
    2930:	83 34       	cpi	r24, 0x43	; 67
    2932:	91 40       	sbci	r25, 0x01	; 1
    2934:	21 f4       	brne	.+8      	; 0x293e <tc_disable+0xe2>
    2936:	60 e4       	ldi	r22, 0x40	; 64
    2938:	81 e0       	ldi	r24, 0x01	; 1
    293a:	0e 94 16 05 	call	0xa2c	; 0xa2c <sysclk_disable_module>
    293e:	1f bf       	out	0x3f, r17	; 63
    2940:	0f 90       	pop	r0
    2942:	df 91       	pop	r29
    2944:	cf 91       	pop	r28
    2946:	1f 91       	pop	r17
    2948:	08 95       	ret

0000294a <tc_set_overflow_interrupt_callback>:
    294a:	80 38       	cpi	r24, 0x80	; 128
    294c:	91 05       	cpc	r25, r1
    294e:	29 f4       	brne	.+10     	; 0x295a <tc_set_overflow_interrupt_callback+0x10>
    2950:	70 93 7e 04 	sts	0x047E, r23	; 0x80047e <tc_tccr1_ovf_callback+0x1>
    2954:	60 93 7d 04 	sts	0x047D, r22	; 0x80047d <tc_tccr1_ovf_callback>
    2958:	08 95       	ret
    295a:	80 39       	cpi	r24, 0x90	; 144
    295c:	91 05       	cpc	r25, r1
    295e:	29 f4       	brne	.+10     	; 0x296a <tc_set_overflow_interrupt_callback+0x20>
    2960:	70 93 76 04 	sts	0x0476, r23	; 0x800476 <tc_tccr3_ovf_callback+0x1>
    2964:	60 93 75 04 	sts	0x0475, r22	; 0x800475 <tc_tccr3_ovf_callback>
    2968:	08 95       	ret
    296a:	80 3a       	cpi	r24, 0xA0	; 160
    296c:	91 05       	cpc	r25, r1
    296e:	29 f4       	brne	.+10     	; 0x297a <tc_set_overflow_interrupt_callback+0x30>
    2970:	70 93 6e 04 	sts	0x046E, r23	; 0x80046e <tc_tccr4_ovf_callback+0x1>
    2974:	60 93 6d 04 	sts	0x046D, r22	; 0x80046d <tc_tccr4_ovf_callback>
    2978:	08 95       	ret
    297a:	80 32       	cpi	r24, 0x20	; 32
    297c:	91 40       	sbci	r25, 0x01	; 1
    297e:	21 f4       	brne	.+8      	; 0x2988 <tc_set_overflow_interrupt_callback+0x3e>
    2980:	70 93 66 04 	sts	0x0466, r23	; 0x800466 <tc_tccr5_ovf_callback+0x1>
    2984:	60 93 65 04 	sts	0x0465, r22	; 0x800465 <tc_tccr5_ovf_callback>
    2988:	08 95       	ret

0000298a <tc_set_compa_interrupt_callback>:
    298a:	80 38       	cpi	r24, 0x80	; 128
    298c:	91 05       	cpc	r25, r1
    298e:	29 f4       	brne	.+10     	; 0x299a <tc_set_compa_interrupt_callback+0x10>
    2990:	70 93 7c 04 	sts	0x047C, r23	; 0x80047c <tc_tccr1_compa_callback+0x1>
    2994:	60 93 7b 04 	sts	0x047B, r22	; 0x80047b <tc_tccr1_compa_callback>
    2998:	08 95       	ret
    299a:	80 39       	cpi	r24, 0x90	; 144
    299c:	91 05       	cpc	r25, r1
    299e:	29 f4       	brne	.+10     	; 0x29aa <tc_set_compa_interrupt_callback+0x20>
    29a0:	70 93 74 04 	sts	0x0474, r23	; 0x800474 <tc_tccr3_compa_callback+0x1>
    29a4:	60 93 73 04 	sts	0x0473, r22	; 0x800473 <tc_tccr3_compa_callback>
    29a8:	08 95       	ret
    29aa:	80 3a       	cpi	r24, 0xA0	; 160
    29ac:	91 05       	cpc	r25, r1
    29ae:	29 f4       	brne	.+10     	; 0x29ba <tc_set_compa_interrupt_callback+0x30>
    29b0:	70 93 6c 04 	sts	0x046C, r23	; 0x80046c <tc_tccr4_compa_callback+0x1>
    29b4:	60 93 6b 04 	sts	0x046B, r22	; 0x80046b <tc_tccr4_compa_callback>
    29b8:	08 95       	ret
    29ba:	80 32       	cpi	r24, 0x20	; 32
    29bc:	91 40       	sbci	r25, 0x01	; 1
    29be:	21 f4       	brne	.+8      	; 0x29c8 <tc_set_compa_interrupt_callback+0x3e>
    29c0:	70 93 64 04 	sts	0x0464, r23	; 0x800464 <tc_tccr5_compa_callback+0x1>
    29c4:	60 93 63 04 	sts	0x0463, r22	; 0x800463 <tc_tccr5_compa_callback>
    29c8:	08 95       	ret

000029ca <main>:
 * \brief Main function of the application
 */
int main(void)
{	
	/* Initialize the Wireless Module */
	wireless_init();    
    29ca:	0e 94 a3 04 	call	0x946	; 0x946 <wireless_init>
	
	/*The Modules selected in the wizard are initialized here */
	modules_init();
    29ce:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <modules_init>
 * \brief Tasks Handled By the Stack and application are Performed here,this function is handled in a loop to perform tasks continuously 
 */
void WirelessTask(void)
{
	/* These methods are called to perform the default tasks of the MAC Stack */
	pal_task();
    29d2:	0e 94 d3 06 	call	0xda6	; 0xda6 <pal_task>
	tal_task();
    29d6:	0e 94 30 09 	call	0x1260	; 0x1260 <tal_task>
/**
 * \brief Application task
 */
 void app_task(void)
{
	usr_wireless_app_task();
    29da:	0e 94 e6 01 	call	0x3cc	; 0x3cc <usr_wireless_app_task>
    29de:	f9 cf       	rjmp	.-14     	; 0x29d2 <main+0x8>

000029e0 <tal_tx_frame_done_cb>:
 * \param frame pointer to the transmitted frame
 */
void tal_tx_frame_done_cb(retval_t status, frame_info_t *frame)
{
	/*Perform application tasks when a frame is transmitted here*/
	usr_frame_transmitted_cb(status, frame);
    29e0:	0c 94 be 03 	jmp	0x77c	; 0x77c <usr_frame_transmitted_cb>
    29e4:	08 95       	ret

000029e6 <tal_rx_frame_cb>:
 * \brief This method (callback) is called when a frame is received by the transceiver
 * \param frame pointer to the received frame
 *
 */
void tal_rx_frame_cb(frame_info_t *frame)
{
    29e6:	cf 93       	push	r28
    29e8:	df 93       	push	r29
    29ea:	ec 01       	movw	r28, r24
	/*Perform application tasks when a frame is received here*/
	usr_frame_received_cb(frame);
    29ec:	0e 94 e7 01 	call	0x3ce	; 0x3ce <usr_frame_received_cb>
	// Free-up the buffer which was used for reception once the frame is extracted.
	bmm_buffer_free(frame->buffer_header);
    29f0:	89 81       	ldd	r24, Y+1	; 0x01
    29f2:	9a 81       	ldd	r25, Y+2	; 0x02
    29f4:	0e 94 ff 06 	call	0xdfe	; 0xdfe <bmm_buffer_free>
}
    29f8:	df 91       	pop	r29
    29fa:	cf 91       	pop	r28
    29fc:	08 95       	ret

000029fe <__mulsi3>:
    29fe:	db 01       	movw	r26, r22
    2a00:	8f 93       	push	r24
    2a02:	9f 93       	push	r25
    2a04:	49 d0       	rcall	.+146    	; 0x2a98 <__muluhisi3>
    2a06:	bf 91       	pop	r27
    2a08:	af 91       	pop	r26
    2a0a:	a2 9f       	mul	r26, r18
    2a0c:	80 0d       	add	r24, r0
    2a0e:	91 1d       	adc	r25, r1
    2a10:	a3 9f       	mul	r26, r19
    2a12:	90 0d       	add	r25, r0
    2a14:	b2 9f       	mul	r27, r18
    2a16:	90 0d       	add	r25, r0
    2a18:	11 24       	eor	r1, r1
    2a1a:	08 95       	ret

00002a1c <__udivmodhi4>:
    2a1c:	aa 1b       	sub	r26, r26
    2a1e:	bb 1b       	sub	r27, r27
    2a20:	51 e1       	ldi	r21, 0x11	; 17
    2a22:	07 c0       	rjmp	.+14     	; 0x2a32 <__udivmodhi4_ep>

00002a24 <__udivmodhi4_loop>:
    2a24:	aa 1f       	adc	r26, r26
    2a26:	bb 1f       	adc	r27, r27
    2a28:	a6 17       	cp	r26, r22
    2a2a:	b7 07       	cpc	r27, r23
    2a2c:	10 f0       	brcs	.+4      	; 0x2a32 <__udivmodhi4_ep>
    2a2e:	a6 1b       	sub	r26, r22
    2a30:	b7 0b       	sbc	r27, r23

00002a32 <__udivmodhi4_ep>:
    2a32:	88 1f       	adc	r24, r24
    2a34:	99 1f       	adc	r25, r25
    2a36:	5a 95       	dec	r21
    2a38:	a9 f7       	brne	.-22     	; 0x2a24 <__udivmodhi4_loop>
    2a3a:	80 95       	com	r24
    2a3c:	90 95       	com	r25
    2a3e:	bc 01       	movw	r22, r24
    2a40:	cd 01       	movw	r24, r26
    2a42:	08 95       	ret

00002a44 <__divmodhi4>:
    2a44:	97 fb       	bst	r25, 7
    2a46:	07 2e       	mov	r0, r23
    2a48:	16 f4       	brtc	.+4      	; 0x2a4e <__divmodhi4+0xa>
    2a4a:	00 94       	com	r0
    2a4c:	06 d0       	rcall	.+12     	; 0x2a5a <__divmodhi4_neg1>
    2a4e:	77 fd       	sbrc	r23, 7
    2a50:	08 d0       	rcall	.+16     	; 0x2a62 <__divmodhi4_neg2>
    2a52:	e4 df       	rcall	.-56     	; 0x2a1c <__udivmodhi4>
    2a54:	07 fc       	sbrc	r0, 7
    2a56:	05 d0       	rcall	.+10     	; 0x2a62 <__divmodhi4_neg2>
    2a58:	3e f4       	brtc	.+14     	; 0x2a68 <__divmodhi4_exit>

00002a5a <__divmodhi4_neg1>:
    2a5a:	90 95       	com	r25
    2a5c:	81 95       	neg	r24
    2a5e:	9f 4f       	sbci	r25, 0xFF	; 255
    2a60:	08 95       	ret

00002a62 <__divmodhi4_neg2>:
    2a62:	70 95       	com	r23
    2a64:	61 95       	neg	r22
    2a66:	7f 4f       	sbci	r23, 0xFF	; 255

00002a68 <__divmodhi4_exit>:
    2a68:	08 95       	ret

00002a6a <__tablejump2__>:
    2a6a:	ee 0f       	add	r30, r30
    2a6c:	ff 1f       	adc	r31, r31
    2a6e:	88 1f       	adc	r24, r24
    2a70:	8b bf       	out	0x3b, r24	; 59
    2a72:	07 90       	elpm	r0, Z+
    2a74:	f6 91       	elpm	r31, Z
    2a76:	e0 2d       	mov	r30, r0
    2a78:	19 94       	eijmp

00002a7a <__umulhisi3>:
    2a7a:	a2 9f       	mul	r26, r18
    2a7c:	b0 01       	movw	r22, r0
    2a7e:	b3 9f       	mul	r27, r19
    2a80:	c0 01       	movw	r24, r0
    2a82:	a3 9f       	mul	r26, r19
    2a84:	70 0d       	add	r23, r0
    2a86:	81 1d       	adc	r24, r1
    2a88:	11 24       	eor	r1, r1
    2a8a:	91 1d       	adc	r25, r1
    2a8c:	b2 9f       	mul	r27, r18
    2a8e:	70 0d       	add	r23, r0
    2a90:	81 1d       	adc	r24, r1
    2a92:	11 24       	eor	r1, r1
    2a94:	91 1d       	adc	r25, r1
    2a96:	08 95       	ret

00002a98 <__muluhisi3>:
    2a98:	f0 df       	rcall	.-32     	; 0x2a7a <__umulhisi3>
    2a9a:	a5 9f       	mul	r26, r21
    2a9c:	90 0d       	add	r25, r0
    2a9e:	b4 9f       	mul	r27, r20
    2aa0:	90 0d       	add	r25, r0
    2aa2:	a4 9f       	mul	r26, r20
    2aa4:	80 0d       	add	r24, r0
    2aa6:	91 1d       	adc	r25, r1
    2aa8:	11 24       	eor	r1, r1
    2aaa:	08 95       	ret

00002aac <__adddi3_s8>:
    2aac:	00 24       	eor	r0, r0
    2aae:	a7 fd       	sbrc	r26, 7
    2ab0:	00 94       	com	r0
    2ab2:	2a 0f       	add	r18, r26
    2ab4:	30 1d       	adc	r19, r0
    2ab6:	40 1d       	adc	r20, r0
    2ab8:	50 1d       	adc	r21, r0
    2aba:	60 1d       	adc	r22, r0
    2abc:	70 1d       	adc	r23, r0
    2abe:	80 1d       	adc	r24, r0
    2ac0:	90 1d       	adc	r25, r0
    2ac2:	08 95       	ret

00002ac4 <__cmpdi2_s8>:
    2ac4:	00 24       	eor	r0, r0
    2ac6:	a7 fd       	sbrc	r26, 7
    2ac8:	00 94       	com	r0
    2aca:	2a 17       	cp	r18, r26
    2acc:	30 05       	cpc	r19, r0
    2ace:	40 05       	cpc	r20, r0
    2ad0:	50 05       	cpc	r21, r0
    2ad2:	60 05       	cpc	r22, r0
    2ad4:	70 05       	cpc	r23, r0
    2ad6:	80 05       	cpc	r24, r0
    2ad8:	90 05       	cpc	r25, r0
    2ada:	08 95       	ret

00002adc <do_rand>:
    2adc:	8f 92       	push	r8
    2ade:	9f 92       	push	r9
    2ae0:	af 92       	push	r10
    2ae2:	bf 92       	push	r11
    2ae4:	cf 92       	push	r12
    2ae6:	df 92       	push	r13
    2ae8:	ef 92       	push	r14
    2aea:	ff 92       	push	r15
    2aec:	cf 93       	push	r28
    2aee:	df 93       	push	r29
    2af0:	ec 01       	movw	r28, r24
    2af2:	68 81       	ld	r22, Y
    2af4:	79 81       	ldd	r23, Y+1	; 0x01
    2af6:	8a 81       	ldd	r24, Y+2	; 0x02
    2af8:	9b 81       	ldd	r25, Y+3	; 0x03
    2afa:	61 15       	cp	r22, r1
    2afc:	71 05       	cpc	r23, r1
    2afe:	81 05       	cpc	r24, r1
    2b00:	91 05       	cpc	r25, r1
    2b02:	21 f4       	brne	.+8      	; 0x2b0c <do_rand+0x30>
    2b04:	64 e2       	ldi	r22, 0x24	; 36
    2b06:	79 ed       	ldi	r23, 0xD9	; 217
    2b08:	8b e5       	ldi	r24, 0x5B	; 91
    2b0a:	97 e0       	ldi	r25, 0x07	; 7
    2b0c:	2d e1       	ldi	r18, 0x1D	; 29
    2b0e:	33 ef       	ldi	r19, 0xF3	; 243
    2b10:	41 e0       	ldi	r20, 0x01	; 1
    2b12:	50 e0       	ldi	r21, 0x00	; 0
    2b14:	41 d0       	rcall	.+130    	; 0x2b98 <__divmodsi4>
    2b16:	49 01       	movw	r8, r18
    2b18:	5a 01       	movw	r10, r20
    2b1a:	9b 01       	movw	r18, r22
    2b1c:	ac 01       	movw	r20, r24
    2b1e:	a7 ea       	ldi	r26, 0xA7	; 167
    2b20:	b1 e4       	ldi	r27, 0x41	; 65
    2b22:	ba df       	rcall	.-140    	; 0x2a98 <__muluhisi3>
    2b24:	6b 01       	movw	r12, r22
    2b26:	7c 01       	movw	r14, r24
    2b28:	ac ee       	ldi	r26, 0xEC	; 236
    2b2a:	b4 ef       	ldi	r27, 0xF4	; 244
    2b2c:	a5 01       	movw	r20, r10
    2b2e:	94 01       	movw	r18, r8
    2b30:	51 d0       	rcall	.+162    	; 0x2bd4 <__mulohisi3>
    2b32:	dc 01       	movw	r26, r24
    2b34:	cb 01       	movw	r24, r22
    2b36:	8c 0d       	add	r24, r12
    2b38:	9d 1d       	adc	r25, r13
    2b3a:	ae 1d       	adc	r26, r14
    2b3c:	bf 1d       	adc	r27, r15
    2b3e:	b7 ff       	sbrs	r27, 7
    2b40:	03 c0       	rjmp	.+6      	; 0x2b48 <do_rand+0x6c>
    2b42:	01 97       	sbiw	r24, 0x01	; 1
    2b44:	a1 09       	sbc	r26, r1
    2b46:	b0 48       	sbci	r27, 0x80	; 128
    2b48:	88 83       	st	Y, r24
    2b4a:	99 83       	std	Y+1, r25	; 0x01
    2b4c:	aa 83       	std	Y+2, r26	; 0x02
    2b4e:	bb 83       	std	Y+3, r27	; 0x03
    2b50:	9f 77       	andi	r25, 0x7F	; 127
    2b52:	df 91       	pop	r29
    2b54:	cf 91       	pop	r28
    2b56:	ff 90       	pop	r15
    2b58:	ef 90       	pop	r14
    2b5a:	df 90       	pop	r13
    2b5c:	cf 90       	pop	r12
    2b5e:	bf 90       	pop	r11
    2b60:	af 90       	pop	r10
    2b62:	9f 90       	pop	r9
    2b64:	8f 90       	pop	r8
    2b66:	08 95       	ret

00002b68 <rand_r>:
    2b68:	b9 cf       	rjmp	.-142    	; 0x2adc <do_rand>

00002b6a <rand>:
    2b6a:	80 e0       	ldi	r24, 0x00	; 0
    2b6c:	92 e0       	ldi	r25, 0x02	; 2
    2b6e:	b6 cf       	rjmp	.-148    	; 0x2adc <do_rand>

00002b70 <srand>:
    2b70:	a0 e0       	ldi	r26, 0x00	; 0
    2b72:	b0 e0       	ldi	r27, 0x00	; 0
    2b74:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
    2b78:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
    2b7c:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <__DATA_REGION_ORIGIN__+0x2>
    2b80:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <__DATA_REGION_ORIGIN__+0x3>
    2b84:	08 95       	ret

00002b86 <memcpy>:
    2b86:	fb 01       	movw	r30, r22
    2b88:	dc 01       	movw	r26, r24
    2b8a:	02 c0       	rjmp	.+4      	; 0x2b90 <memcpy+0xa>
    2b8c:	01 90       	ld	r0, Z+
    2b8e:	0d 92       	st	X+, r0
    2b90:	41 50       	subi	r20, 0x01	; 1
    2b92:	50 40       	sbci	r21, 0x00	; 0
    2b94:	d8 f7       	brcc	.-10     	; 0x2b8c <memcpy+0x6>
    2b96:	08 95       	ret

00002b98 <__divmodsi4>:
    2b98:	05 2e       	mov	r0, r21
    2b9a:	97 fb       	bst	r25, 7
    2b9c:	16 f4       	brtc	.+4      	; 0x2ba2 <__divmodsi4+0xa>
    2b9e:	00 94       	com	r0
    2ba0:	0f d0       	rcall	.+30     	; 0x2bc0 <__negsi2>
    2ba2:	57 fd       	sbrc	r21, 7
    2ba4:	05 d0       	rcall	.+10     	; 0x2bb0 <__divmodsi4_neg2>
    2ba6:	1a d0       	rcall	.+52     	; 0x2bdc <__udivmodsi4>
    2ba8:	07 fc       	sbrc	r0, 7
    2baa:	02 d0       	rcall	.+4      	; 0x2bb0 <__divmodsi4_neg2>
    2bac:	46 f4       	brtc	.+16     	; 0x2bbe <__divmodsi4_exit>
    2bae:	08 c0       	rjmp	.+16     	; 0x2bc0 <__negsi2>

00002bb0 <__divmodsi4_neg2>:
    2bb0:	50 95       	com	r21
    2bb2:	40 95       	com	r20
    2bb4:	30 95       	com	r19
    2bb6:	21 95       	neg	r18
    2bb8:	3f 4f       	sbci	r19, 0xFF	; 255
    2bba:	4f 4f       	sbci	r20, 0xFF	; 255
    2bbc:	5f 4f       	sbci	r21, 0xFF	; 255

00002bbe <__divmodsi4_exit>:
    2bbe:	08 95       	ret

00002bc0 <__negsi2>:
    2bc0:	90 95       	com	r25
    2bc2:	80 95       	com	r24
    2bc4:	70 95       	com	r23
    2bc6:	61 95       	neg	r22
    2bc8:	7f 4f       	sbci	r23, 0xFF	; 255
    2bca:	8f 4f       	sbci	r24, 0xFF	; 255
    2bcc:	9f 4f       	sbci	r25, 0xFF	; 255
    2bce:	08 95       	ret

00002bd0 <__mulshisi3>:
    2bd0:	b7 ff       	sbrs	r27, 7
    2bd2:	62 cf       	rjmp	.-316    	; 0x2a98 <__muluhisi3>

00002bd4 <__mulohisi3>:
    2bd4:	61 df       	rcall	.-318    	; 0x2a98 <__muluhisi3>
    2bd6:	82 1b       	sub	r24, r18
    2bd8:	93 0b       	sbc	r25, r19
    2bda:	08 95       	ret

00002bdc <__udivmodsi4>:
    2bdc:	a1 e2       	ldi	r26, 0x21	; 33
    2bde:	1a 2e       	mov	r1, r26
    2be0:	aa 1b       	sub	r26, r26
    2be2:	bb 1b       	sub	r27, r27
    2be4:	fd 01       	movw	r30, r26
    2be6:	0d c0       	rjmp	.+26     	; 0x2c02 <__udivmodsi4_ep>

00002be8 <__udivmodsi4_loop>:
    2be8:	aa 1f       	adc	r26, r26
    2bea:	bb 1f       	adc	r27, r27
    2bec:	ee 1f       	adc	r30, r30
    2bee:	ff 1f       	adc	r31, r31
    2bf0:	a2 17       	cp	r26, r18
    2bf2:	b3 07       	cpc	r27, r19
    2bf4:	e4 07       	cpc	r30, r20
    2bf6:	f5 07       	cpc	r31, r21
    2bf8:	20 f0       	brcs	.+8      	; 0x2c02 <__udivmodsi4_ep>
    2bfa:	a2 1b       	sub	r26, r18
    2bfc:	b3 0b       	sbc	r27, r19
    2bfe:	e4 0b       	sbc	r30, r20
    2c00:	f5 0b       	sbc	r31, r21

00002c02 <__udivmodsi4_ep>:
    2c02:	66 1f       	adc	r22, r22
    2c04:	77 1f       	adc	r23, r23
    2c06:	88 1f       	adc	r24, r24
    2c08:	99 1f       	adc	r25, r25
    2c0a:	1a 94       	dec	r1
    2c0c:	69 f7       	brne	.-38     	; 0x2be8 <__udivmodsi4_loop>
    2c0e:	60 95       	com	r22
    2c10:	70 95       	com	r23
    2c12:	80 95       	com	r24
    2c14:	90 95       	com	r25
    2c16:	9b 01       	movw	r18, r22
    2c18:	ac 01       	movw	r20, r24
    2c1a:	bd 01       	movw	r22, r26
    2c1c:	cf 01       	movw	r24, r30
    2c1e:	08 95       	ret

00002c20 <_exit>:
    2c20:	f8 94       	cli

00002c22 <__stop_program>:
    2c22:	ff cf       	rjmp	.-2      	; 0x2c22 <__stop_program>
